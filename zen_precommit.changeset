diff --git a/src/client/ws_client/tests.rs b/src/client/ws_client/tests.rs
index 0ab2365..b9300f3 100644
--- a/src/client/ws_client/tests.rs
+++ b/src/client/ws_client/tests.rs
@@ -18,7 +18,7 @@ async fn test_single_package_payload_preservation() {
                 value: "event".to_string(),
             },
             Header {
-                key: "message_id",
+                key: "message_id".to_string(),
                 value: "test_msg_001".to_string(),
             },
             // 没有 sum 和 seq 头部，应该默认为单包
@@ -59,7 +59,7 @@ async fn test_multi_package_payload_combination() {
                 value: "event".to_string(),
             },
             Header {
-                key: "message_id",
+                key: "message_id".to_string(),
                 value: "test_msg_002".to_string(),
             },
             Header {
@@ -93,7 +93,7 @@ async fn test_multi_package_payload_combination() {
                 value: "event".to_string(),
             },
             Header {
-                key: "message_id",
+                key: "message_id".to_string(),
                 value: "test_msg_002".to_string(),
             },
             Header {
diff --git a/src/core/endpoints.rs b/src/core/endpoints.rs
index 90ce035..deeb2e2 100644
--- a/src/core/endpoints.rs
+++ b/src/core/endpoints.rs
@@ -337,17 +337,6 @@ impl Endpoints {
     /// 获取录制列表
     pub const VC_RECORDING_LIST: &'static str = "/open-apis/vc/v1/meetings/{meeting_id}/recordings";
 
-    /// 获取录制详情
-    pub const VC_RECORDING_GET: &'static str = "/open-apis/vc/v1/recordings/{recording_id}";
-
-    /// 开始录制
-    pub const VC_RECORDING_START: &'static str =
-        "/open-apis/vc/v1/meetings/{meeting_id}/recordings/start";
-
-    /// 停止录制
-    pub const VC_RECORDING_STOP: &'static str =
-        "/open-apis/vc/v1/meetings/{meeting_id}/recordings/stop";
-
     // 预约管理
     /// 获取预约列表
     pub const VC_RESERVE_LIST: &'static str = "/open-apis/vc/v1/reserves";
@@ -364,6 +353,90 @@ impl Endpoints {
     /// 删除预约
     pub const VC_RESERVE_DELETE: &'static str = "/open-apis/vc/v1/reserves/{reserve_id}";
 
+    // VC会议室搜索
+    /// 搜索会议室
+    pub const VC_ROOM_SEARCH: &'static str = "/open-apis/vc/v1/rooms/search";
+
+    // VC会议管理
+    /// 根据会议号获取会议列表
+    pub const VC_MEETING_LIST_BY_NO: &'static str = "/open-apis/vc/v1/meetings/list_by_no";
+
+    /// 设置会议主持人
+    pub const VC_MEETING_SET_HOST: &'static str = "/open-apis/vc/v1/meetings/{meeting_id}/set_host";
+
+    /// 开始录制
+    pub const VC_RECORDING_START: &'static str =
+        "/open-apis/vc/v1/meetings/{meeting_id}/recording/start";
+
+    /// 停止录制
+    pub const VC_RECORDING_STOP: &'static str =
+        "/open-apis/vc/v1/meetings/{meeting_id}/recording/stop";
+
+    /// 获取录制文件
+    pub const VC_RECORDING_GET: &'static str = "/open-apis/vc/v1/meetings/{meeting_id}/recording";
+
+    /// 设置录制权限
+    pub const VC_RECORDING_SET_PERMISSION: &'static str =
+        "/open-apis/vc/v1/meetings/{meeting_id}/recording/set_permission";
+
+    // VC预约管理
+    /// 获取活跃会议
+    pub const VC_RESERVE_GET_ACTIVE_MEETING: &'static str =
+        "/open-apis/vc/v1/reserves/{reserve_id}/get_active_meeting";
+
+    // ==================== Lingo 知识管理服务端点 ====================
+
+    // 分类管理
+    /// 获取词典分类
+    pub const LINGO_CLASSIFICATION_LIST: &'static str = "/open-apis/lingo/v1/classifications";
+
+    // 草稿管理
+    /// 创建草稿
+    pub const LINGO_DRAFT_CREATE: &'static str = "/open-apis/lingo/v1/drafts";
+
+    /// 更新草稿 (需要使用 EndpointBuilder::replace_param 替换 {draft_id})
+    pub const LINGO_DRAFT_UPDATE: &'static str = "/open-apis/lingo/v1/drafts/{draft_id}";
+
+    // 词条管理
+    /// 创建词条
+    pub const LINGO_ENTITY_CREATE: &'static str = "/open-apis/lingo/v1/entities";
+
+    /// 获取词条详情 (需要使用 EndpointBuilder::replace_param 替换 {entity_id})
+    pub const LINGO_ENTITY_GET: &'static str = "/open-apis/lingo/v1/entities/{entity_id}";
+
+    /// 更新词条 (需要使用 EndpointBuilder::replace_param 替换 {entity_id})
+    pub const LINGO_ENTITY_UPDATE: &'static str = "/open-apis/lingo/v1/entities/{entity_id}";
+
+    /// 搜索词条
+    pub const LINGO_ENTITY_SEARCH: &'static str = "/open-apis/lingo/v1/entities/search";
+
+    /// 词条匹配
+    pub const LINGO_ENTITY_MATCH: &'static str = "/open-apis/lingo/v1/entities/match";
+
+    /// 提取可能的词条
+    pub const LINGO_ENTITY_HIGHLIGHT: &'static str = "/open-apis/lingo/v1/entities/highlight";
+
+    // 文件管理
+    /// 上传文件
+    pub const LINGO_FILE_UPLOAD: &'static str = "/open-apis/lingo/v1/file/upload";
+
+    /// 下载文件 (需要使用 EndpointBuilder::replace_param 替换 {file_token})
+    pub const LINGO_FILE_DOWNLOAD: &'static str = "/open-apis/lingo/v1/file/download/{file_token}";
+
+    // 知识库管理
+    /// 获取知识库列表
+    pub const LINGO_REPO_LIST: &'static str = "/open-apis/lingo/v1/repos";
+
+    // ==================== 租户管理服务端点 ====================
+
+    // 租户信息
+    /// 查询租户信息
+    pub const TENANT_V2_QUERY: &'static str = "/open-apis/tenant/v2/tenant/query";
+
+    /// 查询租户产品配置信息
+    pub const TENANT_V2_PRODUCT_ASSIGN_INFO_QUERY: &'static str =
+        "/open-apis/tenant/v2/tenant_product_assign_info/query";
+
     // ==================== 即时消息服务端点 ====================
 
     // 消息管理 - v1版本
@@ -415,37 +488,46 @@ impl Endpoints {
 
     // 消息表情回应
     /// 添加消息表情回应
-    pub const IM_V1_MESSAGE_REACTIONS: &'static str = "/open-apis/im/v1/messages/{message_id}/reactions";
+    pub const IM_V1_MESSAGE_REACTIONS: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/reactions";
 
     /// 删除消息表情回应
-    pub const IM_V1_DELETE_MESSAGE_REACTION: &'static str = "/open-apis/im/v1/messages/{message_id}/reactions/{reaction_id}";
+    pub const IM_V1_DELETE_MESSAGE_REACTION: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/reactions/{reaction_id}";
 
     // 批量消息
     /// 批量发送消息
     pub const IM_V1_BATCH_MESSAGES: &'static str = "/open-apis/im/v1/batch_messages";
 
     /// 批量撤回消息
-    pub const IM_V1_DELETE_BATCH_MESSAGE: &'static str = "/open-apis/im/v1/batch_messages/{batch_message_id}";
+    pub const IM_V1_DELETE_BATCH_MESSAGE: &'static str =
+        "/open-apis/im/v1/batch_messages/{batch_message_id}";
 
     /// 查询批量发送消息进度
-    pub const IM_V1_BATCH_MESSAGE_PROGRESS: &'static str = "/open-apis/im/v1/batch_messages/{batch_message_id}/get_progress";
+    pub const IM_V1_BATCH_MESSAGE_PROGRESS: &'static str =
+        "/open-apis/im/v1/batch_messages/{batch_message_id}/get_progress";
 
     /// 查询批量发送消息已读状态
-    pub const IM_V1_BATCH_MESSAGE_READ_USER: &'static str = "/open-apis/im/v1/batch_messages/{batch_message_id}/read_user";
+    pub const IM_V1_BATCH_MESSAGE_READ_USER: &'static str =
+        "/open-apis/im/v1/batch_messages/{batch_message_id}/read_user";
 
     // 紧急消息/消息加急
     /// 应用内加急
-    pub const IM_V1_MESSAGE_URGENT_APP: &'static str = "/open-apis/im/v1/messages/{message_id}/urgent_app";
+    pub const IM_V1_MESSAGE_URGENT_APP: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/urgent_app";
 
     /// 短信加急
-    pub const IM_V1_MESSAGE_URGENT_SMS: &'static str = "/open-apis/im/v1/messages/{message_id}/urgent_sms";
+    pub const IM_V1_MESSAGE_URGENT_SMS: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/urgent_sms";
 
     /// 电话加急
-    pub const IM_V1_MESSAGE_URGENT_PHONE: &'static str = "/open-apis/im/v1/messages/{message_id}/urgent_phone";
+    pub const IM_V1_MESSAGE_URGENT_PHONE: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/urgent_phone";
 
     // 延时更新卡片
     /// 延时更新卡片
-    pub const IM_V1_MESSAGE_DELAY_UPDATE: &'static str = "/open-apis/im/v1/messages/{message_id}/delay_update";
+    pub const IM_V1_MESSAGE_DELAY_UPDATE: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/delay_update";
 
     // Pin 消息
     /// 创建Pin消息
@@ -469,7 +551,21 @@ impl Endpoints {
 
     // URL预览
     /// 批量更新消息URL预览
-    pub const IM_V1_MESSAGE_URL_PREVIEW_BATCH_UPDATE: &'static str = "/open-apis/im/v1/messages/{message_id}/url_preview/batch_update";
+    pub const IM_V1_MESSAGE_URL_PREVIEW_BATCH_UPDATE: &'static str =
+        "/open-apis/im/v1/messages/{message_id}/url_preview/batch_update";
+    
+    // 基础消息操作
+    /// 获取消息详情 (需要使用 EndpointBuilder::replace_param 替换 {message_id})
+    pub const IM_V1_MESSAGE_GET: &'static str =
+        "/open-apis/im/v1/messages/{message_id}";
+        
+    /// 更新消息内容 (需要使用 EndpointBuilder::replace_param 替换 {message_id})
+    pub const IM_V1_MESSAGE_PATCH: &'static str =
+        "/open-apis/im/v1/messages/{message_id}";
+        
+    /// 删除消息 (需要使用 EndpointBuilder::replace_param 替换 {message_id})
+    pub const IM_V1_MESSAGE_DELETE: &'static str =
+        "/open-apis/im/v1/messages/{message_id}";
 
     // V2 API 端点
     // App feed card
@@ -484,10 +580,12 @@ impl Endpoints {
 
     // Groups bots
     /// 群机器人时间敏感性设置
-    pub const IM_V2_GROUPS_BOTS_TIME_SENSITIVE: &'static str = "/open-apis/im/v2/groups-bots/bot_time_sentive";
+    pub const IM_V2_GROUPS_BOTS_TIME_SENSITIVE: &'static str =
+        "/open-apis/im/v2/groups-bots/bot_time_sentive";
 
     /// 更新群机器人消息
-    pub const IM_V2_GROUPS_BOTS_UPDATE: &'static str = "/open-apis/im/v2/groups-bots/{message_id}/update";
+    pub const IM_V2_GROUPS_BOTS_UPDATE: &'static str =
+        "/open-apis/im/v2/groups-bots/{message_id}/update";
 
     /// 批量更新群机器人设置
     pub const IM_V2_GROUPS_BOTS_PATCH: &'static str = "/open-apis/im/v2/groups-bots/patch";
@@ -525,6 +623,144 @@ impl Endpoints {
     /// 分片上传文件-完成上传
     pub const DRIVE_V1_UPLOAD_FINISH: &'static str = "/open-apis/drive/v1/files/upload_finish";
 
+    // ==================== 审批服务端点 ====================
+
+    // ===== 审批管理端点 =====
+
+    /// 创建审批定义
+    pub const APPROVAL_V4_APPROVALS: &'static str = "/open-apis/approval/v4/approvals";
+
+    /// 获取审批定义 (需要使用 EndpointBuilder::replace_param 替换 {approval_code})
+    pub const APPROVAL_V4_APPROVAL_GET: &'static str =
+        "/open-apis/approval/v4/approvals/{approval_code}";
+
+    // ===== 外部审批端点 =====
+
+    /// 创建外部审批
+    pub const APPROVAL_V4_EXTERNAL_APPROVALS: &'static str =
+        "/open-apis/approval/v4/external_approvals";
+
+    /// 获取外部审批 (需要使用 EndpointBuilder::replace_param 替换 {approval_code})
+    pub const APPROVAL_V4_EXTERNAL_APPROVAL_GET: &'static str =
+        "/open-apis/approval/v4/external_approvals/{approval_code}";
+
+    // ===== 文件上传端点 =====
+
+    /// 上传文件
+    pub const APPROVAL_V4_FILE_UPLOAD: &'static str = "/open-apis/approval/v4/files/upload";
+
+    // ===== 实例管理端点 =====
+
+    /// 创建审批实例
+    pub const APPROVAL_V4_INSTANCES: &'static str = "/open-apis/approval/v4/instances";
+
+    /// 获取审批实例列表
+    pub const APPROVAL_V4_INSTANCES_LIST: &'static str = "/open-apis/approval/v4/instances";
+
+    /// 获取审批实例 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_INSTANCE_GET: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}";
+
+    /// 取消审批实例 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_INSTANCE_CANCEL: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}/cancel";
+
+    /// 抄送审批实例 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_INSTANCE_CC: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}/cc";
+
+    /// 预览审批实例
+    pub const APPROVAL_V4_INSTANCE_PREVIEW: &'static str =
+        "/open-apis/approval/v4/instances/preview";
+
+    // ===== 实例评论端点 =====
+
+    /// 创建实例评论 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_INSTANCE_COMMENTS_CREATE: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}/comments";
+
+    /// 删除实例评论 (需要使用 EndpointBuilder::replace_param 替换 {instance_code} 和 {comment_id})
+    pub const APPROVAL_V4_INSTANCE_COMMENT_DELETE: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}/comments/{comment_id}";
+
+    /// 获取实例评论列表 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_INSTANCE_COMMENTS_LIST: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}/comments";
+
+    /// 回复实例评论 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_INSTANCE_COMMENTS_REPLY: &'static str =
+        "/open-apis/approval/v4/instances/{instance_code}/comments";
+
+    // ===== 外部实例端点 =====
+
+    /// 创建外部实例
+    pub const APPROVAL_V4_EXTERNAL_INSTANCES: &'static str =
+        "/open-apis/approval/v4/external_instances";
+
+    /// 校验外部实例 (需要使用 EndpointBuilder::replace_param 替换 {instance_code})
+    pub const APPROVAL_V4_EXTERNAL_INSTANCE_CHECK: &'static str =
+        "/open-apis/approval/v4/external_instances/{instance_code}/check";
+
+    // ===== 外部任务端点 =====
+
+    /// 创建外部任务
+    pub const APPROVAL_V4_EXTERNAL_TASKS: &'static str = "/open-apis/approval/v4/external_tasks";
+
+    // ===== 消息管理端点 =====
+
+    /// 发送消息
+    pub const APPROVAL_V4_MESSAGES: &'static str = "/open-apis/approval/v4/messages";
+
+    /// 更新消息 (需要使用 EndpointBuilder::replace_param 替换 {message_id})
+    pub const APPROVAL_V4_MESSAGE_PATCH: &'static str =
+        "/open-apis/approval/v4/messages/{message_id}";
+
+    // ===== 搜索端点 =====
+
+    /// 搜索审批实例
+    pub const APPROVAL_V4_INSTANCES_SEARCH: &'static str =
+        "/open-apis/approval/v4/instances/search";
+
+    /// 搜索审批任务
+    pub const APPROVAL_V4_TASKS_SEARCH: &'static str = "/open-apis/approval/v4/tasks/search";
+
+    /// 搜索抄送实例
+    pub const APPROVAL_V4_INSTANCES_SEARCH_CC: &'static str =
+        "/open-apis/approval/v4/instances/search_cc";
+
+    /// 搜索审批定义
+    pub const APPROVAL_V4_APPROVALS_SEARCH: &'static str =
+        "/open-apis/approval/v4/approvals/search";
+
+    /// 查询任务
+    pub const APPROVAL_V4_TASKS_QUERY: &'static str = "/open-apis/approval/v4/tasks/query";
+
+    // ===== 任务处理端点 =====
+
+    /// 同意任务 (需要使用 EndpointBuilder::replace_param 替换 {task_id})
+    pub const APPROVAL_V4_TASK_APPROVE: &'static str =
+        "/open-apis/approval/v4/tasks/{task_id}/approve";
+
+    /// 拒绝任务 (需要使用 EndpointBuilder::replace_param 替换 {task_id})
+    pub const APPROVAL_V4_TASK_REJECT: &'static str =
+        "/open-apis/approval/v4/tasks/{task_id}/reject";
+
+    /// 转交任务 (需要使用 EndpointBuilder::replace_param 替换 {task_id})
+    pub const APPROVAL_V4_TASK_TRANSFER: &'static str =
+        "/open-apis/approval/v4/tasks/{task_id}/transfer";
+
+    /// 指定回退任务 (需要使用 EndpointBuilder::replace_param 替换 {task_id})
+    pub const APPROVAL_V4_TASK_SPECIFIED_ROLLBACK: &'static str =
+        "/open-apis/approval/v4/tasks/{task_id}/specified_rollback";
+
+    /// 加签任务 (需要使用 EndpointBuilder::replace_param 替换 {task_id})
+    pub const APPROVAL_V4_TASK_ADD_SIGN: &'static str =
+        "/open-apis/approval/v4/tasks/{task_id}/add_sign";
+
+    /// 重新提交任务 (需要使用 EndpointBuilder::replace_param 替换 {task_id})
+    pub const APPROVAL_V4_TASK_RESUBMIT: &'static str =
+        "/open-apis/approval/v4/tasks/{task_id}/resubmit";
+
     // ==================== 身份验证服务端点 ====================
 
     /// 获取访问令牌
@@ -601,6 +837,12 @@ impl Endpoints {
 
     /// 获取日历列表
     pub const CALENDAR_LIST: &'static str = "/open-apis/calendar/v4/calendars";
+    
+    /// 设置主日历
+    pub const CALENDAR_PRIMARY: &'static str = "/open-apis/calendar/v4/calendars/{calendar_id}/primary";
+    
+    /// 搜索日历
+    pub const CALENDAR_SEARCH: &'static str = "/open-apis/calendar/v4/calendars/{calendar_id}/search";
 
     // 日程管理
     /// 创建日程
@@ -622,6 +864,14 @@ impl Endpoints {
     /// 获取日程列表
     pub const CALENDAR_EVENT_LIST: &'static str =
         "/open-apis/calendar/v4/calendars/{calendar_id}/events";
+    
+    /// 回复日程邀请
+    pub const CALENDAR_EVENT_REPLY: &'static str =
+        "/open-apis/calendar/v4/calendars/{calendar_id}/events/{event_id}/reply";
+    
+    /// 搜索日程
+    pub const CALENDAR_EVENT_SEARCH: &'static str =
+        "/open-apis/calendar/v4/calendars/{calendar_id}/events/{event_id}/search";
 
     // ==================== AI Document AI 相关端点 ====================
     /// 简历解析
@@ -716,43 +966,54 @@ impl Endpoints {
 
     // 参数化端点常量
     /// 获取/更新/删除特定附件
-    pub const TASK_V2_ATTACHMENT_GET: &'static str = "/open-apis/task/v2/attachments/{attachment_guid}";
+    pub const TASK_V2_ATTACHMENT_GET: &'static str =
+        "/open-apis/task/v2/attachments/{attachment_guid}";
 
     /// 获取/更新/删除特定自定义字段
-    pub const TASK_V2_CUSTOM_FIELD_GET: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}";
+    pub const TASK_V2_CUSTOM_FIELD_GET: &'static str =
+        "/open-apis/task/v2/custom_fields/{custom_field_guid}";
 
     /// 添加自定义字段选项
-    pub const TASK_V2_CUSTOM_FIELD_ADD: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/add";
+    pub const TASK_V2_CUSTOM_FIELD_ADD: &'static str =
+        "/open-apis/task/v2/custom_fields/{custom_field_guid}/add";
 
     /// 移除自定义字段选项
-    pub const TASK_V2_CUSTOM_FIELD_REMOVE: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/remove";
+    pub const TASK_V2_CUSTOM_FIELD_REMOVE: &'static str =
+        "/open-apis/task/v2/custom_fields/{custom_field_guid}/remove";
 
     /// 自定义字段选项管理
-    pub const TASK_V2_CUSTOM_FIELD_OPTIONS: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/options";
+    pub const TASK_V2_CUSTOM_FIELD_OPTIONS: &'static str =
+        "/open-apis/task/v2/custom_fields/{custom_field_guid}/options";
 
     /// 获取/更新/删除特定自定义字段选项
-    pub const TASK_V2_CUSTOM_FIELD_OPTION_GET: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/options/{option_guid}";
+    pub const TASK_V2_CUSTOM_FIELD_OPTION_GET: &'static str =
+        "/open-apis/task/v2/custom_fields/{custom_field_guid}/options/{option_guid}";
 
     /// 获取/更新/删除特定分组
     pub const TASK_V2_SECTION_GET: &'static str = "/open-apis/task/v2/sections/{section_guid}";
 
     /// 分组任务管理
-    pub const TASK_V2_SECTION_TASKS: &'static str = "/open-apis/task/v2/sections/{section_guid}/tasks";
+    pub const TASK_V2_SECTION_TASKS: &'static str =
+        "/open-apis/task/v2/sections/{section_guid}/tasks";
 
     /// 获取/更新/删除特定任务清单
     pub const TASK_V2_TASKLIST_GET: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}";
 
     /// 任务清单添加成员
-    pub const TASK_V2_TASKLIST_ADD_MEMBERS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/add_members";
+    pub const TASK_V2_TASKLIST_ADD_MEMBERS: &'static str =
+        "/open-apis/task/v2/tasklists/{tasklist_guid}/add_members";
 
     /// 任务清单移除成员
-    pub const TASK_V2_TASKLIST_REMOVE_MEMBERS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/remove_members";
+    pub const TASK_V2_TASKLIST_REMOVE_MEMBERS: &'static str =
+        "/open-apis/task/v2/tasklists/{tasklist_guid}/remove_members";
 
     /// 任务清单任务管理
-    pub const TASK_V2_TASKLIST_TASKS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/tasks";
+    pub const TASK_V2_TASKLIST_TASKS: &'static str =
+        "/open-apis/task/v2/tasklists/{tasklist_guid}/tasks";
 
     /// 任务清单活动订阅
-    pub const TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions";
+    pub const TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS: &'static str =
+        "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions";
 
     /// 获取/更新/删除特定活动订阅
     pub const TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions/{activity_subscription_guid}";
@@ -761,69 +1022,90 @@ impl Endpoints {
     pub const TASK_V2_TASK_GET: &'static str = "/open-apis/task/v2/tasks/{task_guid}";
 
     /// 任务添加成员
-    pub const TASK_V2_TASK_ADD_MEMBERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/add_members";
+    pub const TASK_V2_TASK_ADD_MEMBERS: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/add_members";
 
     /// 任务移除成员
-    pub const TASK_V2_TASK_REMOVE_MEMBERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/remove_members";
+    pub const TASK_V2_TASK_REMOVE_MEMBERS: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/remove_members";
 
     /// 任务添加提醒
-    pub const TASK_V2_TASK_ADD_REMINDERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/add_reminders";
+    pub const TASK_V2_TASK_ADD_REMINDERS: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/add_reminders";
 
     /// 任务移除提醒
-    pub const TASK_V2_TASK_REMOVE_REMINDERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/remove_reminders";
+    pub const TASK_V2_TASK_REMOVE_REMINDERS: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/remove_reminders";
 
     /// 任务添加依赖
-    pub const TASK_V2_TASK_ADD_DEPENDENCIES: &'static str = "/open-apis/task/v2/tasks/{task_guid}/add_dependencies";
+    pub const TASK_V2_TASK_ADD_DEPENDENCIES: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/add_dependencies";
 
     /// 任务移除依赖
-    pub const TASK_V2_TASK_REMOVE_DEPENDENCIES: &'static str = "/open-apis/task/v2/tasks/{task_guid}/remove_dependencies";
+    pub const TASK_V2_TASK_REMOVE_DEPENDENCIES: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/remove_dependencies";
 
     /// 任务评论管理
     pub const TASK_V2_TASK_COMMENTS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/comments";
 
     /// 获取/更新/删除特定任务评论
-    pub const TASK_V2_TASK_COMMENT_GET: &'static str = "/open-apis/task/v2/tasks/{task_guid}/comments/{comment_id}";
+    pub const TASK_V2_TASK_COMMENT_GET: &'static str =
+        "/open-apis/task/v2/tasks/{task_guid}/comments/{comment_id}";
 
     /// 任务子任务管理
     pub const TASK_V2_TASK_SUBTASKS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/subtasks";
 
     // ==================== APaaS 平台即服务相关端点 ====================
-    
+
     // ===== 座位管理端点 =====
     /// 查询座位分配列表
-    pub const APASS_V1_SEAT_ASSIGNMENT_LIST: &'static str = "/open-apis/apaas/v1/seat_assignment/list";
+    pub const APASS_V1_SEAT_ASSIGNMENT_LIST: &'static str =
+        "/open-apis/apaas/v1/seat_assignment/list";
     /// 查询座位活动列表
     pub const APASS_V1_SEAT_ACTIVITY_LIST: &'static str = "/open-apis/apaas/v1/seat_activity/list";
 
     // ===== 流程管理端点 =====
     /// 执行流程
-    pub const APASS_V1_FLOW_EXECUTE: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/{flow_api_name}/execute";
+    pub const APASS_V1_FLOW_EXECUTE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/{flow_api_name}/execute";
     /// 查询用户任务
-    pub const APASS_V1_FLOW_USER_TASK_QUERY: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/query";
+    pub const APASS_V1_FLOW_USER_TASK_QUERY: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/query";
     /// 同意用户任务
-    pub const APASS_V1_FLOW_USER_TASK_AGREE: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/agree";
+    pub const APASS_V1_FLOW_USER_TASK_AGREE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/agree";
     /// 拒绝用户任务
-    pub const APASS_V1_FLOW_USER_TASK_REJECT: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/reject";
+    pub const APASS_V1_FLOW_USER_TASK_REJECT: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/reject";
     /// 转发用户任务
-    pub const APASS_V1_FLOW_USER_TASK_TRANSFER: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/transfer";
+    pub const APASS_V1_FLOW_USER_TASK_TRANSFER: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/transfer";
     /// 添加用户任务处理人
-    pub const APASS_V1_FLOW_USER_TASK_ADD_ASSIGNEE: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/add_assignee";
+    pub const APASS_V1_FLOW_USER_TASK_ADD_ASSIGNEE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/add_assignee";
     /// 抄送用户任务
-    pub const APASS_V1_FLOW_USER_TASK_CC: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/cc";
+    pub const APASS_V1_FLOW_USER_TASK_CC: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/cc";
     /// 催办用户任务
-    pub const APASS_V1_FLOW_USER_TASK_EXPEDITING: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/expediting";
+    pub const APASS_V1_FLOW_USER_TASK_EXPEDITING: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/expediting";
     /// 取消用户任务
-    pub const APASS_V1_FLOW_USER_TASK_CANCEL: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/cancel";
+    pub const APASS_V1_FLOW_USER_TASK_CANCEL: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/cancel";
     /// 查询用户任务回退点
-    pub const APASS_V1_FLOW_USER_TASK_ROLLBACK_POINTS: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback_points";
+    pub const APASS_V1_FLOW_USER_TASK_ROLLBACK_POINTS: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback_points";
     /// 回退用户任务
-    pub const APASS_V1_FLOW_USER_TASK_ROLLBACK: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback";
+    pub const APASS_V1_FLOW_USER_TASK_ROLLBACK: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback";
     /// 获取用户任务群聊
-    pub const APASS_V1_FLOW_USER_TASK_CHAT_GROUP: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/chat_group";
+    pub const APASS_V1_FLOW_USER_TASK_CHAT_GROUP: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/chat_group";
 
     // ===== 函数管理端点 =====
     /// 调用函数
-    pub const APASS_V1_FUNCTION_INVOKE: &'static str = "/open-apis/apaas/v1/application/{app_id}/function/{function_name}/invoke";
+    pub const APASS_V1_FUNCTION_INVOKE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/function/{function_name}/invoke";
 
     // ===== 权限管理端点 =====
     /// 批量移除角色成员
@@ -831,7 +1113,8 @@ impl Endpoints {
     /// 批量添加角色成员
     pub const APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/members/batch_create";
     /// 获取角色成员
-    pub const APASS_V1_PERMISSION_ROLE_MEMBER_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/member/{user_id}";
+    pub const APASS_V1_PERMISSION_ROLE_MEMBER_GET: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/member/{user_id}";
     /// 批量移除记录权限成员
     pub const APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_REMOVE: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/record_permission/{record_permission_api_name}/members/batch_remove";
     /// 批量添加记录权限成员
@@ -839,43 +1122,60 @@ impl Endpoints {
 
     // ===== 对象管理端点 =====
     /// OQL 查询
-    pub const APASS_V1_OBJECT_OQL: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/oql";
+    pub const APASS_V1_OBJECT_OQL: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/oql";
     /// 搜索记录
-    pub const APASS_V1_OBJECT_RECORD_SEARCH: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/search";
+    pub const APASS_V1_OBJECT_RECORD_SEARCH: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/search";
     /// 获取记录
-    pub const APASS_V1_OBJECT_RECORD_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
+    pub const APASS_V1_OBJECT_RECORD_GET: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
     /// 更新记录
-    pub const APASS_V1_OBJECT_RECORD_UPDATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
+    pub const APASS_V1_OBJECT_RECORD_UPDATE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
     /// 删除记录
-    pub const APASS_V1_OBJECT_RECORD_DELETE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
+    pub const APASS_V1_OBJECT_RECORD_DELETE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
     /// 创建记录
-    pub const APASS_V1_OBJECT_RECORD_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record";
+    pub const APASS_V1_OBJECT_RECORD_CREATE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record";
     /// 批量更新记录
-    pub const APASS_V1_OBJECT_RECORD_BATCH_UPDATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_update";
+    pub const APASS_V1_OBJECT_RECORD_BATCH_UPDATE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_update";
     /// 批量查询记录
-    pub const APASS_V1_OBJECT_RECORD_BATCH_QUERY: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_query";
+    pub const APASS_V1_OBJECT_RECORD_BATCH_QUERY: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_query";
     /// 批量删除记录
-    pub const APASS_V1_OBJECT_RECORD_BATCH_DELETE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_delete";
+    pub const APASS_V1_OBJECT_RECORD_BATCH_DELETE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_delete";
     /// 批量创建记录
-    pub const APASS_V1_OBJECT_RECORD_BATCH_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_create";
+    pub const APASS_V1_OBJECT_RECORD_BATCH_CREATE: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_create";
 
     // ===== 环境变量管理端点 =====
     /// 查询环境变量
-    pub const APASS_V1_ENVIRONMENT_VARIABLE_QUERY: &'static str = "/open-apis/apaas/v1/application/{app_id}/environment_variable/query";
+    pub const APASS_V1_ENVIRONMENT_VARIABLE_QUERY: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/environment_variable/query";
     /// 获取环境变量
-    pub const APASS_V1_ENVIRONMENT_VARIABLE_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/environment_variable/{variable_name}";
+    pub const APASS_V1_ENVIRONMENT_VARIABLE_GET: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/environment_variable/{variable_name}";
 
     // ===== 审计日志管理端点 =====
     /// 审计日志列表
-    pub const APASS_V1_AUDIT_LOG_LIST: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/list";
+    pub const APASS_V1_AUDIT_LOG_LIST: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/audit_log/list";
     /// 获取审计日志
-    pub const APASS_V1_AUDIT_LOG_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/{log_id}";
+    pub const APASS_V1_AUDIT_LOG_GET: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/audit_log/{log_id}";
     /// 数据变更日志列表
-    pub const APASS_V1_AUDIT_LOG_DATA_CHANGE_LOGS: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_logs";
+    pub const APASS_V1_AUDIT_LOG_DATA_CHANGE_LOGS: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_logs";
     /// 获取数据变更日志
-    pub const APASS_V1_AUDIT_LOG_DATA_CHANGE_LOG_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_log/{log_id}";
+    pub const APASS_V1_AUDIT_LOG_DATA_CHANGE_LOG_GET: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_log/{log_id}";
     /// 审计事件列表
-    pub const APASS_V1_AUDIT_LOG_AUDIT_EVENTS: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/audit_events";
+    pub const APASS_V1_AUDIT_LOG_AUDIT_EVENTS: &'static str =
+        "/open-apis/apaas/v1/application/{app_id}/audit_log/audit_events";
 
     // ==================== Performance 绩效管理相关端点 ====================
     /// 绩效周期列表查询
@@ -1054,58 +1354,85 @@ impl Endpoints {
 
     /// 用户管理 - 带参数的端点
     pub const CONTACT_V3_USER_GET: &'static str = "/open-apis/contact/v3/users/{user_id}";
-    pub const CONTACT_V3_USER_UPDATE_ID: &'static str = "/open-apis/contact/v3/users/{user_id}/update_user_id";
-    pub const CONTACT_V3_USER_RESURRECT: &'static str = "/open-apis/contact/v3/users/{user_id}/resurrect";
+    pub const CONTACT_V3_USER_UPDATE_ID: &'static str =
+        "/open-apis/contact/v3/users/{user_id}/update_user_id";
+    pub const CONTACT_V3_USER_RESURRECT: &'static str =
+        "/open-apis/contact/v3/users/{user_id}/resurrect";
 
     /// 部门管理 - 带参数的端点
-    pub const CONTACT_V3_DEPARTMENT_GET: &'static str = "/open-apis/contact/v3/departments/{department_id}";
-    pub const CONTACT_V3_DEPARTMENT_UPDATE_ID: &'static str = "/open-apis/contact/v3/departments/{department_id}/update_department_id";
+    pub const CONTACT_V3_DEPARTMENT_GET: &'static str =
+        "/open-apis/contact/v3/departments/{department_id}";
+    pub const CONTACT_V3_DEPARTMENT_UPDATE_ID: &'static str =
+        "/open-apis/contact/v3/departments/{department_id}/update_department_id";
 
     /// 职务管理 - 带参数的端点
-    pub const CONTACT_V3_JOB_TITLE_GET: &'static str = "/open-apis/contact/v3/job_titles/{job_title_id}";
+    pub const CONTACT_V3_JOB_TITLE_GET: &'static str =
+        "/open-apis/contact/v3/job_titles/{job_title_id}";
 
     /// 职位族群管理 - 带参数的端点
-    pub const CONTACT_V3_JOB_FAMILY_GET: &'static str = "/open-apis/contact/v3/job_families/{job_family_id}";
+    pub const CONTACT_V3_JOB_FAMILY_GET: &'static str =
+        "/open-apis/contact/v3/job_families/{job_family_id}";
 
     /// 职级管理 - 带参数的端点
-    pub const CONTACT_V3_JOB_LEVEL_GET: &'static str = "/open-apis/contact/v3/job_levels/{job_level_id}";
+    pub const CONTACT_V3_JOB_LEVEL_GET: &'static str =
+        "/open-apis/contact/v3/job_levels/{job_level_id}";
 
     /// 功能角色管理 - 带参数的端点
-    pub const CONTACT_V3_FUNCTIONAL_ROLE_GET: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}";
-    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members";
-    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_create";
-    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_DELETE: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_delete";
-    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_SCOPES: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/scopes";
-    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBER_GET: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/{member_id}";
+    pub const CONTACT_V3_FUNCTIONAL_ROLE_GET: &'static str =
+        "/open-apis/contact/v3/functional_roles/{role_id}";
+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS: &'static str =
+        "/open-apis/contact/v3/functional_roles/{role_id}/members";
+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_CREATE: &'static str =
+        "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_create";
+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_DELETE: &'static str =
+        "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_delete";
+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_SCOPES: &'static str =
+        "/open-apis/contact/v3/functional_roles/{role_id}/members/scopes";
+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBER_GET: &'static str =
+        "/open-apis/contact/v3/functional_roles/{role_id}/members/{member_id}";
 
     /// 群组管理
     pub const CONTACT_V3_GROUPS: &'static str = "/open-apis/contact/v3/groups";
-    pub const CONTACT_V3_GROUPS_SIMPLELIST: &'static str = "/open-apis/contact/v3/groups/simplelist";
-    pub const CONTACT_V3_GROUPS_MEMBER_BELONG: &'static str = "/open-apis/contact/v3/groups/member_belong";
+    pub const CONTACT_V3_GROUPS_SIMPLELIST: &'static str =
+        "/open-apis/contact/v3/groups/simplelist";
+    pub const CONTACT_V3_GROUPS_MEMBER_BELONG: &'static str =
+        "/open-apis/contact/v3/groups/member_belong";
     pub const CONTACT_V3_GROUP_GET: &'static str = "/open-apis/contact/v3/groups/{group_id}";
-    pub const CONTACT_V3_GROUP_DETAIL: &'static str = "/open-apis/contact/v3/groups/{group_id}/detail";
+    pub const CONTACT_V3_GROUP_DETAIL: &'static str =
+        "/open-apis/contact/v3/groups/{group_id}/detail";
 
     /// 群组成员管理
-    pub const CONTACT_V3_GROUP_MEMBERS_ADD: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/add";
-    pub const CONTACT_V3_GROUP_MEMBERS_BATCH_ADD: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/batch_add";
-    pub const CONTACT_V3_GROUP_MEMBERS_REMOVE: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/remove";
-    pub const CONTACT_V3_GROUP_MEMBERS_BATCH_REMOVE: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/batch_remove";
-    pub const CONTACT_V3_GROUP_MEMBERS_SIMPLELIST: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/simplelist";
+    pub const CONTACT_V3_GROUP_MEMBERS_ADD: &'static str =
+        "/open-apis/contact/v3/groups/{group_id}/members/add";
+    pub const CONTACT_V3_GROUP_MEMBERS_BATCH_ADD: &'static str =
+        "/open-apis/contact/v3/groups/{group_id}/members/batch_add";
+    pub const CONTACT_V3_GROUP_MEMBERS_REMOVE: &'static str =
+        "/open-apis/contact/v3/groups/{group_id}/members/remove";
+    pub const CONTACT_V3_GROUP_MEMBERS_BATCH_REMOVE: &'static str =
+        "/open-apis/contact/v3/groups/{group_id}/members/batch_remove";
+    pub const CONTACT_V3_GROUP_MEMBERS_SIMPLELIST: &'static str =
+        "/open-apis/contact/v3/groups/{group_id}/members/simplelist";
 
     /// 单位管理
     pub const CONTACT_V3_UNITS: &'static str = "/open-apis/contact/v3/units";
     pub const CONTACT_V3_UNIT_GET: &'static str = "/open-apis/contact/v3/units/{unit_id}";
-    pub const CONTACT_V3_UNIT_BIND_DEPARTMENT: &'static str = "/open-apis/contact/v3/units/{unit_id}/bind_department";
-    pub const CONTACT_V3_UNIT_UNBIND_DEPARTMENT: &'static str = "/open-apis/contact/v3/units/{unit_id}/unbind_department";
-    pub const CONTACT_V3_UNIT_LIST_DEPARTMENT: &'static str = "/open-apis/contact/v3/units/{unit_id}/list_department";
+    pub const CONTACT_V3_UNIT_BIND_DEPARTMENT: &'static str =
+        "/open-apis/contact/v3/units/{unit_id}/bind_department";
+    pub const CONTACT_V3_UNIT_UNBIND_DEPARTMENT: &'static str =
+        "/open-apis/contact/v3/units/{unit_id}/unbind_department";
+    pub const CONTACT_V3_UNIT_LIST_DEPARTMENT: &'static str =
+        "/open-apis/contact/v3/units/{unit_id}/list_department";
 
     /// 工作城市管理
     pub const CONTACT_V3_WORK_CITIES: &'static str = "/open-apis/contact/v3/work_cities";
-    pub const CONTACT_V3_WORK_CITY_GET: &'static str = "/open-apis/contact/v3/work_cities/{work_city_id}";
+    pub const CONTACT_V3_WORK_CITY_GET: &'static str =
+        "/open-apis/contact/v3/work_cities/{work_city_id}";
 
     /// 员工类型枚举管理
-    pub const CONTACT_V3_EMPLOYEE_TYPE_ENUMS: &'static str = "/open-apis/contact/v3/employee_type_enums";
-    pub const CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET: &'static str = "/open-apis/contact/v3/employee_type_enums/{enum_id}";
+    pub const CONTACT_V3_EMPLOYEE_TYPE_ENUMS: &'static str =
+        "/open-apis/contact/v3/employee_type_enums";
+    pub const CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET: &'static str =
+        "/open-apis/contact/v3/employee_type_enums/{enum_id}";
 
     /// 自定义属性管理
     pub const CONTACT_V3_CUSTOM_ATTRS: &'static str = "/open-apis/contact/v3/custom_attrs";
@@ -1214,6 +1541,56 @@ impl Endpoints {
     /// 归档规则
     pub const ATTENDANCE_V1_ARCHIVE_RULES: &'static str = "/open-apis/attendance/v1/archive_rules";
 
+    /// 归档规则用户统计字段 (需要使用 EndpointBuilder::replace_param 替换 {archive_rule_id})
+    pub const ATTENDANCE_V1_ARCHIVE_RULE_USER_STATS_FIELDS: &'static str =
+        "/open-apis/attendance/v1/archive_rules/{archive_rule_id}/user_stats_fields";
+
+    /// 归档规则上传报表 (需要使用 EndpointBuilder::replace_param 替换 {archive_rule_id})
+    pub const ATTENDANCE_V1_ARCHIVE_RULE_UPLOAD_REPORT: &'static str =
+        "/open-apis/attendance/v1/archive_rules/{archive_rule_id}/upload_report";
+
+    /// 归档规则删除报表 (需要使用 EndpointBuilder::replace_param 替换 {archive_rule_id})
+    pub const ATTENDANCE_V1_ARCHIVE_RULE_DEL_REPORT: &'static str =
+        "/open-apis/attendance/v1/archive_rules/{archive_rule_id}/del_report";
+
+    // 用户设置管理
+    /// 用户设置修改 (需要使用 EndpointBuilder::replace_param 替换 {user_id})
+    pub const ATTENDANCE_V1_USER_SETTINGS_MODIFY: &'static str =
+        "/open-apis/attendance/v1/user_settings/{user_id}/modify";
+
+    /// 用户设置上传 (需要使用 EndpointBuilder::replace_param 替换 {user_id})
+    pub const ATTENDANCE_V1_USER_SETTINGS_UPLOAD: &'static str =
+        "/open-apis/attendance/v1/user_settings/{user_id}/upload";
+
+    /// 用户设置下载 (需要使用 EndpointBuilder::replace_param 替换 {user_id})
+    pub const ATTENDANCE_V1_USER_SETTINGS_DOWNLOAD: &'static str =
+        "/open-apis/attendance/v1/user_settings/{user_id}/download";
+
+    // 用户审批管理
+    /// 用户审批处理 (需要使用 EndpointBuilder::replace_param 替换 {approval_id})
+    pub const ATTENDANCE_V1_USER_APPROVAL_PROCESS: &'static str =
+        "/open-apis/attendance/v1/user_approvals/{approval_id}/process";
+
+    // 用户任务补救管理
+    /// 查询用户允许的补救
+    pub const ATTENDANCE_V1_USER_TASK_REMEDYS_QUERY_USER_ALLOWED_REMEDYS: &'static str =
+        "/open-apis/attendance/v1/user_task_remedys/query_user_allowed_remedys";
+
+    // 用户班表管理
+    /// 用户班表批量创建临时
+    pub const ATTENDANCE_V1_USER_DAILY_SHIFTS_BATCH_CREATE_TEMP: &'static str =
+        "/open-apis/attendance/v1/user_daily_shifts/batch_create_temp";
+
+    // 用户任务管理
+    /// 用户任务获取 (需要使用 EndpointBuilder::replace_param 替换 {user_id})
+    pub const ATTENDANCE_V1_USER_TASK_GET: &'static str =
+        "/open-apis/attendance/v1/user_tasks/{user_id}/get";
+
+    // 假期管理
+    /// 假期计提记录获取 (需要使用 EndpointBuilder::replace_param 替换 {leave_accrual_record_id})
+    pub const ATTENDANCE_V1_LEAVE_ACCRUAL_RECORD_GET: &'static str =
+        "/open-apis/attendance/v1/leave_accrual_records/{leave_accrual_record_id}";
+
     // ==================== 客服工具服务端点 ====================
 
     // 工单管理
@@ -1507,6 +1884,43 @@ impl Endpoints {
     pub const APPLICATION_V6_ADMIN_USER_AVAILABLE_APPS: &'static str =
         "/open-apis/application/v6/admin/user_available_apps/{user_id}";
 
+    /// 应用联系人范围配置查询
+    pub const APPLICATION_V6_ADMIN_APP_CONTACTS_RANGE_CONFIGURATION_GET: &'static str =
+        "/open-apis/application/v6/admin/apps/{app_id}/contacts_range_configuration";
+
+    /// 应用联系人范围配置设置
+    pub const APPLICATION_V6_ADMIN_APP_CONTACTS_RANGE_CONFIGURATION_SET: &'static str =
+        "/open-apis/application/v6/admin/apps/{app_id}/contacts_range_configuration";
+
+    /// 应用白黑名单检查
+    pub const APPLICATION_V6_ADMIN_APP_CHECK_WHITE_BLACK_LIST: &'static str =
+        "/open-apis/application/v6/admin/apps/{app_id}/check_white_black_list";
+
+    /// 应用管理员管理权限
+    pub const APPLICATION_V6_ADMIN_APP_ADMIN_MANAGEMENT_PERMISSIONS: &'static str =
+        "/open-apis/application/v6/admin/apps/{app_id}/admins/{user_id}/management_permissions";
+
+    /// 应用管理员验证
+    pub const APPLICATION_V6_ADMIN_APP_ADMIN_VERIFY: &'static str =
+        "/open-apis/application/v6/admin/apps/{app_id}/admins/{user_id}/verify";
+
+    /// 应用版本联系人范围建议
+    pub const APPLICATION_V6_APP_VERSION_CONTACTS_RANGE_SUGGEST: &'static str =
+        "/open-apis/application/v6/applications/{app_id}/versions/{version_id}/contacts_range_suggest";
+
+    // 应用商店付费信息
+    /// 应用商店定价计划检查
+    pub const APPLICATION_V6_APPSTORE_PAID_INFO_CHECK: &'static str =
+        "/open-apis/application/v6/appstore_paid_info/{app_id}/users/{user_id}/pricing_plans/{pricing_plan_id}/check";
+
+    /// 应用商店定价计划列表
+    pub const APPLICATION_V6_APPSTORE_PAID_INFO_PRICING_PLANS: &'static str =
+        "/open-apis/application/v6/appstore_paid_info/{app_id}/pricing_plans";
+
+    /// 应用商店订单详情
+    pub const APPLICATION_V6_APPSTORE_PAID_INFO_ORDER_GET: &'static str =
+        "/open-apis/application/v6/appstore_paid_info/{app_id}/orders/{order_id}";
+
     // ==================== CloudDocs 云文档相关端点 ====================
 
     // Assistant 助手服务
@@ -1517,21 +1931,24 @@ impl Endpoints {
     // Bitable 多维表格服务
     /// 多维表格应用管理
     pub const BITABLE_V1_APPS: &'static str = "/open-apis/bitable/v1/apps";
-    pub const BITABLE_V1_APP_GET: &'static str = "/open-apis/bitable/v1/apps/{}";
+    pub const BITABLE_V1_APP_GET: &'static str = "/open-apis/bitable/v1/apps/{app_token}";
     pub const BITABLE_V1_APP_CREATE: &'static str = "/open-apis/bitable/v1/apps";
-    pub const BITABLE_V1_APP_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{}";
-    pub const BITABLE_V1_APP_COPY: &'static str = "/open-apis/bitable/v1/apps/{}/copy";
+    pub const BITABLE_V1_APP_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}";
+    pub const BITABLE_V1_APP_COPY: &'static str = "/open-apis/bitable/v1/apps/{app_token}/copy";
 
     /// 多维表格数据表管理
-    pub const BITABLE_V1_TABLES: &'static str = "/open-apis/bitable/v1/apps/{}/tables";
+    pub const BITABLE_V1_TABLES: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables";
     pub const BITABLE_V1_TABLE_GET: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}";
-    pub const BITABLE_V1_TABLE_CREATE: &'static str = "/open-apis/bitable/v1/apps/{}/tables";
-    pub const BITABLE_V1_TABLE_PATCH: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}";
-    pub const BITABLE_V1_TABLE_DELETE: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}";
+    pub const BITABLE_V1_TABLE_CREATE: &'static str =
+        "/open-apis/bitable/v1/apps/{app_token}/tables";
+    pub const BITABLE_V1_TABLE_PATCH: &'static str =
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}";
+    pub const BITABLE_V1_TABLE_DELETE: &'static str =
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}";
     pub const BITABLE_V1_TABLES_BATCH_CREATE: &'static str =
-        "/open-apis/bitable/v1/apps/{}/tables/batch_create";
+        "/open-apis/bitable/v1/apps/{app_token}/tables/batch_create";
     pub const BITABLE_V1_TABLES_BATCH_DELETE: &'static str =
-        "/open-apis/bitable/v1/apps/{}/tables/batch_delete";
+        "/open-apis/bitable/v1/apps/{app_token}/tables/batch_delete";
 
     /// 多维表格记录管理
     pub const BITABLE_V1_RECORDS: &'static str =
@@ -1568,15 +1985,16 @@ impl Endpoints {
         "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
 
     /// 多维表格视图管理
-    pub const BITABLE_V1_VIEWS: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}/views";
+    pub const BITABLE_V1_VIEWS: &'static str =
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/views";
     pub const BITABLE_V1_VIEW_GET: &'static str =
-        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/views/{view_id}";
     pub const BITABLE_V1_VIEW_CREATE: &'static str =
-        "/open-apis/bitable/v1/apps/{}/tables/{}/views";
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/views";
     pub const BITABLE_V1_VIEW_PATCH: &'static str =
-        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/views/{view_id}";
     pub const BITABLE_V1_VIEW_DELETE: &'static str =
-        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/views/{view_id}";
 
     /// 多维表格仪表板管理
     pub const BITABLE_V1_DASHBOARDS: &'static str =
@@ -1657,11 +2075,11 @@ impl Endpoints {
     /// 文档块管理
     pub const DOCX_V1_DOCUMENT_BLOCKS: &'static str = "/open-apis/docx/v1/documents/{}/blocks";
     pub const DOCX_V1_DOCUMENT_BLOCK_GET: &'static str =
-        "/open-apis/docx/v1/documents/{}/blocks/{}";
+        "/open-apis/docx/v1/documents/{document_id}/blocks/{block_id}";
     pub const DOCX_V1_DOCUMENT_BLOCK_CHILDREN: &'static str =
         "/open-apis/docx/v1/documents/{}/blocks/{}/children";
     pub const DOCX_V1_DOCUMENT_BLOCKS_BATCH_UPDATE: &'static str =
-        "/open-apis/docx/v1/documents/{}/blocks/batch_update";
+        "/open-apis/docx/v1/documents/{document_id}/blocks/batch_update";
     pub const DOCX_V1_DOCUMENT_BLOCKS_BATCH_DELETE: &'static str =
         "/open-apis/docx/v1/documents/{}/blocks/batch_delete";
 
@@ -1914,6 +2332,89 @@ impl Endpoints {
         "/open-apis/wiki/v2/tasks/move_docs_to_wiki";
     pub const WIKI_V2_TASK_GET: &'static str = "/open-apis/wiki/v2/tasks/{}";
 
+    // ==================== 邮件服务端点 ====================
+
+    // 邮件组管理
+    /// 邮件组基础操作
+    pub const MAIL_V1_MAILGROUPS: &'static str = "/open-apis/mail/v1/mailgroups";
+
+    /// 邮件组详情操作 (需要使用 EndpointBuilder::replace_param 替换 {mailgroup_id})
+    pub const MAIL_V1_MAILGROUP: &'static str = "/open-apis/mail/v1/mailgroups/{mailgroup_id}";
+
+    // 邮件组管理员
+    /// 批量创建邮件组管理员 (需要使用 EndpointBuilder::replace_param 替换 {mailgroup_id})
+    pub const MAIL_V1_MAILGROUP_MANAGERS_BATCH_CREATE: &'static str =
+        "/open-apis/mail/v1/mailgroups/{mailgroup_id}/managers/batch_create";
+
+    /// 批量删除邮件组管理员 (需要使用 EndpointBuilder::replace_param 替换 {mailgroup_id})
+    pub const MAIL_V1_MAILGROUP_MANAGERS_BATCH_DELETE: &'static str =
+        "/open-apis/mail/v1/mailgroups/{mailgroup_id}/managers/batch_delete";
+
+    /// 获取邮件组管理员列表 (需要使用 EndpointBuilder::replace_param 替换 {mailgroup_id})
+    pub const MAIL_V1_MAILGROUP_MANAGERS: &'static str =
+        "/open-apis/mail/v1/mailgroups/{mailgroup_id}/managers";
+
+    // 用户邮箱事件
+    /// 订阅用户邮箱事件 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_EVENTS_SUBSCRIBE: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/events/subscribe";
+
+    /// 获取用户邮箱事件订阅状态 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_EVENTS_SUBSCRIPTION: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/events/subscription";
+
+    /// 取消订阅用户邮箱事件 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_EVENTS_UNSUBSCRIBE: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/events/unsubscribe";
+
+    // 用户邮箱文件夹
+    /// 用户邮箱文件夹操作 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_FOLDERS: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/folders";
+
+    /// 用户邮箱文件夹详情操作 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id} 和 {folder_id})
+    pub const MAIL_V1_USER_MAILBOX_FOLDER: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/folders/{folder_id}";
+
+    // 用户邮箱消息
+    /// 用户邮箱消息操作 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_MESSAGES: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages";
+
+    /// 用户邮箱消息详情 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id} 和 {message_id})
+    pub const MAIL_V1_USER_MAILBOX_MESSAGE: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages/{message_id}";
+
+    /// 通过卡片获取邮件消息 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_MESSAGES_GET_BY_CARD: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages/get_by_card";
+
+    // 用户邮箱规则
+    /// 用户邮箱规则操作 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_RULES: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules";
+
+    /// 用户邮箱规则详情 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id} 和 {rule_id})
+    pub const MAIL_V1_USER_MAILBOX_RULE: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules/{rule_id}";
+
+    /// 重新排序用户邮箱规则 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_RULES_REORDER: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules/reorder";
+
+    // 用户邮箱联系人
+    /// 用户邮箱联系人操作 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id})
+    pub const MAIL_V1_USER_MAILBOX_MAIL_CONTACTS: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/mail_contacts";
+
+    /// 用户邮箱联系人详情 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id} 和 {contact_id})
+    pub const MAIL_V1_USER_MAILBOX_MAIL_CONTACT: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/mail_contacts/{contact_id}";
+
+    // 用户邮箱附件
+    /// 获取邮件附件下载链接 (需要使用 EndpointBuilder::replace_param 替换 {user_mailbox_id}, {message_id} 和 {attachment_id})
+    pub const MAIL_V1_USER_MAILBOX_MESSAGE_ATTACHMENT_DOWNLOAD_URL: &'static str =
+        "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages/{message_id}/attachments/{attachment_id}/download_url";
 }
 
 /// API端点构建辅助函数
@@ -1946,8 +2447,8 @@ impl EndpointBuilder {
     /// use std::collections::HashMap;
     /// use open_lark::core::endpoints::EndpointBuilder;
     /// let mut params = HashMap::new();
-    /// params.insert("calendar_id", "cal_123".to_string());
-    /// params.insert("event_id", "event_456".to_string());
+    /// params.insert("calendar_id".to_string(), "cal_123".to_string());
+    /// params.insert("event_id".to_string(), "event_456".to_string());
     /// let path = EndpointBuilder::replace_params(
     ///     "/open-apis/calendar/v4/calendars/{calendar_id}/events/{event_id}",
     ///     &params
@@ -1965,29 +2466,18 @@ impl EndpointBuilder {
         result
     }
 
-    /// Replace multiple parameters in an endpoint template using an array of key-value pairs.
-    ///
-    /// This is a convenience method for replacing multiple parameters without creating a HashMap.
-    ///
-    /// # Arguments
-    ///
-    /// * `template` - The template string containing placeholders like `{param_name}`
-    /// * `params` - An array of tuples containing (key, value) pairs
-    ///
-    /// # Example
+    /// 从字符串数组替换多个路径参数
     ///
+    /// # 示例
     /// ```rust
     /// use open_lark::core::endpoints::EndpointBuilder;
     /// let path = EndpointBuilder::replace_params_from_array(
-    ///     "/open-apis/apaas/v1/application/{app_id}/flow/{flow_api_name}/execute",
-    ///     &[("app_id", "app_123"), ("flow_api_name", "flow_456")]
+    ///     "/open-apis/vc/v1/rooms/{room_id}/members/{user_id}",
+    ///     &[("room_id", "room_123"), ("user_id", "user_456")]
     /// );
-    /// assert_eq!(path, "/open-apis/apaas/v1/application/app_123/flow/flow_456/execute");
+    /// assert_eq!(path, "/open-apis/vc/v1/rooms/room_123/members/user_456");
     /// ```
-    pub fn replace_params_from_array(
-        template: &str,
-        params: &[(&str, &str)],
-    ) -> String {
+    pub fn replace_params_from_array(template: &str, params: &[(&str, &str)]) -> String {
         let mut result = template.to_string();
         for (key, value) in params {
             result = result.replace(&format!("{{{}}}", key), value);
@@ -1995,262 +2485,206 @@ impl EndpointBuilder {
         result
     }
 
-    /// 构建VC会议室相关端点
-    pub fn vc_room(room_id: &str) -> VCRoomEndpoints {
-        VCRoomEndpoints {
-            room_id: room_id.to_string(),
+    /// 创建日历端点构建器
+    pub fn calendar(calendar_id: &str) -> CalendarEndpointBuilder {
+        CalendarEndpointBuilder {
+            calendar_id: calendar_id.to_string(),
         }
     }
 
-    /// 构建VC会议相关端点
-    pub fn vc_meeting(meeting_id: &str) -> VCMeetingEndpoints {
-        VCMeetingEndpoints {
-            meeting_id: meeting_id.to_string(),
+    /// 创建日历事件端点构建器
+    pub fn calendar_event(calendar_id: &str, event_id: &str) -> CalendarEventEndpointBuilder {
+        CalendarEventEndpointBuilder {
+            calendar_id: calendar_id.to_string(),
+            event_id: event_id.to_string(),
         }
     }
 
-    /// 构建IM相关端点
-    pub fn im_message(message_id: &str) -> IMMessageEndpoints {
-        IMMessageEndpoints {
+    /// 创建即时消息端点构建器
+    pub fn im_message(message_id: &str) -> ImMessageEndpointBuilder {
+        ImMessageEndpointBuilder {
             message_id: message_id.to_string(),
         }
     }
 
-    /// 构建Drive文件相关端点
-    pub fn drive_file(file_token: &str) -> DriveFileEndpoints {
-        DriveFileEndpoints {
-            file_token: file_token.to_string(),
+    /// 创建VC会议端点构建器
+    pub fn vc_meeting(meeting_id: &str) -> VcMeetingEndpointBuilder {
+        VcMeetingEndpointBuilder {
+            meeting_id: meeting_id.to_string(),
         }
     }
 
-    /// 构建日历相关端点
-    pub fn calendar(calendar_id: &str) -> CalendarEndpoints {
-        CalendarEndpoints {
-            calendar_id: calendar_id.to_string(),
+    /// 创建VC房间端点构建器
+    pub fn vc_room(room_id: &str) -> VcRoomEndpointBuilder {
+        VcRoomEndpointBuilder {
+            room_id: room_id.to_string(),
         }
     }
 
-    /// 构建日程相关端点
-    pub fn calendar_event(calendar_id: &str, event_id: &str) -> CalendarEventEndpoints {
-        CalendarEventEndpoints {
-            calendar_id: calendar_id.to_string(),
-            event_id: event_id.to_string(),
-        }
+    /// 创建工作台端点构建器
+    pub fn workplace() -> WorkplaceEndpointBuilder {
+        WorkplaceEndpointBuilder {}
     }
 }
 
-/// VC会议室端点构建器
-pub struct VCRoomEndpoints {
-    room_id: String,
+/// 日历端点构建器
+pub struct CalendarEndpointBuilder {
+    calendar_id: String,
 }
 
-impl VCRoomEndpoints {
-    /// 获取会议室详情端点
+impl CalendarEndpointBuilder {
+    /// 获取日历详情端点
     pub fn get(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_ROOM_GET, "room_id", &self.room_id)
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_GET, "calendar_id", &self.calendar_id)
     }
 
-    /// 更新会议室端点
-    pub fn update(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_ROOM_UPDATE, "room_id", &self.room_id)
+    /// 更新日历端点
+    pub fn patch(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_UPDATE, "calendar_id", &self.calendar_id)
     }
 
-    /// 删除会议室端点
+    /// 删除日历端点
     pub fn delete(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_ROOM_DELETE, "room_id", &self.room_id)
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_DELETE, "calendar_id", &self.calendar_id)
     }
-}
 
-/// VC会议端点构建器
-pub struct VCMeetingEndpoints {
-    meeting_id: String,
-}
+    /// 设置主日历端点
+    pub fn set_primary(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_PRIMARY, "calendar_id", &self.calendar_id)
+    }
 
-impl VCMeetingEndpoints {
-    /// 获取会议详情端点
-    pub fn get(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_MEETING_GET, "meeting_id", &self.meeting_id)
+    /// 搜索日历端点
+    pub fn search(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_SEARCH, "calendar_id", &self.calendar_id)
     }
+}
 
-    /// 更新会议端点
-    pub fn update(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_MEETING_UPDATE, "meeting_id", &self.meeting_id)
+/// 日历事件端点构建器
+pub struct CalendarEventEndpointBuilder {
+    calendar_id: String,
+    event_id: String,
+}
+
+impl CalendarEventEndpointBuilder {
+    /// 创建事件端点
+    pub fn create(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_CREATE, "calendar_id", &self.calendar_id)
     }
 
-    /// 结束会议端点
-    pub fn end(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_MEETING_END, "meeting_id", &self.meeting_id)
+    /// 获取事件详情端点
+    pub fn get(&self) -> String {
+        let temp = EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_GET, "calendar_id", &self.calendar_id);
+        EndpointBuilder::replace_param(&temp, "event_id", &self.event_id)
     }
 
-    /// 邀请参会者端点
-    pub fn invite(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_MEETING_INVITE, "meeting_id", &self.meeting_id)
+    /// 更新事件端点
+    pub fn patch(&self) -> String {
+        let temp = EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_UPDATE, "calendar_id", &self.calendar_id);
+        EndpointBuilder::replace_param(&temp, "event_id", &self.event_id)
     }
 
-    /// 移除参会者端点
-    pub fn kickout(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::VC_MEETING_KICKOUT,
-            "meeting_id",
-            &self.meeting_id,
-        )
+    /// 删除事件端点
+    pub fn delete(&self) -> String {
+        let temp = EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_DELETE, "calendar_id", &self.calendar_id);
+        EndpointBuilder::replace_param(&temp, "event_id", &self.event_id)
     }
 
-    /// 获取录制列表端点
-    pub fn recording_list(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_RECORDING_LIST, "meeting_id", &self.meeting_id)
+    /// 回复事件邀请端点
+    pub fn reply(&self) -> String {
+        let temp = EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_REPLY, "calendar_id", &self.calendar_id);
+        EndpointBuilder::replace_param(&temp, "event_id", &self.event_id)
     }
 
-    /// 开始录制端点
-    pub fn recording_start(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::VC_RECORDING_START,
-            "meeting_id",
-            &self.meeting_id,
-        )
+    /// 搜索事件端点
+    pub fn search(&self) -> String {
+        let temp = EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_SEARCH, "calendar_id", &self.calendar_id);
+        EndpointBuilder::replace_param(&temp, "event_id", &self.event_id)
     }
 
-    /// 停止录制端点
-    pub fn recording_stop(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::VC_RECORDING_STOP, "meeting_id", &self.meeting_id)
+    /// 获取事件列表端点
+    pub fn list(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::CALENDAR_EVENT_LIST, "calendar_id", &self.calendar_id)
     }
 }
 
-/// IM消息端点构建器
-pub struct IMMessageEndpoints {
+/// 即时消息端点构建器
+pub struct ImMessageEndpointBuilder {
     message_id: String,
 }
 
-impl IMMessageEndpoints {
-    /// 获取消息详情端点
+impl ImMessageEndpointBuilder {
+    /// 获取消息端点
     pub fn get(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::IM_V1_GET_MESSAGE, "message_id", &self.message_id)
+        EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_GET, "message_id", &self.message_id)
     }
 
     /// 更新消息端点
-    pub fn update(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::IM_V1_UPDATE_MESSAGE,
-            "message_id",
-            &self.message_id,
-        )
+    pub fn patch(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_PATCH, "message_id", &self.message_id)
     }
 
     /// 删除消息端点
     pub fn delete(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::IM_V1_DELETE_MESSAGE,
-            "message_id",
-            &self.message_id,
-        )
+        EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_DELETE, "message_id", &self.message_id)
     }
-
-    /// 消息已读回执端点
-    pub fn read_users(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::IM_V1_READ_MESSAGE,
-            "message_id",
-            &self.message_id,
-        )
-    }
-}
-
-/// Drive文件端点构建器
-pub struct DriveFileEndpoints {
-    file_token: String,
 }
 
-impl DriveFileEndpoints {
-    /// 复制文件端点
-    pub fn copy(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_COPY, "file_token", &self.file_token)
-    }
-
-    /// 移动文件端点
-    pub fn r#move(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_MOVE, "file_token", &self.file_token)
-    }
-
-    /// 删除文件端点
-    pub fn delete(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_DELETE, "file_token", &self.file_token)
-    }
-
-    /// 下载文件端点
-    pub fn download(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_DOWNLOAD, "file_token", &self.file_token)
-    }
-}
-
-/// 日历端点构建器
-pub struct CalendarEndpoints {
-    calendar_id: String,
+/// VC会议端点构建器
+pub struct VcMeetingEndpointBuilder {
+    meeting_id: String,
 }
 
-impl CalendarEndpoints {
-    /// 获取日历详情端点
+impl VcMeetingEndpointBuilder {
+    /// 获取会议端点
     pub fn get(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::CALENDAR_GET, "calendar_id", &self.calendar_id)
+        EndpointBuilder::replace_param(Endpoints::VC_MEETING_GET, "meeting_id", &self.meeting_id)
     }
 
-    /// 更新日历端点
+    /// 更新会议端点
     pub fn update(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::CALENDAR_UPDATE, "calendar_id", &self.calendar_id)
+        EndpointBuilder::replace_param(Endpoints::VC_MEETING_UPDATE, "meeting_id", &self.meeting_id)
     }
 
-    /// 删除日历端点
-    pub fn delete(&self) -> String {
-        EndpointBuilder::replace_param(Endpoints::CALENDAR_DELETE, "calendar_id", &self.calendar_id)
+    /// 结束会议端点
+    pub fn end(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::VC_MEETING_END, "meeting_id", &self.meeting_id)
     }
 
-    /// 创建日程端点
-    pub fn create_event(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::CALENDAR_EVENT_CREATE,
-            "calendar_id",
-            &self.calendar_id,
-        )
+    /// 邀请参会者端点
+    pub fn invite(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::VC_MEETING_INVITE, "meeting_id", &self.meeting_id)
     }
 
-    /// 获取日程列表端点
-    pub fn event_list(&self) -> String {
-        EndpointBuilder::replace_param(
-            Endpoints::CALENDAR_EVENT_LIST,
-            "calendar_id",
-            &self.calendar_id,
-        )
+    /// 移除参会者端点
+    pub fn kickout(&self) -> String {
+        EndpointBuilder::replace_param(Endpoints::VC_MEETING_KICKOUT, "meeting_id", &self.meeting_id)
     }
 }
 
-/// 日程端点构建器
-pub struct CalendarEventEndpoints {
-    calendar_id: String,
-    event_id: String,
+/// VC房间端点构建器
+pub struct VcRoomEndpointBuilder {
+    room_id: String,
 }
 
-impl CalendarEventEndpoints {
-    /// 获取日程详情端点
+impl VcRoomEndpointBuilder {
+    /// 获取房间详情端点
     pub fn get(&self) -> String {
-        let template = Endpoints::CALENDAR_EVENT_GET;
-        let mut result = EndpointBuilder::replace_param(template, "calendar_id", &self.calendar_id);
-        result = EndpointBuilder::replace_param(&result, "event_id", &self.event_id);
-        result
+        EndpointBuilder::replace_param(Endpoints::VC_ROOM_GET, "room_id", &self.room_id)
     }
+}
 
-    /// 更新日程端点
-    pub fn update(&self) -> String {
-        let template = Endpoints::CALENDAR_EVENT_UPDATE;
-        let mut result = EndpointBuilder::replace_param(template, "calendar_id", &self.calendar_id);
-        result = EndpointBuilder::replace_param(&result, "event_id", &self.event_id);
-        result
+/// 工作台端点构建器
+pub struct WorkplaceEndpointBuilder {}
+
+impl WorkplaceEndpointBuilder {
+    /// 获取工作台访问数据端点
+    pub fn access_data(&self) -> String {
+        Endpoints::WORKPLACE_ACCESS_DATA_SEARCH.to_string()
     }
 
-    /// 删除日程端点
-    pub fn delete(&self) -> String {
-        let template = Endpoints::CALENDAR_EVENT_DELETE;
-        let mut result = EndpointBuilder::replace_param(template, "calendar_id", &self.calendar_id);
-        result = EndpointBuilder::replace_param(&result, "event_id", &self.event_id);
-        result
+    /// 获取应用推荐端点
+    pub fn app_recommend(&self) -> String {
+        Endpoints::WORKPLACE_APP_RECOMMEND_LIST.to_string()
     }
 }
 
@@ -2258,39 +2692,17 @@ impl CalendarEventEndpoints {
 mod tests {
     use super::*;
 
-    #[test]
-    fn test_workplace_endpoints() {
-        assert_eq!(
-            Endpoints::WORKPLACE_ACCESS_DATA_SEARCH,
-            "/open-apis/workplace/v1/workplace_access_data/search"
-        );
-        assert_eq!(
-            Endpoints::WORKPLACE_APP_RECOMMEND_LIST,
-            "/open-apis/workplace/v1/app_recommend_rule/list"
-        );
-    }
-
-    #[test]
-    fn test_vc_endpoints() {
-        assert_eq!(Endpoints::VC_ROOM_LIST, "/open-apis/vc/v1/rooms");
-        assert_eq!(Endpoints::VC_MEETING_CREATE, "/open-apis/vc/v1/meetings");
-    }
-
     #[test]
     fn test_endpoint_builder() {
-        let result = EndpointBuilder::replace_param(
-            "/open-apis/vc/v1/rooms/{room_id}",
-            "room_id",
-            "room_123",
-        );
-        assert_eq!(result, "/open-apis/vc/v1/rooms/room_123");
+        let result = EndpointBuilder::replace_param("/api/users/{user_id}", "user_id", "123");
+        assert_eq!(result, "/api/users/123");
     }
 
     #[test]
     fn test_multiple_params() {
         let mut params = std::collections::HashMap::new();
-        params.insert("calendar_id", "cal_123".to_string());
-        params.insert("event_id", "event_456".to_string());
+        params.insert("calendar_id".to_string(), "cal_123".to_string());
+        params.insert("event_id".to_string(), "event_456".to_string());
 
         let result = EndpointBuilder::replace_params(
             "/open-apis/calendar/v4/calendars/{calendar_id}/events/{event_id}",
@@ -2306,55 +2718,162 @@ mod tests {
     fn test_vc_room_endpoints_builder() {
         let room_endpoints = EndpointBuilder::vc_room("room_123");
         assert_eq!(room_endpoints.get(), "/open-apis/vc/v1/rooms/room_123");
-        assert_eq!(room_endpoints.update(), "/open-apis/vc/v1/rooms/room_123");
-        assert_eq!(room_endpoints.delete(), "/open-apis/vc/v1/rooms/room_123");
     }
 
     #[test]
-    fn test_im_message_endpoints_builder() {
-        let message_endpoints = EndpointBuilder::im_message("msg_123");
-        assert_eq!(message_endpoints.get(), "/open-apis/im/v1/messages/msg_123");
+    fn test_calendar_endpoints_builder() {
+        let calendar_endpoints = EndpointBuilder::calendar("calendar_456");
         assert_eq!(
-            message_endpoints.update(),
-            "/open-apis/im/v1/messages/msg_123"
+            calendar_endpoints.get(),
+            "/open-apis/calendar/v4/calendars/calendar_456"
         );
         assert_eq!(
-            message_endpoints.delete(),
-            "/open-apis/im/v1/messages/msg_123"
+            calendar_endpoints.patch(),
+            "/open-apis/calendar/v4/calendars/calendar_456"
         );
-    }
-
-    #[test]
-    fn test_calendar_endpoints_builder() {
-        let calendar_endpoints = EndpointBuilder::calendar("cal_123");
         assert_eq!(
-            calendar_endpoints.get(),
-            "/open-apis/calendar/v4/calendars/cal_123"
+            calendar_endpoints.delete(),
+            "/open-apis/calendar/v4/calendars/calendar_456"
         );
         assert_eq!(
-            calendar_endpoints.update(),
-            "/open-apis/calendar/v4/calendars/cal_123"
+            calendar_endpoints.set_primary(),
+            "/open-apis/calendar/v4/calendars/calendar_456/primary"
         );
         assert_eq!(
-            calendar_endpoints.delete(),
-            "/open-apis/calendar/v4/calendars/cal_123"
+            calendar_endpoints.search(),
+            "/open-apis/calendar/v4/calendars/calendar_456/search"
         );
     }
 
     #[test]
     fn test_calendar_event_endpoints_builder() {
-        let event_endpoints = EndpointBuilder::calendar_event("cal_123", "event_456");
+        let event_endpoints = EndpointBuilder::calendar_event("calendar_456", "event_789");
+        assert_eq!(
+            event_endpoints.create(),
+            "/open-apis/calendar/v4/calendars/calendar_456/events"
+        );
         assert_eq!(
             event_endpoints.get(),
-            "/open-apis/calendar/v4/calendars/cal_123/events/event_456"
+            "/open-apis/calendar/v4/calendars/calendar_456/events/event_789"
         );
         assert_eq!(
-            event_endpoints.update(),
-            "/open-apis/calendar/v4/calendars/cal_123/events/event_456"
+            event_endpoints.patch(),
+            "/open-apis/calendar/v4/calendars/calendar_456/events/event_789"
         );
         assert_eq!(
             event_endpoints.delete(),
-            "/open-apis/calendar/v4/calendars/cal_123/events/event_456"
+            "/open-apis/calendar/v4/calendars/calendar_456/events/event_789"
+        );
+        assert_eq!(
+            event_endpoints.reply(),
+            "/open-apis/calendar/v4/calendars/calendar_456/events/event_789/reply"
+        );
+        assert_eq!(
+            event_endpoints.search(),
+            "/open-apis/calendar/v4/calendars/calendar_456/events/event_789/search"
+        );
+        assert_eq!(
+            event_endpoints.list(),
+            "/open-apis/calendar/v4/calendars/calendar_456/events"
+        );
+    }
+
+    #[test]
+    fn test_im_message_endpoints_builder() {
+        let message_endpoints = EndpointBuilder::im_message("message_123");
+        assert_eq!(
+            message_endpoints.get(),
+            "/open-apis/im/v1/messages/message_123"
+        );
+        assert_eq!(
+            message_endpoints.patch(),
+            "/open-apis/im/v1/messages/message_123"
+        );
+        assert_eq!(
+            message_endpoints.delete(),
+            "/open-apis/im/v1/messages/message_123"
+        );
+    }
+
+    #[test]
+    fn test_vc_endpoints() {
+        let vc_endpoints = EndpointBuilder::vc_meeting("meeting_456");
+        assert_eq!(
+            vc_endpoints.get(),
+            "/open-apis/vc/v1/meetings/meeting_456"
+        );
+        assert_eq!(
+            vc_endpoints.update(),
+            "/open-apis/vc/v1/meetings/meeting_456"
+        );
+        assert_eq!(
+            vc_endpoints.end(),
+            "/open-apis/vc/v1/meetings/meeting_456/end"
+        );
+        assert_eq!(
+            vc_endpoints.invite(),
+            "/open-apis/vc/v1/meetings/meeting_456/invite"
+        );
+        assert_eq!(
+            vc_endpoints.kickout(),
+            "/open-apis/vc/v1/meetings/meeting_456/kickout"
+        );
+    }
+
+    #[test]
+    fn test_workplace_endpoints() {
+        let workplace_endpoints = EndpointBuilder::workplace();
+        assert_eq!(
+            workplace_endpoints.access_data(),
+            "/open-apis/workplace/v1/workplace_access_data/search"
+        );
+        assert_eq!(
+            workplace_endpoints.app_recommend(),
+            "/open-apis/workplace/v1/app_recommend_rule/list"
         );
     }
 }
+
+// Public re-exports for backward compatibility with direct imports
+// LINGO constants
+pub const LINGO_CLASSIFICATION_LIST: &str = Endpoints::LINGO_CLASSIFICATION_LIST;
+pub const LINGO_DRAFT_CREATE: &str = Endpoints::LINGO_DRAFT_CREATE;
+pub const LINGO_DRAFT_UPDATE: &str = Endpoints::LINGO_DRAFT_UPDATE;
+pub const LINGO_ENTITY_CREATE: &str = Endpoints::LINGO_ENTITY_CREATE;
+pub const LINGO_ENTITY_GET: &str = Endpoints::LINGO_ENTITY_GET;
+pub const LINGO_ENTITY_UPDATE: &str = Endpoints::LINGO_ENTITY_UPDATE;
+pub const LINGO_ENTITY_SEARCH: &str = Endpoints::LINGO_ENTITY_SEARCH;
+pub const LINGO_ENTITY_MATCH: &str = Endpoints::LINGO_ENTITY_MATCH;
+pub const LINGO_ENTITY_HIGHLIGHT: &str = Endpoints::LINGO_ENTITY_HIGHLIGHT;
+pub const LINGO_FILE_UPLOAD: &str = Endpoints::LINGO_FILE_UPLOAD;
+pub const LINGO_FILE_DOWNLOAD: &str = Endpoints::LINGO_FILE_DOWNLOAD;
+pub const LINGO_REPO_LIST: &str = Endpoints::LINGO_REPO_LIST;
+
+// VC constants
+pub const VC_MEETING_GET: &str = Endpoints::VC_MEETING_GET;
+pub const VC_MEETING_END: &str = Endpoints::VC_MEETING_END;
+pub const VC_MEETING_INVITE: &str = Endpoints::VC_MEETING_INVITE;
+pub const VC_MEETING_KICKOUT: &str = Endpoints::VC_MEETING_KICKOUT;
+pub const VC_MEETING_LIST_BY_NO: &str = Endpoints::VC_MEETING_LIST_BY_NO;
+pub const VC_MEETING_SET_HOST: &str = Endpoints::VC_MEETING_SET_HOST;
+pub const VC_MEETING_UPDATE: &str = Endpoints::VC_MEETING_UPDATE;
+pub const VC_ROOM_GET: &str = Endpoints::VC_ROOM_GET;
+pub const VC_ROOM_LIST: &str = Endpoints::VC_ROOM_LIST;
+pub const VC_ROOM_CREATE: &str = Endpoints::VC_ROOM_CREATE;
+pub const VC_ROOM_UPDATE: &str = Endpoints::VC_ROOM_UPDATE;
+pub const VC_ROOM_DELETE: &str = Endpoints::VC_ROOM_DELETE;
+pub const VC_ROOM_SEARCH: &str = Endpoints::VC_ROOM_SEARCH;
+pub const VC_RECORDING_GET: &str = Endpoints::VC_RECORDING_GET;
+pub const VC_RECORDING_START: &str = Endpoints::VC_RECORDING_START;
+pub const VC_RECORDING_STOP: &str = Endpoints::VC_RECORDING_STOP;
+pub const VC_RECORDING_SET_PERMISSION: &str = Endpoints::VC_RECORDING_SET_PERMISSION;
+pub const VC_RESERVE_GET: &str = Endpoints::VC_RESERVE_GET;
+pub const VC_RESERVE_CREATE: &str = Endpoints::VC_RESERVE_CREATE;
+pub const VC_RESERVE_UPDATE: &str = Endpoints::VC_RESERVE_UPDATE;
+pub const VC_RESERVE_DELETE: &str = Endpoints::VC_RESERVE_DELETE;
+pub const VC_RESERVE_GET_ACTIVE_MEETING: &str = Endpoints::VC_RESERVE_GET_ACTIVE_MEETING;
+
+// TENANT constants
+pub const TENANT_V2_QUERY: &str = Endpoints::TENANT_V2_QUERY;
+pub const TENANT_V2_PRODUCT_ASSIGN_INFO_QUERY: &str = Endpoints::TENANT_V2_PRODUCT_ASSIGN_INFO_QUERY;
+
diff --git a/src/service/apass/audit_log/mod.rs b/src/service/apass/audit_log/mod.rs
index 040a5be..6440ad5 100644
--- a/src/service/apass/audit_log/mod.rs
+++ b/src/service/apass/audit_log/mod.rs
@@ -115,7 +115,7 @@ impl AuditLogService {
             api_path: EndpointBuilder::replace_param(
                 Endpoints::APASS_V1_AUDIT_LOG_LIST,
                 "app_id",
-                &request.app_id
+                &request.app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -165,7 +165,7 @@ impl AuditLogService {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_AUDIT_LOG_GET,
-                &[("app_id", app_id), ("log_id", log_id)]
+                &[("app_id", &app_id), ("log_id", &log_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -193,7 +193,7 @@ impl AuditLogService {
             api_path: EndpointBuilder::replace_param(
                 Endpoints::APASS_V1_AUDIT_LOG_DATA_CHANGE_LOGS,
                 "app_id",
-                &request.app_id
+                &request.app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -237,7 +237,7 @@ impl AuditLogService {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_AUDIT_LOG_DATA_CHANGE_LOG_GET,
-                &[("app_id", app_id), ("log_id", log_id)]
+                &[("app_id", &app_id), ("log_id", &log_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -265,7 +265,7 @@ impl AuditLogService {
             api_path: EndpointBuilder::replace_param(
                 Endpoints::APASS_V1_AUDIT_LOG_AUDIT_EVENTS,
                 "app_id",
-                app_id
+                &app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
diff --git a/src/service/apass/environment_variable/mod.rs b/src/service/apass/environment_variable/mod.rs
index d929226..1c35fb6 100644
--- a/src/service/apass/environment_variable/mod.rs
+++ b/src/service/apass/environment_variable/mod.rs
@@ -74,7 +74,7 @@ impl EnvironmentVariableService {
             api_path: EndpointBuilder::replace_param(
                 Endpoints::APASS_V1_ENVIRONMENT_VARIABLE_QUERY,
                 "app_id",
-                &request.app_id
+                &request.app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -111,7 +111,10 @@ impl EnvironmentVariableService {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_ENVIRONMENT_VARIABLE_GET,
-                &[("app_id", &request.app_id), ("variable_name", &request.variable_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("variable_name", &request.variable_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
diff --git a/src/service/apass/flow/mod.rs b/src/service/apass/flow/mod.rs
index f52dbb8..513d694 100644
--- a/src/service/apass/flow/mod.rs
+++ b/src/service/apass/flow/mod.rs
@@ -123,7 +123,10 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_EXECUTE,
-                &[("app_id", &request.app_id), ("flow_api_name", &request.flow_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("flow_api_name", &request.flow_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -153,7 +156,7 @@ impl FlowService {
             api_path: EndpointBuilder::replace_param(
                 Endpoints::APASS_V1_FLOW_USER_TASK_QUERY,
                 "app_id",
-                &request.app_id
+                &request.app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -193,7 +196,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_AGREE,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -223,7 +226,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_REJECT,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -253,7 +256,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_TRANSFER,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -283,7 +286,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_ADD_ASSIGNEE,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -313,7 +316,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_CC,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -343,7 +346,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_EXPEDITING,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -372,7 +375,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_CANCEL,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -403,7 +406,7 @@ impl FlowService {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_ROLLBACK_POINTS,
-                &[("app_id", app_id), ("task_id", task_id)]
+                &[("app_id", &app_id), ("task_id", &task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -430,7 +433,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_ROLLBACK,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -460,7 +463,7 @@ impl FlowService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FLOW_USER_TASK_CHAT_GROUP,
-                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
+                &[("app_id", &request.app_id), ("task_id", &request.task_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
diff --git a/src/service/apass/function/mod.rs b/src/service/apass/function/mod.rs
index da35f81..8052697 100644
--- a/src/service/apass/function/mod.rs
+++ b/src/service/apass/function/mod.rs
@@ -56,7 +56,10 @@ impl FunctionService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_FUNCTION_INVOKE,
-                &[("app_id", &request.app_id), ("function_name", &request.function_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("function_name", &request.function_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
diff --git a/src/service/apass/object/mod.rs b/src/service/apass/object/mod.rs
index c281d7a..aea20c9 100644
--- a/src/service/apass/object/mod.rs
+++ b/src/service/apass/object/mod.rs
@@ -171,7 +171,7 @@ impl ObjectService {
             api_path: EndpointBuilder::replace_param(
                 Endpoints::APASS_V1_OBJECT_OQL,
                 "app_id",
-                &request.app_id
+                &request.app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -201,7 +201,10 @@ impl ObjectService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_SEARCH,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -240,7 +243,11 @@ impl ObjectService {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_GET,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name), ("record_id", &request.record_id)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                    ("record_id", &request.record_id),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -272,7 +279,11 @@ impl ObjectService {
             http_method: Method::PATCH,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_UPDATE,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name), ("record_id", &request.record_id)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                    ("record_id", &request.record_id),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request.data)?,
@@ -299,7 +310,11 @@ impl ObjectService {
             http_method: Method::DELETE,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_DELETE,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name), ("record_id", &request.record_id)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                    ("record_id", &request.record_id),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -326,7 +341,10 @@ impl ObjectService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_CREATE,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request.data)?,
@@ -353,7 +371,10 @@ impl ObjectService {
             http_method: Method::PATCH,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_BATCH_UPDATE,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -382,7 +403,10 @@ impl ObjectService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_BATCH_QUERY,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -422,7 +446,10 @@ impl ObjectService {
             http_method: Method::DELETE,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_BATCH_DELETE,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -451,7 +478,10 @@ impl ObjectService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_OBJECT_RECORD_BATCH_CREATE,
-                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("object_api_name", &request.object_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
diff --git a/src/service/apass/permission/mod.rs b/src/service/apass/permission/mod.rs
index 1e46cfd..3a19da8 100644
--- a/src/service/apass/permission/mod.rs
+++ b/src/service/apass/permission/mod.rs
@@ -75,7 +75,10 @@ impl PermissionService {
             http_method: Method::DELETE,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_REMOVE,
-                &[("app_id", &request.app_id), ("role_api_name", &request.role_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("role_api_name", &request.role_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -104,7 +107,10 @@ impl PermissionService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_CREATE,
-                &[("app_id", &request.app_id), ("role_api_name", &request.role_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    ("role_api_name", &request.role_api_name),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -137,7 +143,11 @@ impl PermissionService {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_PERMISSION_ROLE_MEMBER_GET,
-                &[("app_id", app_id), ("role_api_name", role_api_name), ("user_id", user_id)]
+                &[
+                    ("app_id", &app_id),
+                    ("role_api_name", &role_api_name),
+                    ("user_id", &user_id),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
@@ -164,7 +174,13 @@ impl PermissionService {
             http_method: Method::DELETE,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_REMOVE,
-                &[("app_id", &request.app_id), ("record_permission_api_name", &request.record_permission_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    (
+                        "record_permission_api_name",
+                        &request.record_permission_api_name,
+                    ),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
@@ -194,7 +210,13 @@ impl PermissionService {
             http_method: Method::POST,
             api_path: EndpointBuilder::replace_params_from_array(
                 Endpoints::APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_CREATE,
-                &[("app_id", &request.app_id), ("record_permission_api_name", &request.record_permission_api_name)]
+                &[
+                    ("app_id", &request.app_id),
+                    (
+                        "record_permission_api_name",
+                        &request.record_permission_api_name,
+                    ),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&serde_json::json!({
diff --git a/src/service/application/v6/admin/mod.rs b/src/service/application/v6/admin/mod.rs
index 7cc2669..86fc33a 100644
--- a/src/service/application/v6/admin/mod.rs
+++ b/src/service/application/v6/admin/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -50,7 +51,7 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/application/v6/admin/apps".to_string(),
+            api_path: Endpoints::APPLICATION_V6_ADMIN_APPS.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -85,7 +86,11 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/admin/user_available_apps/{user_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_USER_AVAILABLE_APPS,
+                "user_id",
+                user_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -115,8 +120,10 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/admin/apps/{app_id}/contacts_range_configuration"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_CONTACTS_RANGE_CONFIGURATION_GET,
+                "app_id",
+                app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -148,8 +155,10 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!(
-                "/open-apis/application/v6/admin/apps/{app_id}/contacts_range_configuration"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_CONTACTS_RANGE_CONFIGURATION_SET,
+                "app_id",
+                app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -181,7 +190,11 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/admin/apps/{app_id}/visibility"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_VISIBILITY,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -212,8 +225,10 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!(
-                "/open-apis/application/v6/admin/apps/{app_id}/check_white_black_list"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_CHECK_WHITE_BLACK_LIST,
+                "app_id",
+                app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -246,7 +261,11 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/admin/apps/{app_id}/visibility"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_VISIBILITY_CREATE,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -265,7 +284,11 @@ impl AdminService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/admin/apps/{app_id}/enable"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_ENABLE,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -296,7 +319,11 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/admin/apps/{app_id}/admins"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_ADMIN_APP_ADMINS,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -327,8 +354,9 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/admin/apps/{app_id}/admins/{user_id}/management_permissions"
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_ADMIN_APP_ADMIN_MANAGEMENT_PERMISSIONS,
+                &[("app_id", app_id), ("user_id", user_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -353,8 +381,9 @@ impl AdminService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/admin/apps/{app_id}/admins/{user_id}/verify"
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_ADMIN_APP_ADMIN_VERIFY,
+                &[("app_id", app_id), ("user_id", user_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
diff --git a/src/service/application/v6/app_badge/mod.rs b/src/service/application/v6/app_badge/mod.rs
index fdf8041..f4f9215 100644
--- a/src/service/application/v6/app_badge/mod.rs
+++ b/src/service/application/v6/app_badge/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{BaseResponse, EmptyResponse},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -41,7 +42,10 @@ impl AppBadgeService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/app_badge/{app_id}/users/{user_id}/set"),
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_APP_BADGE_SET,
+                &[("app_id", app_id), ("user_id", user_id)],
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/application/v6/app_usage/mod.rs b/src/service/application/v6/app_usage/mod.rs
index 23b56fd..dbe60b0 100644
--- a/src/service/application/v6/app_usage/mod.rs
+++ b/src/service/application/v6/app_usage/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -52,7 +53,11 @@ impl AppUsageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/app_usage/{app_id}/department_overview"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_USAGE_DEPARTMENT_OVERVIEW,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -75,7 +80,11 @@ impl AppUsageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/app_usage/{app_id}/message_push_overview"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_USAGE_MESSAGE_PUSH_OVERVIEW,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -98,7 +107,11 @@ impl AppUsageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/app_usage/{app_id}/overview"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_USAGE_OVERVIEW,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/application/v6/application/mod.rs b/src/service/application/v6/application/mod.rs
index 8255308..01ba3e7 100644
--- a/src/service/application/v6/application/mod.rs
+++ b/src/service/application/v6/application/mod.rs
@@ -57,7 +57,11 @@ impl ApplicationService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/collaborators"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_COLLABORATORS,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -80,7 +84,11 @@ impl ApplicationService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/collaborators"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_COLLABORATORS,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -103,7 +111,11 @@ impl ApplicationService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_GET,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -127,8 +139,9 @@ impl ApplicationService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/applications/{app_id}/versions/{version_id}"
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_APP_VERSION_GET,
+                &[("app_id", app_id), ("version_id", version_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -160,7 +173,11 @@ impl ApplicationService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/versions"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_VERSIONS,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -184,8 +201,9 @@ impl ApplicationService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/applications/{app_id}/versions/{version_id}/contacts_range_suggest"
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_APP_VERSION_CONTACTS_RANGE_SUGGEST,
+                &[("app_id", app_id), ("version_id", version_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -216,7 +234,7 @@ impl ApplicationService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/application/v6/applications/underauditlist".to_string(),
+            api_path: Endpoints::APPLICATION_V6_APPS_UNDERAUDITLIST.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -234,7 +252,11 @@ impl ApplicationService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/audit"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_AUDIT,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -252,7 +274,11 @@ impl ApplicationService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/group"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_GROUP,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
diff --git a/src/service/application/v6/application_feedback/mod.rs b/src/service/application/v6/application_feedback/mod.rs
index 47a4723..8391683 100644
--- a/src/service/application/v6/application_feedback/mod.rs
+++ b/src/service/application/v6/application_feedback/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -40,7 +41,11 @@ impl ApplicationFeedbackService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/application/v6/application_feedback/{feedback_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APPLICATION_FEEDBACK_GET,
+                "feedback_id",
+                feedback_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -85,7 +90,7 @@ impl ApplicationFeedbackService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/application/v6/application_feedback".to_string(),
+            api_path: Endpoints::APPLICATION_V6_APPLICATION_FEEDBACK.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/application/v6/appstore_paid_info/mod.rs b/src/service/application/v6/appstore_paid_info/mod.rs
index 5a730e2..c4a5360 100644
--- a/src/service/application/v6/appstore_paid_info/mod.rs
+++ b/src/service/application/v6/appstore_paid_info/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -41,8 +42,13 @@ impl AppstorePaidInfoService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/appstore_paid_info/{app_id}/users/{user_id}/pricing_plans/{pricing_plan_id}/check"
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_APPSTORE_PAID_INFO_CHECK,
+                &[
+                    ("app_id", app_id),
+                    ("user_id", user_id),
+                    ("pricing_plan_id", pricing_plan_id),
+                ],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -70,8 +76,10 @@ impl AppstorePaidInfoService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/appstore_paid_info/{app_id}/pricing_plans"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APPSTORE_PAID_INFO_PRICING_PLANS,
+                "app_id",
+                app_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -90,8 +98,9 @@ impl AppstorePaidInfoService {
     ) -> SDKResult<BaseResponse<GetOrderInfoResponse>> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/application/v6/appstore_paid_info/{app_id}/orders/{order_id}"
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::APPLICATION_V6_APPSTORE_PAID_INFO_ORDER_GET,
+                &[("app_id", app_id), ("order_id", order_id)],
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
diff --git a/src/service/application/v6/scope/mod.rs b/src/service/application/v6/scope/mod.rs
index 751e703..8071a79 100644
--- a/src/service/application/v6/scope/mod.rs
+++ b/src/service/application/v6/scope/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -34,7 +35,11 @@ impl ScopeService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/scope/apply"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_SCOPE_APPLY,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -57,7 +62,11 @@ impl ScopeService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/application/v6/applications/{app_id}/scope"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPLICATION_V6_APP_SCOPE_GET,
+                "app_id",
+                app_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/approval/mod.rs b/src/service/approval/v4/approval/mod.rs
index 9a285b0..ca15ae8 100644
--- a/src/service/approval/v4/approval/mod.rs
+++ b/src/service/approval/v4/approval/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -91,7 +92,7 @@ impl ApprovalService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/approvals".to_string(),
+            api_path: Endpoints::APPROVAL_V4_APPROVALS.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -122,7 +123,11 @@ impl ApprovalService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/approval/v4/approvals/{approval_code}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_APPROVAL_GET,
+                "approval_code",
+                approval_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/external_approval/mod.rs b/src/service/approval/v4/external_approval/mod.rs
index 44017cd..b9cec0c 100644
--- a/src/service/approval/v4/external_approval/mod.rs
+++ b/src/service/approval/v4/external_approval/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -104,7 +105,7 @@ impl ExternalApprovalService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/external_approvals".to_string(),
+            api_path: Endpoints::APPROVAL_V4_EXTERNAL_APPROVALS.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -128,7 +129,11 @@ impl ExternalApprovalService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/approval/v4/external_approvals/{approval_code}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_EXTERNAL_APPROVAL_GET,
+                "approval_code",
+                approval_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/external_instance/mod.rs b/src/service/approval/v4/external_instance/mod.rs
index ab6e1aa..54c5fe0 100644
--- a/src/service/approval/v4/external_instance/mod.rs
+++ b/src/service/approval/v4/external_instance/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -97,7 +98,7 @@ impl ExternalInstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/external_instances".to_string(),
+            api_path: Endpoints::APPROVAL_V4_EXTERNAL_INSTANCES.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -122,7 +123,11 @@ impl ExternalInstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/external_instances/{instance_code}/check"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_EXTERNAL_INSTANCE_CHECK,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/approval/v4/external_task/mod.rs b/src/service/approval/v4/external_task/mod.rs
index 2a010b5..943b989 100644
--- a/src/service/approval/v4/external_task/mod.rs
+++ b/src/service/approval/v4/external_task/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -87,7 +88,7 @@ impl ExternalTaskService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/external_tasks".to_string(),
+            api_path: Endpoints::APPROVAL_V4_EXTERNAL_TASKS.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/file/mod.rs b/src/service/approval/v4/file/mod.rs
index 8d57be3..f827ced 100644
--- a/src/service/approval/v4/file/mod.rs
+++ b/src/service/approval/v4/file/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -53,7 +54,7 @@ impl FileService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/files/upload".to_string(),
+            api_path: Endpoints::APPROVAL_V4_FILE_UPLOAD.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&metadata)
                 .map_err(|e| LarkAPIError::DeserializeError(e.to_string()))?,
diff --git a/src/service/approval/v4/instance/mod.rs b/src/service/approval/v4/instance/mod.rs
index ae1c69a..6e38305 100644
--- a/src/service/approval/v4/instance/mod.rs
+++ b/src/service/approval/v4/instance/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -171,7 +172,7 @@ impl InstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/instances".to_string(),
+            api_path: Endpoints::APPROVAL_V4_INSTANCES.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -195,7 +196,11 @@ impl InstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/instances/{instance_code}/cancel"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_INSTANCE_CANCEL,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -219,7 +224,11 @@ impl InstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/instances/{instance_code}/cc"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_INSTANCE_CC,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -250,7 +259,7 @@ impl InstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/instances/preview".to_string(),
+            api_path: Endpoints::APPROVAL_V4_INSTANCE_PREVIEW.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -274,7 +283,11 @@ impl InstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/approval/v4/instances/{instance_code}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_INSTANCE_GET,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -313,7 +326,7 @@ impl InstanceService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/instances".to_string(),
+            api_path: Endpoints::APPROVAL_V4_INSTANCES_LIST.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/instance_comment/mod.rs b/src/service/approval/v4/instance_comment/mod.rs
index ffc704c..8cffdca 100644
--- a/src/service/approval/v4/instance_comment/mod.rs
+++ b/src/service/approval/v4/instance_comment/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -80,7 +81,11 @@ impl InstanceCommentService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/instances/{instance_code}/comments"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_INSTANCE_COMMENTS_CREATE,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -105,9 +110,14 @@ impl InstanceCommentService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!(
-                "/open-apis/approval/v4/instances/{instance_code}/comments/{comment_id}"
-            ),
+            api_path: {
+                let path = EndpointBuilder::replace_param(
+                    Endpoints::APPROVAL_V4_INSTANCE_COMMENT_DELETE,
+                    "instance_code",
+                    &instance_code,
+                );
+                EndpointBuilder::replace_param(&path, "comment_id", &comment_id)
+            },
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -130,7 +140,11 @@ impl InstanceCommentService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!("/open-apis/approval/v4/instances/{instance_code}/comments"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_INSTANCE_COMMENTS_REPLY,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -161,7 +175,11 @@ impl InstanceCommentService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/approval/v4/instances/{instance_code}/comments"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_INSTANCE_COMMENTS_LIST,
+                "instance_code",
+                instance_code,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/message/mod.rs b/src/service/approval/v4/message/mod.rs
index 75a0d40..85a62ca 100644
--- a/src/service/approval/v4/message/mod.rs
+++ b/src/service/approval/v4/message/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -76,7 +77,7 @@ impl MessageService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/approval/v4/messages".to_string(),
+            api_path: Endpoints::APPROVAL_V4_MESSAGES.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -101,7 +102,11 @@ impl MessageService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/approval/v4/messages/{message_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_MESSAGE_PATCH,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/approval/v4/search/mod.rs b/src/service/approval/v4/search/mod.rs
index e4a2d56..483a927 100644
--- a/src/service/approval/v4/search/mod.rs
+++ b/src/service/approval/v4/search/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -172,7 +173,7 @@ impl SearchService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/instances/search".to_string(),
+            api_path: Endpoints::APPROVAL_V4_INSTANCES_SEARCH.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -220,7 +221,7 @@ impl SearchService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/tasks/search".to_string(),
+            api_path: Endpoints::APPROVAL_V4_TASKS_SEARCH.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -259,7 +260,7 @@ impl SearchService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/instances/search_cc".to_string(),
+            api_path: Endpoints::APPROVAL_V4_INSTANCES_SEARCH_CC.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -285,7 +286,7 @@ impl SearchService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/approvals/search".to_string(),
+            api_path: Endpoints::APPROVAL_V4_APPROVALS_SEARCH.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -330,7 +331,7 @@ impl SearchService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/approval/v4/tasks/query".to_string(),
+            api_path: Endpoints::APPROVAL_V4_TASKS_QUERY.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/approval/v4/task/mod.rs b/src/service/approval/v4/task/mod.rs
index e801d08..6fc7dd8 100644
--- a/src/service/approval/v4/task/mod.rs
+++ b/src/service/approval/v4/task/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{BaseResponse, EmptyResponse},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -104,7 +105,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/tasks/{task_id}/approve"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_TASK_APPROVE,
+                "task_id",
+                task_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -129,7 +134,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/tasks/{task_id}/reject"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_TASK_REJECT,
+                "task_id",
+                task_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -154,7 +163,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/tasks/{task_id}/transfer"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_TASK_TRANSFER,
+                "task_id",
+                task_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -179,7 +192,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/tasks/{task_id}/specified_rollback"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_TASK_SPECIFIED_ROLLBACK,
+                "task_id",
+                task_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -204,7 +221,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/tasks/{task_id}/add_sign"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_TASK_ADD_SIGN,
+                "task_id",
+                task_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -229,7 +250,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/approval/v4/tasks/{task_id}/resubmit"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::APPROVAL_V4_TASK_RESUBMIT,
+                "task_id",
+                task_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/attendance/v1/archive_rule.rs b/src/service/attendance/v1/archive_rule.rs
index 0abbc63..0439000 100644
--- a/src/service/attendance/v1/archive_rule.rs
+++ b/src/service/attendance/v1/archive_rule.rs
@@ -3,8 +3,13 @@ use serde_json::json;
 
 use crate::{
     core::{
-        api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-        req_option::RequestOption, SDKResult,
+        api_resp::BaseResponse,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
+        req_option::RequestOption,
+        SDKResult,
     },
     impl_executable_builder_owned,
 };
@@ -33,9 +38,10 @@ impl ArchiveRuleService {
     ) -> SDKResult<BaseResponse<QueryArchiveStatsFieldsRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/archive_rules/{}/user_stats_fields",
-            request.archive_rule_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_ARCHIVE_RULE_USER_STATS_FIELDS,
+            "archive_rule_id",
+            &request.archive_rule_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
@@ -60,9 +66,10 @@ impl ArchiveRuleService {
     ) -> SDKResult<BaseResponse<UploadArchiveReportRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/archive_rules/{}/upload_report",
-            request.archive_rule_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_ARCHIVE_RULE_UPLOAD_REPORT,
+            "archive_rule_id",
+            &request.archive_rule_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
@@ -94,9 +101,10 @@ impl ArchiveRuleService {
     ) -> SDKResult<BaseResponse<DelArchiveReportRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/archive_rules/{}/del_report",
-            request.archive_rule_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_ARCHIVE_RULE_DEL_REPORT,
+            "archive_rule_id",
+            &request.archive_rule_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
@@ -128,7 +136,7 @@ impl ArchiveRuleService {
     ) -> SDKResult<BaseResponse<ListArchiveRulesRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/archive_rules".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_ARCHIVE_RULES.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
diff --git a/src/service/attendance/v1/group.rs b/src/service/attendance/v1/group.rs
index 98da09c..22805b0 100644
--- a/src/service/attendance/v1/group.rs
+++ b/src/service/attendance/v1/group.rs
@@ -35,7 +35,11 @@ impl GroupService {
     ) -> SDKResult<BaseResponse<ListGroupUserRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!("/open-apis/attendance/v1/groups/{}/users", request.group_id);
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_GROUP_USERS,
+            "group_id",
+            &request.group_id,
+        );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -75,7 +79,7 @@ impl GroupService {
     ) -> SDKResult<BaseResponse<CreateGroupRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/groups".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_GROUPS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -141,7 +145,11 @@ impl GroupService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::DELETE;
-        api_req.api_path = format!("/open-apis/attendance/v1/groups/{}", request.group_id);
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_GROUP_DELETE,
+            "group_id",
+            &request.group_id,
+        );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         let api_resp = Transport::request(api_req, &self.config, option).await?;
@@ -160,7 +168,11 @@ impl GroupService {
     ) -> SDKResult<BaseResponse<Group>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!("/open-apis/attendance/v1/groups/{}", request.group_id);
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_GROUP_DELETE,
+            "group_id",
+            &request.group_id,
+        );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -188,7 +200,7 @@ impl GroupService {
     ) -> SDKResult<BaseResponse<SearchGroupRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/groups/search".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_GROUPS_SEARCH.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -223,7 +235,7 @@ impl GroupService {
     ) -> SDKResult<BaseResponse<ListGroupRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/groups".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_GROUPS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
diff --git a/src/service/attendance/v1/leave_accrual_record.rs b/src/service/attendance/v1/leave_accrual_record.rs
index 48ff904..7d94c59 100644
--- a/src/service/attendance/v1/leave_accrual_record.rs
+++ b/src/service/attendance/v1/leave_accrual_record.rs
@@ -3,8 +3,13 @@ use serde_json::json;
 
 use crate::{
     core::{
-        api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-        req_option::RequestOption, SDKResult,
+        api_resp::BaseResponse,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
+        req_option::RequestOption,
+        SDKResult,
     },
     impl_executable_builder_owned,
 };
@@ -30,9 +35,10 @@ impl LeaveAccrualRecordService {
     ) -> SDKResult<BaseResponse<PatchLeaveAccrualRecordRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::PATCH;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/leave_accrual_records/{}",
-            request.leave_accrual_record_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_LEAVE_ACCRUAL_RECORD_GET,
+            "leave_accrual_record_id",
+            &request.leave_accrual_record_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
diff --git a/src/service/attendance/v1/leave_employ_expire_record.rs b/src/service/attendance/v1/leave_employ_expire_record.rs
index 2759032..c7d1685 100644
--- a/src/service/attendance/v1/leave_employ_expire_record.rs
+++ b/src/service/attendance/v1/leave_employ_expire_record.rs
@@ -1,7 +1,7 @@
 use crate::{
     core::{
-        api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-        req_option::RequestOption, SDKResult,
+        api_resp::BaseResponse, config::Config, constants::AccessTokenType, endpoints::Endpoints,
+        http::Transport, req_option::RequestOption, SDKResult,
     },
     impl_executable_builder_owned,
 };
@@ -28,7 +28,7 @@ impl LeaveEmployExpireRecordService {
     ) -> SDKResult<BaseResponse<GetLeaveEmployExpireRecordRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/leave_employ_expire_records".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_LEAVE_EMPLOY_EXPIRE_RECORDS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
diff --git a/src/service/attendance/v1/user_approval.rs b/src/service/attendance/v1/user_approval.rs
index 8a4dfb6..fd16719 100644
--- a/src/service/attendance/v1/user_approval.rs
+++ b/src/service/attendance/v1/user_approval.rs
@@ -2,8 +2,13 @@ use reqwest::Method;
 use serde_json::json;
 
 use crate::core::{
-    api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-    req_option::RequestOption, SDKResult,
+    api_resp::BaseResponse,
+    config::Config,
+    constants::AccessTokenType,
+    endpoints::{EndpointBuilder, Endpoints},
+    http::Transport,
+    req_option::RequestOption,
+    SDKResult,
 };
 
 use super::models::{
@@ -29,7 +34,7 @@ impl UserApprovalService {
     ) -> SDKResult<BaseResponse<QueryUserApprovalRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/user_approvals".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_APPROVALS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -79,7 +84,7 @@ impl UserApprovalService {
     ) -> SDKResult<BaseResponse<CreateUserApprovalRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_approvals".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_APPROVALS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -115,9 +120,10 @@ impl UserApprovalService {
     ) -> SDKResult<BaseResponse<ProcessUserApprovalRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/user_approvals/{}/process",
-            request.approval_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_USER_APPROVAL_PROCESS,
+            "approval_id",
+            &request.approval_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
diff --git a/src/service/attendance/v1/user_daily_shift.rs b/src/service/attendance/v1/user_daily_shift.rs
index 914a337..723f3c1 100644
--- a/src/service/attendance/v1/user_daily_shift.rs
+++ b/src/service/attendance/v1/user_daily_shift.rs
@@ -2,8 +2,8 @@ use reqwest::Method;
 use serde_json::json;
 
 use crate::core::{
-    api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-    req_option::RequestOption, SDKResult,
+    api_resp::BaseResponse, config::Config, constants::AccessTokenType, endpoints::Endpoints,
+    http::Transport, req_option::RequestOption, SDKResult,
 };
 
 use super::models::{
@@ -31,7 +31,7 @@ impl UserDailyShiftService {
     ) -> SDKResult<BaseResponse<BatchCreateUserDailyShiftRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_daily_shifts/batch_create".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_DAILY_SHIFTS_BATCH_CREATE.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加必需的查询参数
@@ -62,7 +62,7 @@ impl UserDailyShiftService {
     ) -> SDKResult<BaseResponse<QueryUserDailyShiftRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_daily_shifts/query".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_DAILY_SHIFTS_QUERY.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加必需的查询参数
@@ -96,8 +96,7 @@ impl UserDailyShiftService {
     ) -> SDKResult<BaseResponse<BatchCreateTempUserDailyShiftRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path =
-            "/open-apis/attendance/v1/user_daily_shifts/batch_create_temp".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_DAILY_SHIFTS_BATCH_CREATE_TEMP.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加必需的查询参数
diff --git a/src/service/attendance/v1/user_setting.rs b/src/service/attendance/v1/user_setting.rs
index 975277e..d04a4c8 100644
--- a/src/service/attendance/v1/user_setting.rs
+++ b/src/service/attendance/v1/user_setting.rs
@@ -5,6 +5,7 @@ use crate::core::{
     api_resp::{BaseResponse, EmptyResponse},
     config::Config,
     constants::AccessTokenType,
+    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
@@ -34,9 +35,10 @@ impl UserSettingService {
     ) -> SDKResult<BaseResponse<ModifyUserSettingRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/user_settings/{}/modify",
-            request.user_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_USER_SETTINGS_MODIFY,
+            "user_id",
+            &request.user_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
@@ -79,7 +81,7 @@ impl UserSettingService {
     ) -> SDKResult<BaseResponse<QueryUserSettingRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_settings/query".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_SETTINGS_QUERY.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -110,9 +112,10 @@ impl UserSettingService {
     ) -> SDKResult<BaseResponse<UploadUserPhotoRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/user_settings/{}/upload",
-            request.user_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_USER_SETTINGS_UPLOAD,
+            "user_id",
+            &request.user_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
@@ -156,9 +159,10 @@ impl UserSettingService {
     ) -> SDKResult<Vec<u8>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/user_settings/{}/download",
-            request.user_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_USER_SETTINGS_DOWNLOAD,
+            "user_id",
+            &request.user_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
diff --git a/src/service/attendance/v1/user_stats_data.rs b/src/service/attendance/v1/user_stats_data.rs
index e5fd402..a1b7bb7 100644
--- a/src/service/attendance/v1/user_stats_data.rs
+++ b/src/service/attendance/v1/user_stats_data.rs
@@ -3,8 +3,8 @@ use serde_json::json;
 
 use crate::{
     core::{
-        api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-        req_option::RequestOption, SDKResult,
+        api_resp::BaseResponse, config::Config, constants::AccessTokenType, endpoints::Endpoints,
+        http::Transport, req_option::RequestOption, SDKResult,
     },
     impl_executable_builder_owned,
 };
@@ -33,7 +33,7 @@ impl UserStatsDataService {
     ) -> SDKResult<BaseResponse<UpdateUserStatsDataRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_stats_datas/update".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_STATS_DATAS_UPDATE.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -64,7 +64,7 @@ impl UserStatsDataService {
     ) -> SDKResult<BaseResponse<QueryStatsSettingsRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/user_stats_datas/query".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_STATS_DATAS_QUERY.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -88,7 +88,7 @@ impl UserStatsDataService {
     ) -> SDKResult<BaseResponse<QueryStatsFieldsRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/user_stats_datas/query_fields".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_STATS_DATAS_QUERY_FIELDS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -116,7 +116,7 @@ impl UserStatsDataService {
     ) -> SDKResult<BaseResponse<QueryUserStatsDataRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_stats_datas/query_data".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_STATS_DATAS_QUERY_DATA.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
diff --git a/src/service/attendance/v1/user_task.rs b/src/service/attendance/v1/user_task.rs
index ef0079f..8777cb0 100644
--- a/src/service/attendance/v1/user_task.rs
+++ b/src/service/attendance/v1/user_task.rs
@@ -2,8 +2,13 @@ use reqwest::Method;
 use serde_json::json;
 
 use crate::core::{
-    api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
-    req_option::RequestOption, SDKResult,
+    api_resp::BaseResponse,
+    config::Config,
+    constants::AccessTokenType,
+    endpoints::{EndpointBuilder, Endpoints},
+    http::Transport,
+    req_option::RequestOption,
+    SDKResult,
 };
 
 use super::models::{
@@ -30,7 +35,7 @@ impl UserTaskService {
     ) -> SDKResult<BaseResponse<BatchCreateUserTaskRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_tasks/batch_create".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_TASKS_BATCH_CREATE.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -61,9 +66,10 @@ impl UserTaskService {
     ) -> SDKResult<BaseResponse<GetUserTaskRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(
-            "/open-apis/attendance/v1/user_tasks/{}/get",
-            request.user_id
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::ATTENDANCE_V1_USER_TASK_GET,
+            "user_id",
+            &request.user_id,
         );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
@@ -91,7 +97,7 @@ impl UserTaskService {
     ) -> SDKResult<BaseResponse<QueryUserTaskRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/user_tasks/query".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_TASKS_QUERY.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -145,7 +151,7 @@ impl UserTaskService {
     ) -> SDKResult<BaseResponse<BatchDelUserTaskRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = "/open-apis/attendance/v1/user_tasks/batch_del".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_TASKS_BATCH_DELETE.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
@@ -176,7 +182,7 @@ impl UserTaskService {
     ) -> SDKResult<BaseResponse<QueryUserTaskResultRespData>> {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
-        api_req.api_path = "/open-apis/attendance/v1/user_task_results/query".to_string();
+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_TASK_RESULTS_QUERY.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
diff --git a/src/service/attendance/v1/user_task_remedy.rs b/src/service/attendance/v1/user_task_remedy.rs
index 0be84e9..ffb32ac 100644
--- a/src/service/attendance/v1/user_task_remedy.rs
+++ b/src/service/attendance/v1/user_task_remedy.rs
@@ -69,7 +69,7 @@ impl UserTaskRemedyService {
         let mut api_req = request.api_req;
         api_req.http_method = Method::GET;
         api_req.api_path =
-            "/open-apis/attendance/v1/user_task_remedys/query_user_allowed_remedys".to_string();
+            Endpoints::ATTENDANCE_V1_USER_TASK_REMEDYS_QUERY_USER_ALLOWED_REMEDYS.to_string();
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
 
         // 添加查询参数
diff --git a/src/service/cloud_docs/bitable/v1/app/copy.rs b/src/service/cloud_docs/bitable/v1/app/copy.rs
index 3342665..59134d6 100644
--- a/src/service/cloud_docs/bitable/v1/app/copy.rs
+++ b/src/service/cloud_docs/bitable/v1/app/copy.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,7 +24,8 @@ impl AppService {
     ) -> SDKResult<BaseResponse<CopyAppResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_APP_COPY, request.app_token);
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_APP_COPY
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&CopyAppRequestBody {
             name: request.name,
diff --git a/src/service/cloud_docs/bitable/v1/app/get.rs b/src/service/cloud_docs/bitable/v1/app/get.rs
index da96f16..779fb0c 100644
--- a/src/service/cloud_docs/bitable/v1/app/get.rs
+++ b/src/service/cloud_docs/bitable/v1/app/get.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -27,7 +26,8 @@ impl AppService {
     ) -> SDKResult<BaseResponse<GetAppResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_APP_GET, request.app_token);
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_APP_GET
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         let api_resp = Transport::request(api_req, &self.config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/app/update.rs b/src/service/cloud_docs/bitable/v1/app/update.rs
index 33b797c..2e290cb 100644
--- a/src/service/cloud_docs/bitable/v1/app/update.rs
+++ b/src/service/cloud_docs/bitable/v1/app/update.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -27,7 +26,8 @@ impl AppService {
     ) -> SDKResult<BaseResponse<UpdateAppResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::PUT;
-        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_APP_UPDATE, request.app_token);
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_APP_UPDATE
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&UpdateAppRequestBody {
             name: request.name,
diff --git a/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs b/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs
index 0b4dbfa..e12ee35 100644
--- a/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs
+++ b/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs
@@ -7,7 +7,6 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -112,11 +111,9 @@ pub async fn copy_dashboard(
 ) -> SDKResult<BaseResponse<CopyDashboardResponse>> {
     let mut api_req = request.api_request;
     api_req.http_method = Method::POST;
-    api_req.api_path = format!(
-        crate::core::endpoints::BITABLE_V1_DASHBOARD_COPY,
-        app_token = request.app_token,
-        block_id = request.block_id
-    );
+    api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_DASHBOARD_COPY
+        .replace("{app_token}", &request.app_token)
+        .replace("{block_id}", &request.block_id);
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
     let api_resp = Transport::request(api_req, config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs b/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs
index 14f814f..5ca484b 100644
--- a/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,8 @@ impl AppTableService {
     ) -> SDKResult<BaseResponse<BatchCreateTablesResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_TABLES_BATCH_CREATE,
-            request.app_token
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_TABLES_BATCH_CREATE
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&BatchCreateTablesRequestBody {
             tables: request.tables,
diff --git a/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs b/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs
index f38a4fe..3bb5ed1 100644
--- a/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,8 @@ impl AppTableService {
     ) -> SDKResult<BaseResponse<BatchDeleteTablesResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_TABLES_BATCH_DELETE,
-            request.app_token
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_TABLES_BATCH_DELETE
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&BatchDeleteTablesRequestBody {
             table_ids: request.table_ids,
diff --git a/src/service/cloud_docs/bitable/v1/app_table/create.rs b/src/service/cloud_docs/bitable/v1/app_table/create.rs
index 19b2a34..b6d483b 100644
--- a/src/service/cloud_docs/bitable/v1/app_table/create.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table/create.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,7 +24,8 @@ impl AppTableService {
     ) -> SDKResult<BaseResponse<CreateTableResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_TABLE_CREATE, request.app_token);
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_TABLE_CREATE
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&CreateTableRequestBody {
             table: request.table,
diff --git a/src/service/cloud_docs/bitable/v1/app_table/delete.rs b/src/service/cloud_docs/bitable/v1/app_table/delete.rs
index 927f226..8ef2e6b 100644
--- a/src/service/cloud_docs/bitable/v1/app_table/delete.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table/delete.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,9 @@ impl AppTableService {
     ) -> SDKResult<BaseResponse<DeleteTableResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::DELETE;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_TABLE_DELETE,
-            request.app_token, request.table_id
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_TABLE_DELETE
+            .replace("{app_token}", &request.app_token)
+            .replace("{table_id}", &request.table_id);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         let api_resp = Transport::request(api_req, &self.config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/app_table/list.rs b/src/service/cloud_docs/bitable/v1/app_table/list.rs
index 022c64b..2ec5246 100644
--- a/src/service/cloud_docs/bitable/v1/app_table/list.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table/list.rs
@@ -5,7 +5,6 @@ use crate::core::{
     api_req::ApiRequest,
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     constants::AccessTokenType,
-    endpoints::Endpoints,
     http::Transport,
     req_option::RequestOption,
     SDKResult,
@@ -22,7 +21,8 @@ impl AppTableService {
     ) -> SDKResult<BaseResponse<ListTablesResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_TABLES, request.app_token);
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_TABLES
+            .replace("{app_token}", &request.app_token);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         // 添加查询参数
diff --git a/src/service/cloud_docs/bitable/v1/app_table/patch.rs b/src/service/cloud_docs/bitable/v1/app_table/patch.rs
index 7c40583..e7a4103 100644
--- a/src/service/cloud_docs/bitable/v1/app_table/patch.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table/patch.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,9 @@ impl AppTableService {
     ) -> SDKResult<BaseResponse<PatchTableResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::PATCH;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_TABLE_PATCH,
-            request.app_token, request.table_id
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_TABLE_PATCH
+            .replace("{app_token}", &request.app_token)
+            .replace("{table_id}", &request.table_id);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&PatchTableRequestBody { name: request.name })?;
 
diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/create.rs b/src/service/cloud_docs/bitable/v1/app_table_view/create.rs
index f255616..1597b95 100644
--- a/src/service/cloud_docs/bitable/v1/app_table_view/create.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table_view/create.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,9 @@ impl AppTableViewService {
     ) -> SDKResult<BaseResponse<CreateViewResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::POST;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_VIEW_CREATE,
-            request.app_token, request.table_id
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_VIEW_CREATE
+            .replace("{app_token}", &request.app_token)
+            .replace("{table_id}", &request.table_id);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&CreateViewRequestBody { view: request.view })?;
 
diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs b/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs
index e591e49..e628b84 100644
--- a/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs
@@ -7,7 +7,6 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -36,10 +35,10 @@ pub async fn delete_view(
 ) -> SDKResult<BaseResponse<DeleteViewResponse>> {
     let mut api_req = request.api_request;
     api_req.http_method = Method::DELETE;
-    api_req.api_path = format!(
-        crate::core::endpoints::BITABLE_V1_VIEW_DELETE,
-        request.app_token, request.table_id, request.view_id
-    );
+    api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_VIEW_DELETE
+        .replace("{app_token}", &request.app_token)
+        .replace("{table_id}", &request.table_id)
+        .replace("{view_id}", &request.view_id);
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
     let api_resp = Transport::request(api_req, config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/get.rs b/src/service/cloud_docs/bitable/v1/app_table_view/get.rs
index fc3a48b..0d3945b 100644
--- a/src/service/cloud_docs/bitable/v1/app_table_view/get.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table_view/get.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,10 @@ impl AppTableViewService {
     ) -> SDKResult<BaseResponse<GetViewResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_VIEW_GET,
-            request.app_token, request.table_id, request.view_id
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_VIEW_GET
+            .replace("{app_token}", &request.app_token)
+            .replace("{table_id}", &request.table_id)
+            .replace("{view_id}", &request.view_id);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         let api_resp = Transport::request(api_req, &self.config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
index ffaee23..f84b951 100644
--- a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
@@ -5,7 +5,6 @@ use crate::core::{
     api_req::ApiRequest,
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     constants::AccessTokenType,
-    endpoints::Endpoints,
     http::Transport,
     req_option::RequestOption,
     SDKResult,
@@ -22,10 +21,9 @@ impl AppTableViewService {
     ) -> SDKResult<BaseResponse<ListViewsResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::GET;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_VIEWS,
-            request.app_token, request.table_id
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_VIEWS
+            .replace("{app_token}", &request.app_token)
+            .replace("{table_id}", &request.table_id);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         // 添加查询参数
diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs b/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs
index 7cfe80e..63a68e3 100644
--- a/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs
+++ b/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs
@@ -6,7 +6,6 @@ use crate::{
         api_req::ApiRequest,
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -25,10 +24,10 @@ impl AppTableViewService {
     ) -> SDKResult<BaseResponse<PatchViewResponse>> {
         let mut api_req = request.api_request;
         api_req.http_method = Method::PATCH;
-        api_req.api_path = format!(
-            crate::core::endpoints::BITABLE_V1_VIEW_PATCH,
-            request.app_token, request.table_id, request.view_id
-        );
+        api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_VIEW_PATCH
+            .replace("{app_token}", &request.app_token)
+            .replace("{table_id}", &request.table_id)
+            .replace("{view_id}", &request.view_id);
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
         api_req.body = serde_json::to_vec(&PatchViewRequestBody {
             view_name: request.view_name,
diff --git a/src/service/cloud_docs/bitable/v1/form/get.rs b/src/service/cloud_docs/bitable/v1/form/get.rs
index f38ff56..a1c2afc 100644
--- a/src/service/cloud_docs/bitable/v1/form/get.rs
+++ b/src/service/cloud_docs/bitable/v1/form/get.rs
@@ -7,7 +7,6 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -118,11 +117,9 @@ pub async fn get_form(
 ) -> SDKResult<BaseResponse<GetFormResponse>> {
     let mut api_req = request.api_request;
     api_req.http_method = Method::GET;
-    api_req.api_path = format!(
-        crate::core::endpoints::BITABLE_V1_FORM_GET,
-        app_token = request.app_token,
-        form_id = request.form_id
-    );
+    api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_FORM_GET
+        .replace("{app_token}", &request.app_token)
+        .replace("{form_id}", &request.form_id);
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
     let api_resp = Transport::request(api_req, config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/form/list.rs b/src/service/cloud_docs/bitable/v1/form/list.rs
index 2a9a8cf..76fbf74 100644
--- a/src/service/cloud_docs/bitable/v1/form/list.rs
+++ b/src/service/cloud_docs/bitable/v1/form/list.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::Endpoints,
     http::Transport,
     req_option::RequestOption,
     SDKResult,
@@ -149,11 +148,9 @@ pub async fn list_form_questions(
 ) -> SDKResult<BaseResponse<ListFormQuestionResponse>> {
     let mut api_req = request.api_request;
     api_req.http_method = Method::GET;
-    api_req.api_path = format!(
-        crate::core::endpoints::BITABLE_V1_FORM_PATCH_META,
-        app_token = request.app_token,
-        form_id = request.form_id
-    );
+    api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_FORM_PATCH_META
+        .replace("{app_token}", &request.app_token)
+        .replace("{form_id}", &request.form_id);
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
     let api_resp = Transport::request(api_req, config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/form/patch.rs b/src/service/cloud_docs/bitable/v1/form/patch.rs
index 1070e4f..0cf9397 100644
--- a/src/service/cloud_docs/bitable/v1/form/patch.rs
+++ b/src/service/cloud_docs/bitable/v1/form/patch.rs
@@ -8,7 +8,6 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -156,12 +155,10 @@ pub async fn patch_form_question(
 ) -> SDKResult<BaseResponse<PatchFormQuestionResponse>> {
     let mut api_req = request.api_request;
     api_req.http_method = Method::PATCH;
-    api_req.api_path = format!(
-        crate::core::endpoints::BITABLE_V1_FORM_QUESTION,
-        app_token = request.app_token,
-        form_id = request.form_id,
-        question_id = request.question_id
-    );
+    api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_FORM_QUESTION
+        .replace("{app_token}", &request.app_token)
+        .replace("{form_id}", &request.form_id)
+        .replace("{question_id}", &request.question_id);
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
     let api_resp = Transport::request(api_req, config, option).await?;
diff --git a/src/service/cloud_docs/bitable/v1/form/patch_meta.rs b/src/service/cloud_docs/bitable/v1/form/patch_meta.rs
index f2088bc..dbdb929 100644
--- a/src/service/cloud_docs/bitable/v1/form/patch_meta.rs
+++ b/src/service/cloud_docs/bitable/v1/form/patch_meta.rs
@@ -7,7 +7,6 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -159,11 +158,9 @@ pub async fn patch_form_meta(
 ) -> SDKResult<BaseResponse<PatchFormMetaResponse>> {
     let mut api_req = request.api_request;
     api_req.http_method = Method::PATCH;
-    api_req.api_path = format!(
-        crate::core::endpoints::BITABLE_V1_FORM_PATCH,
-        app_token = request.app_token,
-        form_id = request.form_id
-    );
+    api_req.api_path = crate::core::endpoints::Endpoints::BITABLE_V1_FORM_PATCH
+        .replace("{app_token}", &request.app_token)
+        .replace("{form_id}", &request.form_id);
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
     let api_resp = Transport::request(api_req, config, option).await?;
diff --git a/src/service/cloud_docs/comments/batch_query.rs b/src/service/cloud_docs/comments/batch_query.rs
index ef57773..d5d2682 100644
--- a/src/service/cloud_docs/comments/batch_query.rs
+++ b/src/service/cloud_docs/comments/batch_query.rs
@@ -179,7 +179,8 @@ pub async fn batch_query_comments(
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
         Endpoints::COMMENT_V1_COMMENTS_BATCH_QUERY,
-        request.file_type, request.file_token
+        request.file_type,
+        request.file_token
     );
 
     // 添加用户ID类型查询参数
diff --git a/src/service/cloud_docs/comments/create.rs b/src/service/cloud_docs/comments/create.rs
index 6c560d4..4d7a884 100644
--- a/src/service/cloud_docs/comments/create.rs
+++ b/src/service/cloud_docs/comments/create.rs
@@ -240,7 +240,9 @@ pub async fn create_comment(
     api_req.http_method = Method::POST;
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
-        Endpoints::COMMENT_V1_COMMENTS, request.file_type, request.file_token
+        Endpoints::COMMENT_V1_COMMENTS,
+        request.file_type,
+        request.file_token
     );
 
     // 添加用户ID类型查询参数
diff --git a/src/service/cloud_docs/comments/delete_reply.rs b/src/service/cloud_docs/comments/delete_reply.rs
index 0a10f8e..d51dd3a 100644
--- a/src/service/cloud_docs/comments/delete_reply.rs
+++ b/src/service/cloud_docs/comments/delete_reply.rs
@@ -189,10 +189,8 @@ pub async fn delete_reply(
     let mut params = HashMap::new();
     params.insert("comment_id".to_string(), request.comment_id.clone());
     params.insert("reply_id".to_string(), request.reply_id.clone());
-    let endpoint = EndpointBuilder::replace_params(
-        Endpoints::COMMENT_V1_COMMENT_REPLY_DELETE,
-        &params
-    );
+    let endpoint =
+        EndpointBuilder::replace_params(Endpoints::COMMENT_V1_COMMENT_REPLY_DELETE, &params);
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
         endpoint, request.file_type, request.file_token
diff --git a/src/service/cloud_docs/comments/get.rs b/src/service/cloud_docs/comments/get.rs
index 8aeb61d..105c937 100644
--- a/src/service/cloud_docs/comments/get.rs
+++ b/src/service/cloud_docs/comments/get.rs
@@ -166,7 +166,8 @@ pub async fn get_comment(
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
         Endpoints::COMMENT_V1_COMMENT_GET.replace("{}", &request.comment_id),
-        request.file_type, request.file_token
+        request.file_type,
+        request.file_token
     );
 
     // 添加用户ID类型查询参数
diff --git a/src/service/cloud_docs/comments/list.rs b/src/service/cloud_docs/comments/list.rs
index 8aa0db1..a2ddef4 100644
--- a/src/service/cloud_docs/comments/list.rs
+++ b/src/service/cloud_docs/comments/list.rs
@@ -273,7 +273,9 @@ pub async fn list_comments(
     api_req.http_method = Method::GET;
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
-        Endpoints::COMMENT_V1_COMMENTS, request.file_type, request.file_token
+        Endpoints::COMMENT_V1_COMMENTS,
+        request.file_type,
+        request.file_token
     );
 
     // 构建查询参数
diff --git a/src/service/cloud_docs/comments/list_replies.rs b/src/service/cloud_docs/comments/list_replies.rs
index 997655d..c31cc92 100644
--- a/src/service/cloud_docs/comments/list_replies.rs
+++ b/src/service/cloud_docs/comments/list_replies.rs
@@ -188,7 +188,8 @@ pub async fn list_replies(
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
         Endpoints::COMMENT_V1_COMMENT_REPLIES.replace("{}", &request.comment_id),
-        request.file_type, request.file_token
+        request.file_type,
+        request.file_token
     );
 
     // 构建查询参数
diff --git a/src/service/cloud_docs/comments/patch.rs b/src/service/cloud_docs/comments/patch.rs
index 08e802b..082eaea 100644
--- a/src/service/cloud_docs/comments/patch.rs
+++ b/src/service/cloud_docs/comments/patch.rs
@@ -210,7 +210,8 @@ pub async fn patch_comment(
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
         Endpoints::COMMENT_V1_COMMENT_GET.replace("{}", &request.comment_id),
-        request.file_type, request.file_token
+        request.file_type,
+        request.file_token
     );
 
     // 添加用户ID类型查询参数
diff --git a/src/service/cloud_docs/comments/update_reply.rs b/src/service/cloud_docs/comments/update_reply.rs
index 5a6c71d..8f4b7be 100644
--- a/src/service/cloud_docs/comments/update_reply.rs
+++ b/src/service/cloud_docs/comments/update_reply.rs
@@ -201,11 +201,15 @@ pub async fn update_reply(
     api_req.http_method = Method::PUT;
     api_req.api_path = format!(
         "{}?file_type={}&file_token={}",
-        EndpointBuilder::replace_params(
+        EndpointBuilder::replace_params_from_array(
             Endpoints::COMMENT_V1_COMMENT_REPLY_UPDATE,
-            &[("comment_id", &request.comment_id), ("reply_id", &request.reply_id)]
+            &[
+                ("comment_id", &request.comment_id),
+                ("reply_id", &request.reply_id)
+            ]
         ),
-        request.file_type, request.file_token
+        request.file_type,
+        request.file_token
     );
 
     // 添加用户ID类型查询参数
diff --git a/src/service/cloud_docs/docx/v1/document_block.rs b/src/service/cloud_docs/docx/v1/document_block.rs
index 8a2325c..555748c 100644
--- a/src/service/cloud_docs/docx/v1/document_block.rs
+++ b/src/service/cloud_docs/docx/v1/document_block.rs
@@ -59,11 +59,9 @@ impl DocumentBlockService {
     ) -> SDKResult<BaseResponse<GetBlockRespData>> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                crate::core::endpoints::DOCX_V1_DOCUMENT_BLOCK_GET,
-                document_id.into(),
-                block_id.into()
-            ),
+            api_path: crate::core::endpoints::Endpoints::DOCX_V1_DOCUMENT_BLOCK_GET
+                .replace("{document_id}", &document_id.into())
+                .replace("{block_id}", &block_id.into()),
             supported_access_token_types: vec![AccessTokenType::User, AccessTokenType::Tenant],
             ..Default::default()
         };
@@ -86,11 +84,9 @@ impl DocumentBlockService {
     ) -> SDKResult<BaseResponse<PatchBlockRespData>> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!(
-                crate::core::endpoints::DOCX_V1_DOCUMENT_BLOCK_GET,
-                document_id.into(),
-                block_id.into()
-            ),
+            api_path: crate::core::endpoints::Endpoints::DOCX_V1_DOCUMENT_BLOCK_GET
+                .replace("{document_id}", &document_id.into())
+                .replace("{block_id}", &block_id.into()),
             supported_access_token_types: vec![AccessTokenType::User, AccessTokenType::Tenant],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -113,10 +109,8 @@ impl DocumentBlockService {
     ) -> SDKResult<BaseResponse<BatchUpdateBlockRespData>> {
         let mut api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!(
-                crate::core::endpoints::DOCX_V1_DOCUMENT_BLOCKS_BATCH_UPDATE,
-                document_id.into()
-            ),
+            api_path: crate::core::endpoints::Endpoints::DOCX_V1_DOCUMENT_BLOCKS_BATCH_UPDATE
+                .replace("{document_id}", &document_id.into()),
             ..Default::default()
         };
         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
diff --git a/src/service/cloud_docs/permission/member/auth.rs b/src/service/cloud_docs/permission/member/auth.rs
index ee449df..23ab334 100644
--- a/src/service/cloud_docs/permission/member/auth.rs
+++ b/src/service/cloud_docs/permission/member/auth.rs
@@ -167,8 +167,13 @@ pub async fn auth_permission(
     api_req.http_method = Method::GET;
     api_req.api_path = format!(
         "{}?type={}&perm={}",
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_AUTH, "token", &request.token),
-        request.obj_type, request.perm
+        EndpointBuilder::replace_param(
+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_AUTH,
+            "token",
+            &request.token
+        ),
+        request.obj_type,
+        request.perm
     );
 
     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
diff --git a/src/service/cloud_docs/permission/member/batch_create.rs b/src/service/cloud_docs/permission/member/batch_create.rs
index 9c9a6d1..95aa850 100644
--- a/src/service/cloud_docs/permission/member/batch_create.rs
+++ b/src/service/cloud_docs/permission/member/batch_create.rs
@@ -228,7 +228,11 @@ pub async fn batch_create_permission_member(
     api_req.http_method = Method::POST;
     api_req.api_path = format!(
         "{}?type={}",
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_BATCH_CREATE, "token", &request.token),
+        EndpointBuilder::replace_param(
+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_BATCH_CREATE,
+            "token",
+            &request.token
+        ),
         request.obj_type
     );
 
diff --git a/src/service/cloud_docs/permission/member/create.rs b/src/service/cloud_docs/permission/member/create.rs
index 8755a51..ab80cfc 100644
--- a/src/service/cloud_docs/permission/member/create.rs
+++ b/src/service/cloud_docs/permission/member/create.rs
@@ -259,7 +259,11 @@ pub async fn create_permission_member(
     api_req.http_method = Method::POST;
     api_req.api_path = format!(
         "{}?type={}",
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS, "token", &request.token),
+        EndpointBuilder::replace_param(
+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS,
+            "token",
+            &request.token
+        ),
         request.obj_type
     );
 
diff --git a/src/service/cloud_docs/permission/member/delete.rs b/src/service/cloud_docs/permission/member/delete.rs
index 18cc210..fcbd87b 100644
--- a/src/service/cloud_docs/permission/member/delete.rs
+++ b/src/service/cloud_docs/permission/member/delete.rs
@@ -208,11 +208,12 @@ pub async fn delete_permission_member(
     api_req.http_method = Method::DELETE;
     api_req.api_path = format!(
         "{}?type={}&member_type={}",
-        EndpointBuilder::replace_params(
+        EndpointBuilder::replace_params_from_array(
             Endpoints::DRIVE_V1_PERMISSIONS_MEMBER_GET,
             &[("token", &request.token), ("member_id", &request.member_id)]
         ),
-        request.obj_type, request.member_type
+        request.obj_type,
+        request.member_type
     );
 
     // 添加通知参数
diff --git a/src/service/cloud_docs/permission/member/list.rs b/src/service/cloud_docs/permission/member/list.rs
index e64d2b6..1a1af10 100644
--- a/src/service/cloud_docs/permission/member/list.rs
+++ b/src/service/cloud_docs/permission/member/list.rs
@@ -163,7 +163,11 @@ pub async fn list_permission_members(
     api_req.http_method = Method::GET;
     api_req.api_path = format!(
         "{}?type={}",
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS, "token", &request.token),
+        EndpointBuilder::replace_param(
+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS,
+            "token",
+            &request.token
+        ),
         request.obj_type
     );
 
diff --git a/src/service/cloud_docs/permission/member/transfer_owner.rs b/src/service/cloud_docs/permission/member/transfer_owner.rs
index 0b236f6..6bb4dcd 100644
--- a/src/service/cloud_docs/permission/member/transfer_owner.rs
+++ b/src/service/cloud_docs/permission/member/transfer_owner.rs
@@ -211,7 +211,11 @@ pub async fn transfer_owner(
     api_req.http_method = Method::POST;
     api_req.api_path = format!(
         "{}?type={}",
-        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_TRANSFER_OWNER, "token", &request.token),
+        EndpointBuilder::replace_param(
+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_TRANSFER_OWNER,
+            "token",
+            &request.token
+        ),
         request.obj_type
     );
 
diff --git a/src/service/cloud_docs/permission/member/update.rs b/src/service/cloud_docs/permission/member/update.rs
index 42db8c8..9c91bb2 100644
--- a/src/service/cloud_docs/permission/member/update.rs
+++ b/src/service/cloud_docs/permission/member/update.rs
@@ -255,11 +255,12 @@ pub async fn update_permission_member(
     api_req.http_method = Method::PUT;
     api_req.api_path = format!(
         "{}?type={}&member_type={}",
-        EndpointBuilder::replace_params(
+        EndpointBuilder::replace_params_from_array(
             Endpoints::DRIVE_V1_PERMISSIONS_MEMBER_GET,
             &[("token", &request.token), ("member_id", &request.member_id)]
         ),
-        request.obj_type, request.member_type
+        request.obj_type,
+        request.member_type
     );
 
     // 添加通知参数
diff --git a/src/service/cloud_docs/permission/public_v1/get.rs b/src/service/cloud_docs/permission/public_v1/get.rs
index 12ac17b..c43ca71 100644
--- a/src/service/cloud_docs/permission/public_v1/get.rs
+++ b/src/service/cloud_docs/permission/public_v1/get.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
diff --git a/src/service/cloud_docs/permission/public_v1/password/create.rs b/src/service/cloud_docs/permission/public_v1/password/create.rs
index 107104f..5024c05 100644
--- a/src/service/cloud_docs/permission/public_v1/password/create.rs
+++ b/src/service/cloud_docs/permission/public_v1/password/create.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
diff --git a/src/service/cloud_docs/permission/public_v1/password/delete.rs b/src/service/cloud_docs/permission/public_v1/password/delete.rs
index 39c7de9..ca3808c 100644
--- a/src/service/cloud_docs/permission/public_v1/password/delete.rs
+++ b/src/service/cloud_docs/permission/public_v1/password/delete.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
diff --git a/src/service/cloud_docs/permission/public_v1/password/update.rs b/src/service/cloud_docs/permission/public_v1/password/update.rs
index 0455cac..ddb3f8e 100644
--- a/src/service/cloud_docs/permission/public_v1/password/update.rs
+++ b/src/service/cloud_docs/permission/public_v1/password/update.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
diff --git a/src/service/cloud_docs/permission/public_v1/patch.rs b/src/service/cloud_docs/permission/public_v1/patch.rs
index 62bcea1..2ceed44 100644
--- a/src/service/cloud_docs/permission/public_v1/patch.rs
+++ b/src/service/cloud_docs/permission/public_v1/patch.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
diff --git a/src/service/cloud_docs/permission/public_v2/get.rs b/src/service/cloud_docs/permission/public_v2/get.rs
index 385ced5..8aa991c 100644
--- a/src/service/cloud_docs/permission/public_v2/get.rs
+++ b/src/service/cloud_docs/permission/public_v2/get.rs
@@ -6,7 +6,6 @@ use crate::core::{
     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
     config::Config,
     constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints},
     http::Transport,
     req_option::RequestOption,
     SDKResult,
diff --git a/src/service/contact/v3/department.rs b/src/service/contact/v3/department.rs
index 929ea40..2720ee0 100644
--- a/src/service/contact/v3/department.rs
+++ b/src/service/contact/v3/department.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -50,7 +54,11 @@ impl DepartmentService {
     ) -> crate::core::SDKResult<PatchDepartmentResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_DEPARTMENT_GET,
+                "department_id",
+                department_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -69,7 +77,11 @@ impl DepartmentService {
     ) -> crate::core::SDKResult<UpdateDepartmentResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_DEPARTMENT_GET,
+                "department_id",
+                department_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -88,7 +100,11 @@ impl DepartmentService {
     ) -> crate::core::SDKResult<UpdateDepartmentIdResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_UPDATE_ID, "department_id", department_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_DEPARTMENT_UPDATE_ID,
+                "department_id",
+                department_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -107,7 +123,11 @@ impl DepartmentService {
     ) -> crate::core::SDKResult<GetDepartmentResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_DEPARTMENT_GET,
+                "department_id",
+                department_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
@@ -201,7 +221,11 @@ impl DepartmentService {
     ) -> crate::core::SDKResult<DeleteDepartmentResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_DEPARTMENT_GET,
+                "department_id",
+                department_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
diff --git a/src/service/contact/v3/employee_type_enum.rs b/src/service/contact/v3/employee_type_enum.rs
index 20b01f1..b87e40e 100644
--- a/src/service/contact/v3/employee_type_enum.rs
+++ b/src/service/contact/v3/employee_type_enum.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -43,7 +47,11 @@ impl EmployeeTypeEnumService {
     ) -> crate::core::SDKResult<UpdateEmployeeTypeResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET, "enum_id", enum_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET,
+                "enum_id",
+                enum_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -80,7 +88,11 @@ impl EmployeeTypeEnumService {
     ) -> crate::core::SDKResult<DeleteEmployeeTypeResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET, "enum_id", enum_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET,
+                "enum_id",
+                enum_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/contact/v3/functional_role.rs b/src/service/contact/v3/functional_role.rs
index 0fdd5cf..8b8c484 100644
--- a/src/service/contact/v3/functional_role.rs
+++ b/src/service/contact/v3/functional_role.rs
@@ -1,6 +1,10 @@
 use crate::core::{
-    api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config, constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+    api_req::ApiRequest,
+    api_resp::ApiResponseTrait,
+    config::Config,
+    constants::AccessTokenType,
+    endpoints::{EndpointBuilder, Endpoints},
+    http::Transport,
 };
 use serde::{Deserialize, Serialize};
 
@@ -40,7 +44,11 @@ impl FunctionalRoleService {
     ) -> crate::core::SDKResult<UpdateFunctionalRoleResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -55,7 +63,11 @@ impl FunctionalRoleService {
     pub async fn get(&self, role_id: &str) -> crate::core::SDKResult<GetFunctionalRoleResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
@@ -103,7 +115,11 @@ impl FunctionalRoleService {
     ) -> crate::core::SDKResult<DeleteFunctionalRoleResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/contact/v3/functional_role_member.rs b/src/service/contact/v3/functional_role_member.rs
index 81525f2..7b01cfa 100644
--- a/src/service/contact/v3/functional_role_member.rs
+++ b/src/service/contact/v3/functional_role_member.rs
@@ -1,6 +1,10 @@
 use crate::core::{
-    api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config, constants::AccessTokenType,
-    endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+    api_req::ApiRequest,
+    api_resp::ApiResponseTrait,
+    config::Config,
+    constants::AccessTokenType,
+    endpoints::{EndpointBuilder, Endpoints},
+    http::Transport,
 };
 use serde::{Deserialize, Serialize};
 
@@ -22,7 +26,11 @@ impl FunctionalRoleMemberService {
     ) -> crate::core::SDKResult<CreateRoleMemberResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -41,7 +49,11 @@ impl FunctionalRoleMemberService {
     ) -> crate::core::SDKResult<BatchCreateRoleMembersResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_CREATE, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_CREATE,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -61,7 +73,11 @@ impl FunctionalRoleMemberService {
     ) -> crate::core::SDKResult<SetRoleMemberScopesResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_SCOPES, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_SCOPES,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -82,7 +98,11 @@ impl FunctionalRoleMemberService {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
             api_path: {
-                let path = EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBER_GET, "role_id", role_id);
+                let path = EndpointBuilder::replace_param(
+                    Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBER_GET,
+                    "role_id",
+                    role_id,
+                );
                 EndpointBuilder::replace_param(&path, "member_id", member_id)
             },
             supported_access_token_types: vec![AccessTokenType::Tenant],
@@ -103,7 +123,11 @@ impl FunctionalRoleMemberService {
     ) -> crate::core::SDKResult<ListRoleMembersResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
@@ -123,7 +147,11 @@ impl FunctionalRoleMemberService {
     ) -> crate::core::SDKResult<BatchDeleteRoleMembersResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_DELETE, "role_id", role_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_DELETE,
+                "role_id",
+                role_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
diff --git a/src/service/contact/v3/group.rs b/src/service/contact/v3/group.rs
index 73b25e6..7954e33 100644
--- a/src/service/contact/v3/group.rs
+++ b/src/service/contact/v3/group.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -42,7 +46,11 @@ impl GroupService {
     ) -> crate::core::SDKResult<PatchGroupResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_GET, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_GET,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -60,7 +68,11 @@ impl GroupService {
     ) -> crate::core::SDKResult<GetGroupResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_GET, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_GET,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
@@ -111,7 +123,11 @@ impl GroupService {
     pub async fn delete(&self, group_id: &str) -> crate::core::SDKResult<DeleteGroupResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_GET, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_GET,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
@@ -141,7 +157,11 @@ impl GroupService {
 
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_DETAIL, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_DETAIL,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params,
diff --git a/src/service/contact/v3/group_member.rs b/src/service/contact/v3/group_member.rs
index 3a1b23f..7b9f71f 100644
--- a/src/service/contact/v3/group_member.rs
+++ b/src/service/contact/v3/group_member.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -25,7 +29,11 @@ impl GroupMemberService {
     ) -> crate::core::SDKResult<AddGroupMemberResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_ADD, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_MEMBERS_ADD,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -44,7 +52,11 @@ impl GroupMemberService {
     ) -> crate::core::SDKResult<BatchAddGroupMembersResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_BATCH_ADD, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_MEMBERS_BATCH_ADD,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -63,7 +75,11 @@ impl GroupMemberService {
     ) -> crate::core::SDKResult<ListGroupMembersResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_SIMPLELIST, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_MEMBERS_SIMPLELIST,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
@@ -83,7 +99,11 @@ impl GroupMemberService {
     ) -> crate::core::SDKResult<RemoveGroupMemberResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_REMOVE, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_MEMBERS_REMOVE,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -102,7 +122,11 @@ impl GroupMemberService {
     ) -> crate::core::SDKResult<BatchRemoveGroupMembersResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_BATCH_REMOVE, "group_id", group_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_GROUP_MEMBERS_BATCH_REMOVE,
+                "group_id",
+                group_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
diff --git a/src/service/contact/v3/job_family.rs b/src/service/contact/v3/job_family.rs
index ac9ca20..63d08ac 100644
--- a/src/service/contact/v3/job_family.rs
+++ b/src/service/contact/v3/job_family.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -43,7 +47,11 @@ impl JobFamilyService {
     ) -> crate::core::SDKResult<UpdateJobFamilyResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_FAMILY_GET, "job_family_id", job_family_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_FAMILY_GET,
+                "job_family_id",
+                job_family_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -58,7 +66,11 @@ impl JobFamilyService {
     pub async fn get(&self, job_family_id: &str) -> crate::core::SDKResult<GetJobFamilyResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_FAMILY_GET, "job_family_id", job_family_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_FAMILY_GET,
+                "job_family_id",
+                job_family_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
@@ -94,7 +106,11 @@ impl JobFamilyService {
     ) -> crate::core::SDKResult<DeleteJobFamilyResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_FAMILY_GET, "job_family_id", job_family_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_FAMILY_GET,
+                "job_family_id",
+                job_family_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/contact/v3/job_level.rs b/src/service/contact/v3/job_level.rs
index e1c9a34..c3b1d46 100644
--- a/src/service/contact/v3/job_level.rs
+++ b/src/service/contact/v3/job_level.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -43,7 +47,11 @@ impl JobLevelService {
     ) -> crate::core::SDKResult<UpdateJobLevelResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_LEVEL_GET, "job_level_id", job_level_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_LEVEL_GET,
+                "job_level_id",
+                job_level_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -58,7 +66,11 @@ impl JobLevelService {
     pub async fn get(&self, job_level_id: &str) -> crate::core::SDKResult<GetJobLevelResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_LEVEL_GET, "job_level_id", job_level_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_LEVEL_GET,
+                "job_level_id",
+                job_level_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
@@ -93,7 +105,11 @@ impl JobLevelService {
     ) -> crate::core::SDKResult<DeleteJobLevelResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_LEVEL_GET, "job_level_id", job_level_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_LEVEL_GET,
+                "job_level_id",
+                job_level_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/contact/v3/job_title.rs b/src/service/contact/v3/job_title.rs
index 60c6762..9bacbae 100644
--- a/src/service/contact/v3/job_title.rs
+++ b/src/service/contact/v3/job_title.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -21,7 +25,11 @@ impl JobTitleService {
     pub async fn get(&self, job_title_id: &str) -> crate::core::SDKResult<GetJobTitleResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_TITLE_GET, "job_title_id", job_title_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_JOB_TITLE_GET,
+                "job_title_id",
+                job_title_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/contact/v3/unit.rs b/src/service/contact/v3/unit.rs
index a84add1..b83cea0 100644
--- a/src/service/contact/v3/unit.rs
+++ b/src/service/contact/v3/unit.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -42,7 +46,11 @@ impl UnitService {
     ) -> crate::core::SDKResult<PatchUnitResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_GET, "unit_id", unit_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_UNIT_GET,
+                "unit_id",
+                unit_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -60,7 +68,11 @@ impl UnitService {
     ) -> crate::core::SDKResult<BindDepartmentResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_BIND_DEPARTMENT, "unit_id", unit_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_UNIT_BIND_DEPARTMENT,
+                "unit_id",
+                unit_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -79,7 +91,11 @@ impl UnitService {
     ) -> crate::core::SDKResult<UnbindDepartmentResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_UNBIND_DEPARTMENT, "unit_id", unit_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_UNIT_UNBIND_DEPARTMENT,
+                "unit_id",
+                unit_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -98,7 +114,11 @@ impl UnitService {
     ) -> crate::core::SDKResult<ListUnitDepartmentsResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_LIST_DEPARTMENT, "unit_id", unit_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_UNIT_LIST_DEPARTMENT,
+                "unit_id",
+                unit_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
@@ -114,7 +134,11 @@ impl UnitService {
     pub async fn get(&self, unit_id: &str) -> crate::core::SDKResult<GetUnitResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_GET, "unit_id", unit_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_UNIT_GET,
+                "unit_id",
+                unit_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
@@ -143,7 +167,11 @@ impl UnitService {
     pub async fn delete(&self, unit_id: &str) -> crate::core::SDKResult<DeleteUnitResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_GET, "unit_id", unit_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_UNIT_GET,
+                "unit_id",
+                unit_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/contact/v3/user.rs b/src/service/contact/v3/user.rs
index 023cfed..fa2d8e0 100644
--- a/src/service/contact/v3/user.rs
+++ b/src/service/contact/v3/user.rs
@@ -1,9 +1,15 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-        req_option::RequestOption, standard_response::StandardResponse,
-        trait_system::executable_builder::ExecutableBuilder, SDKResult,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
+        req_option::RequestOption,
+        standard_response::StandardResponse,
+        trait_system::executable_builder::ExecutableBuilder,
+        SDKResult,
     },
     service::contact::models::*,
 };
@@ -52,7 +58,11 @@ impl UserService {
     ) -> crate::core::SDKResult<PatchUserResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_GET, "user_id", user_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_USER_GET,
+                "user_id",
+                user_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -70,7 +80,11 @@ impl UserService {
     ) -> crate::core::SDKResult<UpdateUserIdResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_UPDATE_ID, "user_id", user_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_USER_UPDATE_ID,
+                "user_id",
+                user_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
@@ -96,7 +110,11 @@ impl UserService {
 
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_GET, "user_id", user_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_USER_GET,
+                "user_id",
+                user_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: Vec::new(),
             query_params,
@@ -186,7 +204,11 @@ impl UserService {
     ) -> crate::core::SDKResult<DeleteUserResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_GET, "user_id", user_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_USER_GET,
+                "user_id",
+                user_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             query_params: std::collections::HashMap::new(),
@@ -205,7 +227,11 @@ impl UserService {
     ) -> crate::core::SDKResult<ResurrectUserResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_RESURRECT, "user_id", user_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_USER_RESURRECT,
+                "user_id",
+                user_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: serde_json::to_vec(req)?,
             ..Default::default()
diff --git a/src/service/contact/v3/work_city.rs b/src/service/contact/v3/work_city.rs
index bd281cd..e5c9ff9 100644
--- a/src/service/contact/v3/work_city.rs
+++ b/src/service/contact/v3/work_city.rs
@@ -1,7 +1,11 @@
 use crate::{
     core::{
-        api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
-        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
+        api_req::ApiRequest,
+        api_resp::ApiResponseTrait,
+        config::Config,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
     },
     service::contact::models::*,
 };
@@ -21,7 +25,11 @@ impl WorkCityService {
     pub async fn get(&self, work_city_id: &str) -> crate::core::SDKResult<GetWorkCityResponse> {
         let api_req = ApiRequest {
             http_method: reqwest::Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_WORK_CITY_GET, "work_city_id", work_city_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::CONTACT_V3_WORK_CITY_GET,
+                "work_city_id",
+                work_city_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             body: Vec::new(),
             ..Default::default()
diff --git a/src/service/helpdesk/v1/agent_schedule/mod.rs b/src/service/helpdesk/v1/agent_schedule/mod.rs
index 78b742f..3595824 100644
--- a/src/service/helpdesk/v1/agent_schedule/mod.rs
+++ b/src/service/helpdesk/v1/agent_schedule/mod.rs
@@ -125,7 +125,11 @@ impl AgentScheduleService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_AGENT_SCHEDULES, "agent_id", agent_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::HELPDESK_V1_AGENT_SCHEDULES,
+                "agent_id",
+                agent_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -255,7 +259,11 @@ impl AgentScheduleService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_AGENT_SCHEDULES, "agent_id", agent_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::HELPDESK_V1_AGENT_SCHEDULES,
+                "agent_id",
+                agent_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/helpdesk/v1/agent_skill_rule/mod.rs b/src/service/helpdesk/v1/agent_skill_rule/mod.rs
index df697b8..8091207 100644
--- a/src/service/helpdesk/v1/agent_skill_rule/mod.rs
+++ b/src/service/helpdesk/v1/agent_skill_rule/mod.rs
@@ -8,7 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::{EndpointBuilder, Endpoints},
+        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
diff --git a/src/service/helpdesk/v1/faq/mod.rs b/src/service/helpdesk/v1/faq/mod.rs
index 0bc33aa..40ce989 100644
--- a/src/service/helpdesk/v1/faq/mod.rs
+++ b/src/service/helpdesk/v1/faq/mod.rs
@@ -387,11 +387,7 @@ impl FaqService {
         let api_req = ApiRequest {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_param(
-                &EndpointBuilder::replace_param(
-                    Endpoints::HELPDESK_V1_FAQ_IMAGE,
-                    "faq_id",
-                    faq_id,
-                ),
+                &EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_FAQ_IMAGE, "faq_id", faq_id),
                 "image_key",
                 image_key,
             ),
diff --git a/src/service/helpdesk/v1/ticket_customized_field/mod.rs b/src/service/helpdesk/v1/ticket_customized_field/mod.rs
index 26b889e..9e7ed01 100644
--- a/src/service/helpdesk/v1/ticket_customized_field/mod.rs
+++ b/src/service/helpdesk/v1/ticket_customized_field/mod.rs
@@ -185,7 +185,11 @@ impl TicketCustomizedFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_DELETE, "field_id", field_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_DELETE,
+                "field_id",
+                field_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -224,7 +228,11 @@ impl TicketCustomizedFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_UPDATE, "field_id", field_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_UPDATE,
+                "field_id",
+                field_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -262,7 +270,11 @@ impl TicketCustomizedFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_GET, "field_id", field_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_GET,
+                "field_id",
+                field_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/hire/recruitment_config/location/mod.rs b/src/service/hire/recruitment_config/location/mod.rs
index cf49f3c..3bfdae6 100644
--- a/src/service/hire/recruitment_config/location/mod.rs
+++ b/src/service/hire/recruitment_config/location/mod.rs
@@ -7,7 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
-        endpoints::{EndpointBuilder, Endpoints},
+        endpoints::Endpoints,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
diff --git a/src/service/im/v1/batch_message/mod.rs b/src/service/im/v1/batch_message/mod.rs
index b30cc05..214aca0 100644
--- a/src/service/im/v1/batch_message/mod.rs
+++ b/src/service/im/v1/batch_message/mod.rs
@@ -146,7 +146,11 @@ impl BatchMessageService {
     ) -> SDKResult<EmptyResponse> {
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DELETE_BATCH_MESSAGE, "batch_message_id", batch_message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_DELETE_BATCH_MESSAGE,
+                "batch_message_id",
+                batch_message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
@@ -164,7 +168,11 @@ impl BatchMessageService {
     ) -> SDKResult<GetBatchProgressResponse> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_BATCH_MESSAGE_PROGRESS, "batch_message_id", batch_message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_BATCH_MESSAGE_PROGRESS,
+                "batch_message_id",
+                batch_message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
@@ -196,7 +204,11 @@ impl BatchMessageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_BATCH_MESSAGE_READ_USER, "batch_message_id", batch_message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_BATCH_MESSAGE_READ_USER,
+                "batch_message_id",
+                batch_message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/im/v1/buzz_messages/mod.rs b/src/service/im/v1/buzz_messages/mod.rs
index 9d29423..2c59e0c 100644
--- a/src/service/im/v1/buzz_messages/mod.rs
+++ b/src/service/im/v1/buzz_messages/mod.rs
@@ -71,7 +71,11 @@ impl BuzzMessagesService {
     ) -> SDKResult<UrgentResponse> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_APP, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_URGENT_APP,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
             body: serde_json::to_vec(&request)?,
@@ -93,7 +97,11 @@ impl BuzzMessagesService {
     ) -> SDKResult<UrgentResponse> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_SMS, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_URGENT_SMS,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
             body: serde_json::to_vec(&request)?,
@@ -115,7 +123,11 @@ impl BuzzMessagesService {
     ) -> SDKResult<UrgentResponse> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_PHONE, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_URGENT_PHONE,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/im/v1/file/mod.rs b/src/service/im/v1/file/mod.rs
index 96594d7..f097f59 100644
--- a/src/service/im/v1/file/mod.rs
+++ b/src/service/im/v1/file/mod.rs
@@ -88,7 +88,11 @@ impl FileService {
     ) -> SDKResult<GetFileResponse> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DOWNLOAD_FILE, "file_key", file_key),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_DOWNLOAD_FILE,
+                "file_key",
+                file_key,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
diff --git a/src/service/im/v1/image/mod.rs b/src/service/im/v1/image/mod.rs
index 6536a23..344b638 100644
--- a/src/service/im/v1/image/mod.rs
+++ b/src/service/im/v1/image/mod.rs
@@ -81,7 +81,11 @@ impl ImageService {
     ) -> SDKResult<GetImageResponse> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DOWNLOAD_IMAGE, "image_key", image_key),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_DOWNLOAD_IMAGE,
+                "image_key",
+                image_key,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
diff --git a/src/service/im/v1/message/send.rs b/src/service/im/v1/message/send.rs
index 7cc8c06..02e75af 100644
--- a/src/service/im/v1/message/send.rs
+++ b/src/service/im/v1/message/send.rs
@@ -2,8 +2,13 @@ use reqwest::Method;
 
 use crate::{
     core::{
-        api_resp::BaseResponse, constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-        req_option::RequestOption, standard_response::StandardResponse, SDKResult,
+        api_resp::BaseResponse,
+        constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
+        http::Transport,
+        req_option::RequestOption,
+        standard_response::StandardResponse,
+        SDKResult,
     },
     service::im::v1::message::{CreateMessageResp, Message},
 };
@@ -43,7 +48,11 @@ impl MessageService {
     pub async fn delete(&self, message_id: &str, option: Option<RequestOption>) -> SDKResult<()> {
         let api_req = crate::core::api_req::ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DELETE_MESSAGE, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_DELETE_MESSAGE,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
@@ -67,7 +76,11 @@ impl MessageService {
     ) -> SDKResult<Message> {
         let mut api_req = update_message_request.api_req;
         api_req.http_method = Method::PATCH;
-        api_req.api_path = EndpointBuilder::replace_param(Endpoints::IM_V1_UPDATE_MESSAGE, "message_id", message_id);
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::IM_V1_UPDATE_MESSAGE,
+            "message_id",
+            message_id,
+        );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         let api_resp: BaseResponse<CreateMessageResp> =
@@ -89,7 +102,11 @@ impl MessageService {
     ) -> SDKResult<Message> {
         let mut api_req = reply_message_request.api_req;
         api_req.http_method = Method::POST;
-        api_req.api_path = EndpointBuilder::replace_param(Endpoints::IM_V1_REPLY_MESSAGE, "message_id", message_id);
+        api_req.api_path = EndpointBuilder::replace_param(
+            Endpoints::IM_V1_REPLY_MESSAGE,
+            "message_id",
+            message_id,
+        );
         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
 
         let api_resp: BaseResponse<CreateMessageResp> =
diff --git a/src/service/im/v1/message_card/mod.rs b/src/service/im/v1/message_card/mod.rs
index 3a67e72..2fa23c9 100644
--- a/src/service/im/v1/message_card/mod.rs
+++ b/src/service/im/v1/message_card/mod.rs
@@ -76,7 +76,11 @@ impl MessageCardService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_UPDATE_MESSAGE, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_UPDATE_MESSAGE,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -94,7 +98,11 @@ impl MessageCardService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_DELAY_UPDATE, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_DELAY_UPDATE,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -112,7 +120,11 @@ impl MessageCardService {
     ) -> SDKResult<BaseResponse<SendVisibleMessageCardResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_APP, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_URGENT_APP,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -134,7 +146,11 @@ impl MessageCardService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_APP, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_URGENT_APP,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
diff --git a/src/service/im/v1/message_reaction/mod.rs b/src/service/im/v1/message_reaction/mod.rs
index 21a49ac..5490e4b 100644
--- a/src/service/im/v1/message_reaction/mod.rs
+++ b/src/service/im/v1/message_reaction/mod.rs
@@ -65,7 +65,11 @@ impl MessageReactionService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_REACTIONS, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_REACTIONS,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&CreateReactionRequest {
@@ -101,7 +105,11 @@ impl MessageReactionService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_REACTIONS, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_REACTIONS,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -127,7 +135,10 @@ impl MessageReactionService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_params_from_array(Endpoints::IM_V1_DELETE_MESSAGE_REACTION, &[("message_id", message_id), ("reaction_id", reaction_id)]),
+            api_path: EndpointBuilder::replace_params_from_array(
+                Endpoints::IM_V1_DELETE_MESSAGE_REACTION,
+                &[("message_id", message_id), ("reaction_id", reaction_id)],
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/im/v1/url_preview/mod.rs b/src/service/im/v1/url_preview/mod.rs
index 5b8c8f5..e470427 100644
--- a/src/service/im/v1/url_preview/mod.rs
+++ b/src/service/im/v1/url_preview/mod.rs
@@ -59,7 +59,11 @@ impl UrlPreviewService {
     ) -> SDKResult<EmptyResponse> {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URL_PREVIEW_BATCH_UPDATE, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V1_MESSAGE_URL_PREVIEW_BATCH_UPDATE,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
diff --git a/src/service/im/v2/app_feed_card/mod.rs b/src/service/im/v2/app_feed_card/mod.rs
index c509d05..16c21e8 100644
--- a/src/service/im/v2/app_feed_card/mod.rs
+++ b/src/service/im/v2/app_feed_card/mod.rs
@@ -107,7 +107,11 @@ impl AppFeedCardService {
     ) -> SDKResult<BaseResponse<UpdateAppFeedCardResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V2_GET_APP_FEED_CARD, "card_id", card_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V2_GET_APP_FEED_CARD,
+                "card_id",
+                card_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -124,7 +128,11 @@ impl AppFeedCardService {
     ) -> SDKResult<BaseResponse<EmptyResponse>> {
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V2_DELETE_APP_FEED_CARD, "card_id", card_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V2_DELETE_APP_FEED_CARD,
+                "card_id",
+                card_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
diff --git a/src/service/im/v2/groups_bots/mod.rs b/src/service/im/v2/groups_bots/mod.rs
index f533692..0b85968 100644
--- a/src/service/im/v2/groups_bots/mod.rs
+++ b/src/service/im/v2/groups_bots/mod.rs
@@ -142,7 +142,11 @@ impl GroupsBotsService {
     ) -> SDKResult<BaseResponse<UpdateFeedCardButtonResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PUT,
-            api_path: EndpointBuilder::replace_param(Endpoints::IM_V2_GROUPS_BOTS_UPDATE, "message_id", message_id),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::IM_V2_GROUPS_BOTS_UPDATE,
+                "message_id",
+                message_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
diff --git a/src/service/lingo/classification/mod.rs b/src/service/lingo/classification/mod.rs
index b42327d..746463a 100644
--- a/src/service/lingo/classification/mod.rs
+++ b/src/service/lingo/classification/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::LINGO_CLASSIFICATION_LIST,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -44,7 +45,7 @@ impl ClassificationService {
     ) -> SDKResult<BaseResponse<ClassificationListResponse>> {
         let mut api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/lingo/v1/classifications".to_string(),
+            api_path: LINGO_CLASSIFICATION_LIST.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
             ..Default::default()
diff --git a/src/service/lingo/draft/mod.rs b/src/service/lingo/draft/mod.rs
index a4fc337..9a74e51 100644
--- a/src/service/lingo/draft/mod.rs
+++ b/src/service/lingo/draft/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, LINGO_DRAFT_CREATE, LINGO_DRAFT_UPDATE},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -44,7 +45,7 @@ impl DraftService {
     ) -> SDKResult<BaseResponse<DraftCreateResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/lingo/v1/drafts".to_string(),
+            api_path: LINGO_DRAFT_CREATE.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -74,7 +75,7 @@ impl DraftService {
     ) -> SDKResult<BaseResponse<DraftUpdateResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PUT,
-            api_path: format!("/open-apis/lingo/v1/drafts/{draft_id}"),
+            api_path: EndpointBuilder::replace_param(LINGO_DRAFT_UPDATE, "{draft_id}", draft_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
diff --git a/src/service/lingo/entity/mod.rs b/src/service/lingo/entity/mod.rs
index 5aab4ae..201c277 100644
--- a/src/service/lingo/entity/mod.rs
+++ b/src/service/lingo/entity/mod.rs
@@ -7,6 +7,10 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{
+            EndpointBuilder, LINGO_ENTITY_CREATE, LINGO_ENTITY_GET, LINGO_ENTITY_HIGHLIGHT,
+            LINGO_ENTITY_MATCH, LINGO_ENTITY_SEARCH, LINGO_ENTITY_UPDATE,
+        },
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -47,7 +51,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityCreateResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/lingo/v1/entities".to_string(),
+            api_path: LINGO_ENTITY_CREATE.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -77,7 +81,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityUpdateResponse>> {
         let api_req = ApiRequest {
             http_method: Method::PUT,
-            api_path: format!("/open-apis/lingo/v1/entities/{entity_id}"),
+            api_path: EndpointBuilder::replace_param(LINGO_ENTITY_UPDATE, "{entity_id}", entity_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -105,7 +109,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityDeleteResponse>> {
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!("/open-apis/lingo/v1/entities/{entity_id}"),
+            api_path: EndpointBuilder::replace_param(LINGO_ENTITY_UPDATE, "{entity_id}", entity_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
             ..Default::default()
@@ -133,7 +137,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityGetResponse>> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/lingo/v1/entities/{entity_id}"),
+            api_path: EndpointBuilder::replace_param(LINGO_ENTITY_GET, "{entity_id}", entity_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
             ..Default::default()
@@ -161,7 +165,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityListResponse>> {
         let mut api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/lingo/v1/entities".to_string(),
+            api_path: LINGO_ENTITY_CREATE.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
             ..Default::default()
@@ -214,7 +218,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityMatchResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/lingo/v1/entities/match".to_string(),
+            api_path: LINGO_ENTITY_MATCH.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -242,7 +246,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntitySearchResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/lingo/v1/entities/search".to_string(),
+            api_path: LINGO_ENTITY_SEARCH.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -270,7 +274,7 @@ impl EntityService {
     ) -> SDKResult<BaseResponse<EntityHighlightResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/lingo/v1/entities/highlight".to_string(),
+            api_path: LINGO_ENTITY_HIGHLIGHT.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
diff --git a/src/service/lingo/file/mod.rs b/src/service/lingo/file/mod.rs
index a395730..a95c8e9 100644
--- a/src/service/lingo/file/mod.rs
+++ b/src/service/lingo/file/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, LINGO_FILE_DOWNLOAD, LINGO_FILE_UPLOAD},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -44,7 +45,7 @@ impl FileService {
     ) -> SDKResult<BaseResponse<FileUploadResponse>> {
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/lingo/v1/file/upload".to_string(),
+            api_path: LINGO_FILE_UPLOAD.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: serde_json::to_vec(&request)?,
             ..Default::default()
@@ -72,7 +73,11 @@ impl FileService {
     ) -> SDKResult<BaseResponse<FileDownloadResponse>> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/lingo/v1/file/download/{file_token}"),
+            api_path: EndpointBuilder::replace_param(
+                LINGO_FILE_DOWNLOAD,
+                "{file_token}",
+                file_token,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
             ..Default::default()
diff --git a/src/service/lingo/repo/mod.rs b/src/service/lingo/repo/mod.rs
index b9817cf..c2e5f36 100644
--- a/src/service/lingo/repo/mod.rs
+++ b/src/service/lingo/repo/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::LINGO_REPO_LIST,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -44,7 +45,7 @@ impl RepoService {
     ) -> SDKResult<BaseResponse<RepoListResponse>> {
         let mut api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/lingo/v1/repos".to_string(),
+            api_path: LINGO_REPO_LIST.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             body: vec![],
             ..Default::default()
diff --git a/src/service/mail/v1/attachment/mod.rs b/src/service/mail/v1/attachment/mod.rs
index 80938e0..f4c1442 100644
--- a/src/service/mail/v1/attachment/mod.rs
+++ b/src/service/mail/v1/attachment/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -73,8 +74,18 @@ impl AttachmentService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages/{message_id}/attachments/{attachment_id}/download_url"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    &EndpointBuilder::replace_param(
+                        Endpoints::MAIL_V1_USER_MAILBOX_MESSAGE_ATTACHMENT_DOWNLOAD_URL,
+                        "user_mailbox_id",
+                        user_mailbox_id,
+                    ),
+                    "message_id",
+                    message_id,
+                ),
+                "attachment_id",
+                attachment_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
diff --git a/src/service/mail/v1/contact/mod.rs b/src/service/mail/v1/contact/mod.rs
index 110cc63..1f928e3 100644
--- a/src/service/mail/v1/contact/mod.rs
+++ b/src/service/mail/v1/contact/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -111,7 +112,11 @@ impl ContactService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/mail_contacts"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_MAIL_CONTACTS,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -136,8 +141,14 @@ impl ContactService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/mail_contacts/{contact_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_MAIL_CONTACT,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "contact_id",
+                contact_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -163,8 +174,14 @@ impl ContactService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/mail_contacts/{contact_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_MAIL_CONTACT,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "contact_id",
+                contact_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -197,7 +214,11 @@ impl ContactService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/mail_contacts"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_MAIL_CONTACTS,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/mail/v1/event/mod.rs b/src/service/mail/v1/event/mod.rs
index f7e2ae0..adc5093 100644
--- a/src/service/mail/v1/event/mod.rs
+++ b/src/service/mail/v1/event/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -75,8 +76,10 @@ impl EventService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/events/subscribe"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_EVENTS_SUBSCRIBE,
+                "user_mailbox_id",
+                user_mailbox_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -101,8 +104,10 @@ impl EventService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/events/subscription"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_EVENTS_SUBSCRIPTION,
+                "user_mailbox_id",
+                user_mailbox_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -126,8 +131,10 @@ impl EventService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/events/unsubscribe"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_EVENTS_UNSUBSCRIBE,
+                "user_mailbox_id",
+                user_mailbox_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
diff --git a/src/service/mail/v1/folder/mod.rs b/src/service/mail/v1/folder/mod.rs
index 3b352e8..b8af127 100644
--- a/src/service/mail/v1/folder/mod.rs
+++ b/src/service/mail/v1/folder/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -121,7 +122,11 @@ impl FolderService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/folders"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_FOLDERS,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -161,8 +166,14 @@ impl FolderService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/folders/{folder_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_FOLDER,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "folder_id",
+                folder_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -204,8 +215,14 @@ impl FolderService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/folders/{folder_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_FOLDER,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "folder_id",
+                folder_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -254,7 +271,11 @@ impl FolderService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/folders"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_FOLDERS,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/mail/v1/mail_group/mod.rs b/src/service/mail/v1/mail_group/mod.rs
index 321e2dd..82a4114 100644
--- a/src/service/mail/v1/mail_group/mod.rs
+++ b/src/service/mail/v1/mail_group/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -126,7 +127,7 @@ impl MailGroupService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/mail/v1/mailgroups".to_string(),
+            api_path: Endpoints::MAIL_V1_MAILGROUPS.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -150,7 +151,11 @@ impl MailGroupService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             ..Default::default()
@@ -174,7 +179,11 @@ impl MailGroupService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -199,7 +208,11 @@ impl MailGroupService {
 
         let api_req = ApiRequest {
             http_method: Method::PUT,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -223,7 +236,11 @@ impl MailGroupService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             ..Default::default()
@@ -253,7 +270,7 @@ impl MailGroupService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/mail/v1/mailgroups".to_string(),
+            api_path: Endpoints::MAIL_V1_MAILGROUPS.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             ..Default::default()
diff --git a/src/service/mail/v1/mail_group_manager/mod.rs b/src/service/mail/v1/mail_group_manager/mod.rs
index 851a207..0c38d50 100644
--- a/src/service/mail/v1/mail_group_manager/mod.rs
+++ b/src/service/mail/v1/mail_group_manager/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -86,7 +87,11 @@ impl MailGroupManagerService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}/managers/batch_create"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP_MANAGERS_BATCH_CREATE,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -111,7 +116,11 @@ impl MailGroupManagerService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}/managers/batch_delete"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP_MANAGERS_BATCH_DELETE,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -143,7 +152,11 @@ impl MailGroupManagerService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/mail/v1/mailgroups/{mailgroup_id}/managers"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_MAILGROUP_MANAGERS,
+                "mailgroup_id",
+                mailgroup_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             query_params,
             ..Default::default()
diff --git a/src/service/mail/v1/message/mod.rs b/src/service/mail/v1/message/mod.rs
index e81da14..5b80939 100644
--- a/src/service/mail/v1/message/mod.rs
+++ b/src/service/mail/v1/message/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -139,7 +140,11 @@ impl MessageService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_MESSAGES,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -179,8 +184,14 @@ impl MessageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages/{message_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_MESSAGE,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "message_id",
+                message_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -233,7 +244,11 @@ impl MessageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_MESSAGES,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -283,8 +298,10 @@ impl MessageService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/messages/get_by_card"
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_MESSAGES_GET_BY_CARD,
+                "user_mailbox_id",
+                user_mailbox_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
diff --git a/src/service/mail/v1/rule/mod.rs b/src/service/mail/v1/rule/mod.rs
index 47e2322..fa8b2f5 100644
--- a/src/service/mail/v1/rule/mod.rs
+++ b/src/service/mail/v1/rule/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, Endpoints},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -123,7 +124,11 @@ impl RuleService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_RULES,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -148,8 +153,14 @@ impl RuleService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules/{rule_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_RULE,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "rule_id",
+                rule_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -175,8 +186,14 @@ impl RuleService {
 
         let api_req = ApiRequest {
             http_method: Method::PUT,
-            api_path: format!(
-                "/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules/{rule_id}"
+            api_path: EndpointBuilder::replace_param(
+                &EndpointBuilder::replace_param(
+                    Endpoints::MAIL_V1_USER_MAILBOX_RULE,
+                    "user_mailbox_id",
+                    user_mailbox_id,
+                ),
+                "rule_id",
+                rule_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -209,7 +226,11 @@ impl RuleService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_RULES,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -233,7 +254,11 @@ impl RuleService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: format!("/open-apis/mail/v1/user_mailboxes/{user_mailbox_id}/rules/reorder"),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::MAIL_V1_USER_MAILBOX_RULES_REORDER,
+                "user_mailbox_id",
+                user_mailbox_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/task/v2/attachment/mod.rs b/src/service/task/v2/attachment/mod.rs
index 4ac4734..7827740 100644
--- a/src/service/task/v2/attachment/mod.rs
+++ b/src/service/task/v2/attachment/mod.rs
@@ -156,7 +156,11 @@ impl AttachmentService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_ATTACHMENT_GET, "attachment_guid", attachment_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_ATTACHMENT_GET,
+                "attachment_guid",
+                attachment_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -179,7 +183,11 @@ impl AttachmentService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_ATTACHMENT_GET, "attachment_guid", attachment_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_ATTACHMENT_GET,
+                "attachment_guid",
+                attachment_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/task/v2/comment/mod.rs b/src/service/task/v2/comment/mod.rs
index 3aa7d65..40451e5 100644
--- a/src/service/task/v2/comment/mod.rs
+++ b/src/service/task/v2/comment/mod.rs
@@ -116,7 +116,11 @@ impl CommentService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENTS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_COMMENTS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -139,11 +143,17 @@ impl CommentService {
             query_params.insert("user_id_type", user_id_type.as_str().to_string());
         }
 
+        let temp_path = EndpointBuilder::replace_param(
+            Endpoints::TASK_V2_TASK_COMMENT_GET,
+            "task_guid",
+            &task_guid,
+        );
         let api_req = ApiRequest {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_param(
-                EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENT_GET, "task_guid", task_guid),
-                "comment_id", comment_id
+                &temp_path,
+                "comment_id",
+                &comment_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -167,11 +177,17 @@ impl CommentService {
             query_params.insert("user_id_type", user_id_type.as_str().to_string());
         }
 
+        let temp_path2 = EndpointBuilder::replace_param(
+            Endpoints::TASK_V2_TASK_COMMENT_GET,
+            "task_guid",
+            &task_guid,
+        );
         let api_req = ApiRequest {
             http_method: Method::PATCH,
             api_path: EndpointBuilder::replace_param(
-                EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENT_GET, "task_guid", task_guid),
-                "comment_id", comment_id
+                &temp_path2,
+                "comment_id",
+                &comment_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -195,11 +211,17 @@ impl CommentService {
             query_params.insert("user_id_type", user_id_type.as_str().to_string());
         }
 
+        let temp_path3 = EndpointBuilder::replace_param(
+            Endpoints::TASK_V2_TASK_COMMENT_GET,
+            "task_guid",
+            &task_guid,
+        );
         let api_req = ApiRequest {
             http_method: Method::DELETE,
             api_path: EndpointBuilder::replace_param(
-                EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENT_GET, "task_guid", task_guid),
-                "comment_id", comment_id
+                &temp_path3,
+                "comment_id",
+                &comment_id,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -231,7 +253,11 @@ impl CommentService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENTS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_COMMENTS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/task/v2/custom_field/mod.rs b/src/service/task/v2/custom_field/mod.rs
index 0860fce..5075193 100644
--- a/src/service/task/v2/custom_field/mod.rs
+++ b/src/service/task/v2/custom_field/mod.rs
@@ -161,7 +161,11 @@ impl CustomFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_GET, "custom_field_guid", custom_field_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_CUSTOM_FIELD_GET,
+                "custom_field_guid",
+                custom_field_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -185,7 +189,11 @@ impl CustomFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_GET, "custom_field_guid", custom_field_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_CUSTOM_FIELD_GET,
+                "custom_field_guid",
+                custom_field_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -248,7 +256,11 @@ impl CustomFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_ADD, "custom_field_guid", custom_field_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_CUSTOM_FIELD_ADD,
+                "custom_field_guid",
+                custom_field_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -273,7 +285,11 @@ impl CustomFieldService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_REMOVE, "custom_field_guid", custom_field_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_CUSTOM_FIELD_REMOVE,
+                "custom_field_guid",
+                custom_field_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/task/v2/custom_field_option/mod.rs b/src/service/task/v2/custom_field_option/mod.rs
index 3d8924e..4f3363b 100644
--- a/src/service/task/v2/custom_field_option/mod.rs
+++ b/src/service/task/v2/custom_field_option/mod.rs
@@ -88,7 +88,11 @@ impl CustomFieldOptionService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_OPTIONS, "custom_field_guid", custom_field_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_CUSTOM_FIELD_OPTIONS,
+                "custom_field_guid",
+                custom_field_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -112,11 +116,17 @@ impl CustomFieldOptionService {
             query_params.insert("user_id_type", user_id_type.as_str().to_string());
         }
 
+        let temp_path = EndpointBuilder::replace_param(
+            Endpoints::TASK_V2_CUSTOM_FIELD_OPTION_GET,
+            "custom_field_guid",
+            &custom_field_guid,
+        );
         let api_req = ApiRequest {
             http_method: Method::PATCH,
             api_path: EndpointBuilder::replace_param(
-                EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_OPTION_GET, "custom_field_guid", custom_field_guid),
-                "option_guid", option_guid
+                &temp_path,
+                "option_guid",
+                &option_guid,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
diff --git a/src/service/task/v2/section/mod.rs b/src/service/task/v2/section/mod.rs
index e605a18..06bd378 100644
--- a/src/service/task/v2/section/mod.rs
+++ b/src/service/task/v2/section/mod.rs
@@ -157,7 +157,11 @@ impl SectionService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_GET, "section_guid", section_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_SECTION_GET,
+                "section_guid",
+                section_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -181,7 +185,11 @@ impl SectionService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_GET, "section_guid", section_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_SECTION_GET,
+                "section_guid",
+                section_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -205,7 +213,11 @@ impl SectionService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_GET, "section_guid", section_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_SECTION_GET,
+                "section_guid",
+                section_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -297,7 +309,11 @@ impl SectionService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_TASKS, "section_guid", section_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_SECTION_TASKS,
+                "section_guid",
+                section_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/task/v2/task/mod.rs b/src/service/task/v2/task/mod.rs
index 4c8d50a..bb50b35 100644
--- a/src/service/task/v2/task/mod.rs
+++ b/src/service/task/v2/task/mod.rs
@@ -342,7 +342,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_GET, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_GET,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -366,7 +370,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_GET, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_GET,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -389,7 +397,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_GET, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_GET,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -472,7 +484,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_ADD_MEMBERS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_ADD_MEMBERS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -497,7 +513,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_REMOVE_MEMBERS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_REMOVE_MEMBERS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -522,7 +542,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_ADD_REMINDERS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_ADD_REMINDERS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -547,7 +571,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_REMOVE_REMINDERS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_REMOVE_REMINDERS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -572,7 +600,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_ADD_DEPENDENCIES, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_ADD_DEPENDENCIES,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -597,7 +629,11 @@ impl TaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_REMOVE_DEPENDENCIES, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_REMOVE_DEPENDENCIES,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/task/v2/task_subtask/mod.rs b/src/service/task/v2/task_subtask/mod.rs
index 2ed714e..6f66cb8 100644
--- a/src/service/task/v2/task_subtask/mod.rs
+++ b/src/service/task/v2/task_subtask/mod.rs
@@ -83,7 +83,11 @@ impl TaskSubtaskService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_SUBTASKS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_SUBTASKS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -115,7 +119,11 @@ impl TaskSubtaskService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_SUBTASKS, "task_guid", task_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASK_SUBTASKS,
+                "task_guid",
+                task_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/task/v2/tasklist/mod.rs b/src/service/task/v2/tasklist/mod.rs
index 26a1659..a607126 100644
--- a/src/service/task/v2/tasklist/mod.rs
+++ b/src/service/task/v2/tasklist/mod.rs
@@ -199,7 +199,11 @@ impl TasklistService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_GET, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_GET,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -223,7 +227,11 @@ impl TasklistService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_GET, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_GET,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -247,7 +255,11 @@ impl TasklistService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_GET, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_GET,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -271,7 +283,11 @@ impl TasklistService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ADD_MEMBERS, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_ADD_MEMBERS,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -296,7 +312,11 @@ impl TasklistService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_REMOVE_MEMBERS, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_REMOVE_MEMBERS,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -357,7 +377,11 @@ impl TasklistService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_TASKS, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_TASKS,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/task/v2/tasklist_activity_subscription/mod.rs b/src/service/task/v2/tasklist_activity_subscription/mod.rs
index ab7d952..d345bf8 100644
--- a/src/service/task/v2/tasklist_activity_subscription/mod.rs
+++ b/src/service/task/v2/tasklist_activity_subscription/mod.rs
@@ -126,7 +126,11 @@ impl TasklistActivitySubscriptionService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -152,9 +156,13 @@ impl TasklistActivitySubscriptionService {
         let api_req = ApiRequest {
             http_method: Method::GET,
             api_path: EndpointBuilder::replace_param(
-                &EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET, "tasklist_guid", tasklist_guid),
-                "activity_subscription_guid", 
-                activity_subscription_guid
+                &EndpointBuilder::replace_param(
+                    Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET,
+                    "tasklist_guid",
+                    tasklist_guid,
+                ),
+                "activity_subscription_guid",
+                activity_subscription_guid,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -186,7 +194,11 @@ impl TasklistActivitySubscriptionService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS, "tasklist_guid", tasklist_guid),
+            api_path: EndpointBuilder::replace_param(
+                Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS,
+                "tasklist_guid",
+                tasklist_guid,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -212,9 +224,13 @@ impl TasklistActivitySubscriptionService {
         let api_req = ApiRequest {
             http_method: Method::PATCH,
             api_path: EndpointBuilder::replace_param(
-                &EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET, "tasklist_guid", tasklist_guid),
-                "activity_subscription_guid", 
-                activity_subscription_guid
+                &EndpointBuilder::replace_param(
+                    Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET,
+                    "tasklist_guid",
+                    tasklist_guid,
+                ),
+                "activity_subscription_guid",
+                activity_subscription_guid,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
@@ -241,9 +257,13 @@ impl TasklistActivitySubscriptionService {
         let api_req = ApiRequest {
             http_method: Method::DELETE,
             api_path: EndpointBuilder::replace_param(
-                &EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET, "tasklist_guid", tasklist_guid),
-                "activity_subscription_guid", 
-                activity_subscription_guid
+                &EndpointBuilder::replace_param(
+                    Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET,
+                    "tasklist_guid",
+                    tasklist_guid,
+                ),
+                "activity_subscription_guid",
+                activity_subscription_guid,
             ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
diff --git a/src/service/tenant/v2/tenant/mod.rs b/src/service/tenant/v2/tenant/mod.rs
index ea7e1e6..ef9b777 100644
--- a/src/service/tenant/v2/tenant/mod.rs
+++ b/src/service/tenant/v2/tenant/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::TENANT_V2_QUERY,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -55,7 +56,7 @@ impl TenantService {
     ) -> SDKResult<BaseResponse<GetTenantResponse>> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/tenant/v2/tenant/query".to_string(),
+            api_path: TENANT_V2_QUERY.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             ..Default::default()
         };
diff --git a/src/service/tenant/v2/tenant_product_assign_info/mod.rs b/src/service/tenant/v2/tenant_product_assign_info/mod.rs
index ab188ac..dd98f20 100644
--- a/src/service/tenant/v2/tenant_product_assign_info/mod.rs
+++ b/src/service/tenant/v2/tenant_product_assign_info/mod.rs
@@ -7,6 +7,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::TENANT_V2_PRODUCT_ASSIGN_INFO_QUERY,
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -55,7 +56,7 @@ impl TenantProductAssignInfoService {
     ) -> SDKResult<BaseResponse<GetTenantProductAssignInfoResponse>> {
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/tenant/v2/tenant_product_assign_info/query".to_string(),
+            api_path: TENANT_V2_PRODUCT_ASSIGN_INFO_QUERY.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant],
             ..Default::default()
         };
diff --git a/src/service/vc/v1/meeting/mod.rs b/src/service/vc/v1/meeting/mod.rs
index a69c82a..545a9c4 100644
--- a/src/service/vc/v1/meeting/mod.rs
+++ b/src/service/vc/v1/meeting/mod.rs
@@ -8,6 +8,10 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{
+            EndpointBuilder, VC_MEETING_END, VC_MEETING_GET, VC_MEETING_INVITE, VC_MEETING_KICKOUT,
+            VC_MEETING_LIST_BY_NO, VC_MEETING_SET_HOST,
+        },
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -147,7 +151,7 @@ impl MeetingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/invite"),
+            api_path: EndpointBuilder::replace_param(VC_MEETING_INVITE, "{meeting_id}", meeting_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -172,7 +176,11 @@ impl MeetingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/kickout"),
+            api_path: EndpointBuilder::replace_param(
+                VC_MEETING_KICKOUT,
+                "{meeting_id}",
+                meeting_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -197,7 +205,11 @@ impl MeetingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/set_host"),
+            api_path: EndpointBuilder::replace_param(
+                VC_MEETING_SET_HOST,
+                "{meeting_id}",
+                meeting_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -221,7 +233,7 @@ impl MeetingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/end"),
+            api_path: EndpointBuilder::replace_param(VC_MEETING_END, "{meeting_id}", meeting_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -244,7 +256,7 @@ impl MeetingService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}"),
+            api_path: EndpointBuilder::replace_param(VC_MEETING_GET, "{meeting_id}", meeting_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -281,7 +293,7 @@ impl MeetingService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/vc/v1/meetings/list_by_no".to_string(),
+            api_path: VC_MEETING_LIST_BY_NO.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/vc/v1/recording/mod.rs b/src/service/vc/v1/recording/mod.rs
index bfc66a7..a283d5a 100644
--- a/src/service/vc/v1/recording/mod.rs
+++ b/src/service/vc/v1/recording/mod.rs
@@ -8,6 +8,10 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{
+            EndpointBuilder, VC_RECORDING_GET, VC_RECORDING_SET_PERMISSION, VC_RECORDING_START,
+            VC_RECORDING_STOP,
+        },
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -96,7 +100,11 @@ impl RecordingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/recording/start"),
+            api_path: EndpointBuilder::replace_param(
+                VC_RECORDING_START,
+                "{meeting_id}",
+                meeting_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -120,7 +128,7 @@ impl RecordingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/recording/stop"),
+            api_path: EndpointBuilder::replace_param(VC_RECORDING_STOP, "{meeting_id}", meeting_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -143,7 +151,7 @@ impl RecordingService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/recording"),
+            api_path: EndpointBuilder::replace_param(VC_RECORDING_GET, "{meeting_id}", meeting_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -167,7 +175,11 @@ impl RecordingService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/meetings/{meeting_id}/recording/set_permission"),
+            api_path: EndpointBuilder::replace_param(
+                VC_RECORDING_SET_PERMISSION,
+                "{meeting_id}",
+                meeting_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
diff --git a/src/service/vc/v1/reserve/mod.rs b/src/service/vc/v1/reserve/mod.rs
index 612e37e..b042a05 100644
--- a/src/service/vc/v1/reserve/mod.rs
+++ b/src/service/vc/v1/reserve/mod.rs
@@ -8,6 +8,10 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{
+            EndpointBuilder, VC_RESERVE_CREATE, VC_RESERVE_DELETE, VC_RESERVE_GET,
+            VC_RESERVE_GET_ACTIVE_MEETING, VC_RESERVE_UPDATE,
+        },
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -133,7 +137,7 @@ impl ReserveService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/vc/v1/reserves".to_string(),
+            api_path: VC_RESERVE_CREATE.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -157,7 +161,7 @@ impl ReserveService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!("/open-apis/vc/v1/reserves/{reserve_id}"),
+            api_path: EndpointBuilder::replace_param(VC_RESERVE_DELETE, "{reserve_id}", reserve_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -181,7 +185,7 @@ impl ReserveService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/reserves/{reserve_id}"),
+            api_path: EndpointBuilder::replace_param(VC_RESERVE_UPDATE, "{reserve_id}", reserve_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -205,7 +209,7 @@ impl ReserveService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/vc/v1/reserves/{reserve_id}"),
+            api_path: EndpointBuilder::replace_param(VC_RESERVE_GET, "{reserve_id}", reserve_id),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -228,7 +232,11 @@ impl ReserveService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/vc/v1/reserves/{reserve_id}/get_active_meeting"),
+            api_path: EndpointBuilder::replace_param(
+                VC_RESERVE_GET_ACTIVE_MEETING,
+                "{reserve_id}",
+                reserve_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/src/service/vc/v1/room/mod.rs b/src/service/vc/v1/room/mod.rs
index cb87a74..fad6e28 100644
--- a/src/service/vc/v1/room/mod.rs
+++ b/src/service/vc/v1/room/mod.rs
@@ -8,6 +8,7 @@ use crate::{
         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
         config::Config,
         constants::AccessTokenType,
+        endpoints::{EndpointBuilder, VC_ROOM_CREATE, VC_ROOM_LIST, VC_ROOM_SEARCH},
         http::Transport,
         req_option::RequestOption,
         SDKResult,
@@ -156,7 +157,7 @@ impl RoomService {
 
         let api_req = ApiRequest {
             http_method: Method::POST,
-            api_path: "/open-apis/vc/v1/rooms".to_string(),
+            api_path: VC_ROOM_CREATE.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -185,7 +186,11 @@ impl RoomService {
 
         let api_req = ApiRequest {
             http_method: Method::PATCH,
-            api_path: format!("/open-apis/vc/v1/rooms/{room_id}"),
+            api_path: EndpointBuilder::replace_param(
+                crate::core::endpoints::VC_ROOM_UPDATE,
+                "{room_id}",
+                room_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             body: serde_json::to_vec(&request)?,
@@ -213,7 +218,11 @@ impl RoomService {
 
         let api_req = ApiRequest {
             http_method: Method::DELETE,
-            api_path: format!("/open-apis/vc/v1/rooms/{room_id}"),
+            api_path: EndpointBuilder::replace_param(
+                crate::core::endpoints::VC_ROOM_DELETE,
+                "{room_id}",
+                room_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -240,7 +249,11 @@ impl RoomService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: format!("/open-apis/vc/v1/rooms/{room_id}"),
+            api_path: EndpointBuilder::replace_param(
+                crate::core::endpoints::VC_ROOM_GET,
+                "{room_id}",
+                room_id,
+            ),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -274,7 +287,7 @@ impl RoomService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/vc/v1/rooms".to_string(),
+            api_path: VC_ROOM_LIST.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
@@ -313,7 +326,7 @@ impl RoomService {
 
         let api_req = ApiRequest {
             http_method: Method::GET,
-            api_path: "/open-apis/vc/v1/rooms/search".to_string(),
+            api_path: VC_ROOM_SEARCH.to_string(),
             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
             query_params,
             ..Default::default()
diff --git a/zen_precommit.changeset b/zen_precommit.changeset
index 497f60c..e0e1546 100644
--- a/zen_precommit.changeset
+++ b/zen_precommit.changeset
@@ -1,25498 +0,0 @@
-diff --git a/batch_fix_imports.sh b/batch_fix_imports.sh
-deleted file mode 100644
-index 554eb45..0000000
---- a/batch_fix_imports.sh
-+++ /dev/null
-@@ -1,25 +0,0 @@
--#!/bin/bash
--
--# 获取所有有导入错误的文件
--files=(
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/add_dimension_range.rs"
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/delete_dimension_range.rs"
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/insert_dimension_range.rs"
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/update_dimension_range.rs"
--    "src/service/cloud_docs/sheets/v2/spreadsheet_sheet/operate_sheets.rs"
--)
--
--# 批量修复v2文件
--for file in "${files[@]}"; do
--    if [ -f "$file" ]; then
--        echo "修复 $file"
--        # 使用sed修复导入错误
--        sed -i '' 's/api_resp:{\([^}]*\)endpoints::Endpoints,\([^}]*\)}/api_resp:{\1\2}, endpoints::Endpoints,/g' "$file"
--        sed -i '' 's/api_resp:{\s*endpoints::Endpoints,\([^}]*\)}/api_resp:{\1}, endpoints::Endpoints,/g' "$file"
--        # 修复空的api_resp块
--        sed -i '' 's/api_resp:{\s*}/api_resp::BaseResponse/g' "$file"
--        sed -i '' 's/api_resp::BaseResponse, endpoints::Endpoints,/api_resp::BaseResponse, endpoints::Endpoints,/g' "$file"
--    fi
--done
--
--echo "批量修复完成"
-\ No newline at end of file
-diff --git a/collect_cloud_docs_endpoints.py b/collect_cloud_docs_endpoints.py
-deleted file mode 100644
-index efe55b0..0000000
---- a/collect_cloud_docs_endpoints.py
-+++ /dev/null
-@@ -1,123 +0,0 @@
--#!/usr/bin/env python3
--"""
--收集CloudDocs模块中的所有API端点
--用于Phase 2.4.4a的字符串分配优化任务
--"""
--
--import os
--import re
--from collections import defaultdict
--from pathlib import Path
--
--def collect_api_endpoints():
--    """收集CloudDocs模块中的所有API端点"""
--    cloud_docs_path = Path("/Users/zool/RustroverProjects/open-lark/src/service/cloud_docs")
--    
--    endpoints = defaultdict(list)
--    all_endpoints = set()
--    
--    # 正则表达式匹配API路径
--    api_pattern = re.compile(r'"/open-apis/([^"]+)"')
--    
--    for rust_file in cloud_docs_path.rglob("*.rs"):
--        if rust_file.name == "mod.rs":
--            continue
--            
--        try:
--            with open(rust_file, 'r', encoding='utf-8') as f:
--                content = f.read()
--                
--            # 查找所有API路径
--            matches = api_pattern.findall(content)
--            
--            if matches:
--                # 确定子模块
--                relative_path = rust_file.relative_to(cloud_docs_path)
--                parts = relative_path.parts
--                if len(parts) >= 1:
--                    submodule = parts[0]
--                else:
--                    submodule = "root"
--                
--                for match in matches:
--                    full_path = f"/open-apis/{match}"
--                    endpoints[submodule].append((full_path, str(relative_path)))
--                    all_endpoints.add(full_path)
--                    
--        except Exception as e:
--            print(f"Error processing {rust_file}: {e}")
--    
--    return endpoints, all_endpoints
--
--def generate_endpoint_constants(all_endpoints):
--    """生成端点常量定义"""
--    constants = []
--    
--    # 按子模块分组
--    grouped = defaultdict(list)
--    
--    for endpoint in sorted(all_endpoints):
--        # 解析端点以确定分组
--        parts = endpoint.split('/')
--        if len(parts) >= 4:  # /open-apis/service/version/...
--            service = parts[2]
--            version = parts[3] if parts[3].startswith('v') else None
--            
--            # 生成常量名称
--            const_name = endpoint.replace('/open-apis/', '').replace('/', '_').replace('-', '_').upper()
--            const_name = re.sub(r'\{[^}]+\}', 'ID', const_name)  # 替换路径参数
--            
--            grouped[service].append((const_name, endpoint))
--    
--    # 生成常量定义
--    for service, service_endpoints in sorted(grouped.items()):
--        constants.append(f"\n    // ==================== {service.upper()} 服务端点 ====================\n")
--        
--        for const_name, endpoint in service_endpoints:
--            constants.append(f'    /// {endpoint}')
--            constants.append(f'    pub const {const_name}: &\'static str = "{endpoint}";')
--            constants.append('')
--    
--    return '\n'.join(constants)
--
--def main():
--    print("正在收集CloudDocs模块的API端点...")
--    
--    endpoints, all_endpoints = collect_api_endpoints()
--    
--    print(f"\n发现 {len(all_endpoints)} 个唯一的API端点")
--    print(f"涉及 {len(endpoints)} 个子模块")
--    
--    print("\n=== 按子模块统计 ===")
--    total_files = 0
--    for submodule, endpoint_list in sorted(endpoints.items()):
--        unique_endpoints = set(ep[0] for ep in endpoint_list)
--        files = set(ep[1] for ep in endpoint_list)
--        print(f"{submodule:15} : {len(unique_endpoints):3d} 个端点，{len(files):3d} 个文件")
--        total_files += len(files)
--    
--    print(f"\n总计: {len(all_endpoints)} 个唯一端点，{total_files} 个文件")
--    
--    # 生成端点常量
--    print("\n=== 生成的端点常量 ===")
--    constants_code = generate_endpoint_constants(all_endpoints)
--    
--    # 保存到文件
--    output_file = "/Users/zool/RustroverProjects/open-lark/cloud_docs_endpoints.rs"
--    with open(output_file, 'w', encoding='utf-8') as f:
--        f.write("// CloudDocs模块端点常量\n")
--        f.write("// 自动生成，用于Phase 2.4.4a优化任务\n")
--        f.write(constants_code)
--    
--    print(f"端点常量已保存到: {output_file}")
--    
--    # 显示一些示例端点
--    print("\n=== 示例端点 ===")
--    for i, endpoint in enumerate(sorted(all_endpoints)[:10]):
--        print(f"  {endpoint}")
--    
--    if len(all_endpoints) > 10:
--        print(f"  ... 还有 {len(all_endpoints) - 10} 个端点")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/collect_cloud_docs_endpoints_v2.py b/collect_cloud_docs_endpoints_v2.py
-deleted file mode 100644
-index 534e5a3..0000000
---- a/collect_cloud_docs_endpoints_v2.py
-+++ /dev/null
-@@ -1,178 +0,0 @@
--#!/usr/bin/env python3
--"""
--收集CloudDocs模块中的所有API端点（修正版本）
--用于Phase 2.4.4a的字符串分配优化任务
--"""
--
--import os
--import re
--from collections import defaultdict
--from pathlib import Path
--
--def collect_api_endpoints():
--    """收集CloudDocs模块中的所有API端点"""
--    cloud_docs_path = Path("/Users/zool/RustroverProjects/open-lark/src/service/cloud_docs")
--    
--    endpoints = defaultdict(list)
--    all_endpoints = set()
--    
--    # 正则表达式匹配API路径
--    api_pattern = re.compile(r'"/open-apis/([^"]+)"')
--    
--    for rust_file in cloud_docs_path.rglob("*.rs"):
--        if rust_file.name == "mod.rs":
--            continue
--            
--        try:
--            with open(rust_file, 'r', encoding='utf-8') as f:
--                content = f.read()
--                
--            # 查找所有API路径
--            matches = api_pattern.findall(content)
--            
--            if matches:
--                # 确定子模块
--                relative_path = rust_file.relative_to(cloud_docs_path)
--                parts = relative_path.parts
--                if len(parts) >= 1:
--                    submodule = parts[0]
--                else:
--                    submodule = "root"
--                
--                for match in matches:
--                    full_path = f"/open-apis/{match}"
--                    endpoints[submodule].append((full_path, str(relative_path)))
--                    all_endpoints.add(full_path)
--                    
--        except Exception as e:
--            print(f"Error processing {rust_file}: {e}")
--    
--    return endpoints, all_endpoints
--
--def normalize_constant_name(endpoint):
--    """将端点路径转换为有效的常量名称"""
--    # 移除 /open-apis/ 前缀
--    path = endpoint.replace('/open-apis/', '')
--    
--    # 将路径参数 {xxx} 替换为更描述性的名称
--    path = re.sub(r'\{app_token\}', 'APP_TOKEN', path)
--    path = re.sub(r'\{table_id\}', 'TABLE_ID', path) 
--    path = re.sub(r'\{record_id\}', 'RECORD_ID', path)
--    path = re.sub(r'\{field_id\}', 'FIELD_ID', path)
--    path = re.sub(r'\{view_id\}', 'VIEW_ID', path)
--    path = re.sub(r'\{role_id\}', 'ROLE_ID', path)
--    path = re.sub(r'\{member_id\}', 'MEMBER_ID', path)
--    path = re.sub(r'\{dashboard_id\}', 'DASHBOARD_ID', path)
--    path = re.sub(r'\{block_id\}', 'BLOCK_ID', path)
--    path = re.sub(r'\{form_id\}', 'FORM_ID', path)
--    path = re.sub(r'\{question_id\}', 'QUESTION_ID', path)
--    path = re.sub(r'\{workflow_id\}', 'WORKFLOW_ID', path)
--    path = re.sub(r'\{file_token\}', 'FILE_TOKEN', path)
--    path = re.sub(r'\{folder_token\}', 'FOLDER_TOKEN', path)
--    path = re.sub(r'\{token\}', 'TOKEN', path)
--    path = re.sub(r'\{node_id\}', 'NODE_ID', path)
--    path = re.sub(r'\{space_id\}', 'SPACE_ID', path)
--    path = re.sub(r'\{node_token\}', 'NODE_TOKEN', path)
--    path = re.sub(r'\{wiki_token\}', 'WIKI_TOKEN', path)
--    path = re.sub(r'\{document_id\}', 'DOCUMENT_ID', path)
--    path = re.sub(r'\{document_token\}', 'DOCUMENT_TOKEN', path)
--    path = re.sub(r'\{revision_id\}', 'REVISION_ID', path)
--    path = re.sub(r'\{block_id\}', 'BLOCK_ID', path)
--    path = re.sub(r'\{spreadsheet_token\}', 'SPREADSHEET_TOKEN', path)
--    path = re.sub(r'\{sheet_id\}', 'SHEET_ID', path)
--    path = re.sub(r'\{range\}', 'RANGE', path)
--    path = re.sub(r'\{condition_id\}', 'CONDITION_ID', path)
--    path = re.sub(r'\{float_image_id\}', 'FLOAT_IMAGE_ID', path)
--    path = re.sub(r'\{protect_id\}', 'PROTECT_ID', path)
--    path = re.sub(r'\{filter_id\}', 'FILTER_ID', path)
--    path = re.sub(r'\{filter_view_id\}', 'FILTER_VIEW_ID', path)
--    path = re.sub(r'\{data_validation_id\}', 'DATA_VALIDATION_ID', path)
--    
--    # 处理特殊情况的占位符
--    path = re.sub(r'\{[^}]*\}', 'ID', path)  # 其他未匹配的参数统一替换为ID
--    
--    # 转换为常量格式
--    const_name = path.replace('/', '_').replace('-', '_').upper()
--    
--    # 清理多余的下划线
--    const_name = re.sub(r'_+', '_', const_name)
--    const_name = const_name.strip('_')
--    
--    return const_name
--
--def generate_endpoint_constants(all_endpoints):
--    """生成端点常量定义"""
--    constants = []
--    
--    # 按服务分组
--    grouped = defaultdict(list)
--    
--    for endpoint in sorted(all_endpoints):
--        # 解析端点以确定分组
--        parts = endpoint.split('/')
--        if len(parts) >= 4:  # /open-apis/service/version/...
--            service = parts[2]
--            
--            # 生成常量名称
--            const_name = normalize_constant_name(endpoint)
--            
--            grouped[service].append((const_name, endpoint))
--    
--    # 生成常量定义
--    for service, service_endpoints in sorted(grouped.items()):
--        service_title = service.replace('_', ' ').title()
--        constants.append(f"\n    // ==================== {service_title} 服务端点 ====================\n")
--        
--        for const_name, endpoint in service_endpoints:
--            constants.append(f'    /// {endpoint}')
--            constants.append(f'    pub const {const_name}: &\'static str = "{endpoint}";')
--            constants.append('')
--    
--    return '\n'.join(constants)
--
--def main():
--    print("正在收集CloudDocs模块的API端点...")
--    
--    endpoints, all_endpoints = collect_api_endpoints()
--    
--    print(f"\n发现 {len(all_endpoints)} 个唯一的API端点")
--    print(f"涉及 {len(endpoints)} 个子模块")
--    
--    print("\n=== 按子模块统计 ===")
--    total_files = 0
--    for submodule, endpoint_list in sorted(endpoints.items()):
--        unique_endpoints = set(ep[0] for ep in endpoint_list)
--        files = set(ep[1] for ep in endpoint_list)
--        print(f"{submodule:15} : {len(unique_endpoints):3d} 个端点，{len(files):3d} 个文件")
--        total_files += len(files)
--    
--    print(f"\n总计: {len(all_endpoints)} 个唯一端点，{total_files} 个文件")
--    
--    # 生成端点常量
--    print("\n正在生成端点常量...")
--    constants_code = generate_endpoint_constants(all_endpoints)
--    
--    # 保存到文件
--    output_file = "/Users/zool/RustroverProjects/open-lark/cloud_docs_endpoints_v2.rs"
--    with open(output_file, 'w', encoding='utf-8') as f:
--        f.write("// CloudDocs模块端点常量\n")
--        f.write("// 自动生成，用于Phase 2.4.4a优化任务\n")
--        f.write("// 需要添加到 src/core/endpoints.rs 中\n\n")
--        f.write("impl Endpoints {\n")
--        f.write(constants_code)
--        f.write("\n}\n")
--    
--    print(f"端点常量已保存到: {output_file}")
--    
--    # 显示一些示例端点和常量名
--    print("\n=== 端点映射示例 ===")
--    sample_endpoints = sorted(all_endpoints)[:10]
--    for endpoint in sample_endpoints:
--        const_name = normalize_constant_name(endpoint)
--        print(f"  {const_name:50} => {endpoint}")
--    
--    if len(all_endpoints) > 10:
--        print(f"  ... 还有 {len(all_endpoints) - 10} 个端点")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/fix_all_imports.py b/fix_all_imports.py
-deleted file mode 100644
-index d83e084..0000000
---- a/fix_all_imports.py
-+++ /dev/null
-@@ -1,130 +0,0 @@
--#!/usr/bin/env python3
--
--import os
--import glob
--import re
--
--def fix_import_error(content):
--    """修复导入错误"""
--    
--    # 修复模式：api_resp:{...endpoints::Endpoints,...}
--    pattern = r'api_resp:\{([^}]*?)endpoints::Endpoints,([^}]*?)\}'
--    
--    def replace_func(match):
--        before = match.group(1).strip()
--        after = match.group(2).strip()
--        
--        # 清理前后内容
--        parts = []
--        if before:
--            parts.append(before.rstrip(',').strip())
--        if after:
--            parts.append(after.lstrip(',').strip())
--        
--        # 过滤空字符串
--        parts = [p for p in parts if p]
--        
--        if parts:
--            return f'api_resp:{{{", ".join(parts)}}}'
--        else:
--            return 'api_resp::BaseResponse'
--    
--    content = re.sub(pattern, replace_func, content, flags=re.DOTALL)
--    
--    # 在修复api_resp块后，确保endpoints::Endpoints在正确位置
--    # 查找use crate块并添加endpoints导入
--    lines = content.split('\n')
--    in_use_block = False
--    use_block_start = -1
--    use_block_end = -1
--    has_endpoints = False
--    
--    for i, line in enumerate(lines):
--        if line.strip().startswith('use crate::{'):
--            in_use_block = True
--            use_block_start = i
--        elif in_use_block and line.strip() == '};':
--            use_block_end = i
--            break
--        elif in_use_block and 'endpoints::Endpoints' in line:
--            has_endpoints = True
--    
--    # 如果在use块中找不到endpoints导入，添加它
--    if use_block_start != -1 and use_block_end != -1 and not has_endpoints:
--        # 找到core块的位置
--        core_start = -1
--        core_end = -1
--        for i in range(use_block_start, use_block_end):
--            if 'core::{' in lines[i]:
--                core_start = i
--                # 找到对应的}
--                brace_count = 1
--                for j in range(i + 1, use_block_end):
--                    if '{' in lines[j]:
--                        brace_count += lines[j].count('{')
--                    if '}' in lines[j]:
--                        brace_count -= lines[j].count('}')
--                        if brace_count == 0:
--                            core_end = j
--                            break
--                break
--        
--        # 在core块后添加endpoints导入
--        if core_start != -1 and core_end != -1:
--            lines.insert(core_end + 1, '        endpoints::Endpoints,')
--    
--    return '\n'.join(lines)
--
--def process_file(file_path):
--    """处理单个文件"""
--    try:
--        with open(file_path, 'r', encoding='utf-8') as f:
--            content = f.read()
--        
--        # 检查是否包含导入错误
--        if 'api_resp:' in content and 'endpoints::Endpoints' in content:
--            original_content = content
--            fixed_content = fix_import_error(content)
--            
--            if fixed_content != original_content:
--                with open(file_path, 'w', encoding='utf-8') as f:
--                    f.write(fixed_content)
--                print(f"✓ 修复: {file_path}")
--                return True
--            else:
--                print(f"- 无需修复: {file_path}")
--                return False
--        else:
--            print(f"- 跳过: {file_path}")
--            return False
--            
--    except Exception as e:
--        print(f"✗ 错误: {file_path}: {e}")
--        return False
--
--def main():
--    """主函数"""
--    print("批量修复所有导入错误...")
--    
--    # 获取所有sheets模块的Rust文件
--    patterns = [
--        'src/service/cloud_docs/sheets/v2/**/*.rs',
--        'src/service/cloud_docs/sheets/v3/**/*.rs'
--    ]
--    
--    files = []
--    for pattern in patterns:
--        files.extend(glob.glob(pattern, recursive=True))
--    
--    print(f"检查 {len(files)} 个文件")
--    
--    fixed_count = 0
--    for file_path in files:
--        if os.path.isfile(file_path):
--            if process_file(file_path):
--                fixed_count += 1
--    
--    print(f"修复完成! 共修复 {fixed_count} 个文件")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/fix_final_imports.py b/fix_final_imports.py
-deleted file mode 100644
-index 747caa2..0000000
---- a/fix_final_imports.py
-+++ /dev/null
-@@ -1,95 +0,0 @@
--#!/usr/bin/env python3
--
--import os
--import re
--import glob
--
--def fix_import_structure(content):
--    """修复导入结构中endpoints::Endpoints的位置"""
--    
--    # 匹配并修复 api_resp 块中错误包含 endpoints::Endpoints 的情况
--    # 寻找模式: api_resp:{...endpoints::Endpoints,...}
--    pattern = r'api_resp:\s*\{([^}]*?)\s*endpoints::Endpoints,([^}]*?)\},'
--    
--    def replace_func(match):
--        before = match.group(1).strip()
--        after = match.group(2).strip()
--        
--        # 清理前后的内容，移除多余的逗号
--        if before.endswith(','):
--            before = before[:-1]
--        if after.startswith(','):
--            after = after[1:]
--        
--        # 重构导入
--        if before and after:
--            return f'api_resp:{{{before}, {after}}}, endpoints::Endpoints,'
--        elif before:
--            return f'api_resp:{{{before}}}, endpoints::Endpoints,'
--        elif after:
--            return f'api_resp:{{{after}}}, endpoints::Endpoints,'
--        else:
--            return 'api_resp::BaseResponse, endpoints::Endpoints,'
--    
--    content = re.sub(pattern, replace_func, content, flags=re.DOTALL)
--    
--    # 处理其他可能的错误格式
--    content = re.sub(
--        r'api_resp:\s*\{\s*endpoints::Endpoints,([^}]*?)\}',
--        r'api_resp:{\1}, endpoints::Endpoints',
--        content,
--        flags=re.DOTALL
--    )
--    
--    # 修复可能的重复导入
--    content = re.sub(
--        r'endpoints::Endpoints,\s*endpoints::Endpoints,',
--        'endpoints::Endpoints,',
--        content
--    )
--    
--    return content
--
--def process_file(file_path):
--    """处理单个文件"""
--    try:
--        with open(file_path, 'r', encoding='utf-8') as f:
--            content = f.read()
--        
--        original_content = content
--        content = fix_import_structure(content)
--        
--        if content != original_content:
--            with open(file_path, 'w', encoding='utf-8') as f:
--                f.write(content)
--            print(f"✓ 修复: {file_path}")
--        else:
--            print(f"- 无需修复: {file_path}")
--            
--    except Exception as e:
--        print(f"✗ 错误处理 {file_path}: {e}")
--
--def main():
--    """主函数"""
--    print("修复最终的导入结构错误...")
--    
--    # 获取所有sheets模块的Rust文件
--    patterns = [
--        'src/service/cloud_docs/sheets/v2/**/*.rs',
--        'src/service/cloud_docs/sheets/v3/**/*.rs'
--    ]
--    
--    files = []
--    for pattern in patterns:
--        files.extend(glob.glob(pattern, recursive=True))
--    
--    print(f"检查 {len(files)} 个文件")
--    
--    for file_path in files:
--        if os.path.isfile(file_path):
--            process_file(file_path)
--    
--    print("修复完成!")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/fix_import_structure.py b/fix_import_structure.py
-deleted file mode 100644
-index 18fe8c2..0000000
---- a/fix_import_structure.py
-+++ /dev/null
-@@ -1,79 +0,0 @@
--#!/usr/bin/env python3
--import os
--import re
--import subprocess
--
--def find_files_with_broken_imports():
--    """Find files with broken import structure"""
--    cmd = '''find /Users/zool/RustroverProjects/open-lark/src/service/cloud_docs/sheets -name "*.rs" -exec grep -l "ResponseFormat," {} \\;'''
--    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
--    return result.stdout.strip().split('\n') if result.stdout.strip() else []
--
--def fix_import_structure(file_path):
--    """Fix broken import structures in files"""
--    try:
--        with open(file_path, 'r') as f:
--            content = f.read()
--        
--        # Fix broken api_resp import line
--        broken_pattern = r'api_resp::\{ApiResponseTrait, BaseResponse, ResponseFormat,\s*\n\s*\},\s*constants::AccessTokenType,'
--        if re.search(broken_pattern, content, re.MULTILINE):
--            content = re.sub(
--                broken_pattern,
--                'api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},\n        constants::AccessTokenType,\n        endpoints::Endpoints,',
--                content,
--                flags=re.MULTILINE
--            )
--            
--            with open(file_path, 'w') as f:
--                f.write(content)
--            
--            print(f"  Fixed broken import structure: {file_path}")
--            return True
--        
--        # Alternative pattern
--        broken_pattern2 = r'api_resp::\{ApiResponseTrait, BaseResponse, ResponseFormat,\s*\n\s*\n\s*\},'
--        if re.search(broken_pattern2, content, re.MULTILINE):
--            content = re.sub(
--                broken_pattern2,
--                'api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},',
--                content,
--                flags=re.MULTILINE
--            )
--            
--            # Check if endpoints::Endpoints is missing
--            if 'endpoints::Endpoints' not in content:
--                content = re.sub(
--                    r'(constants::AccessTokenType,)',
--                    r'endpoints::Endpoints,\n        \1',
--                    content
--                )
--            
--            with open(file_path, 'w') as f:
--                f.write(content)
--            
--            print(f"  Fixed broken import structure (v2): {file_path}")
--            return True
--        
--        print(f"  No broken import pattern found: {file_path}")
--        return False
--    
--    except Exception as e:
--        print(f"  Error processing {file_path}: {e}")
--        return False
--
--def main():
--    files = find_files_with_broken_imports()
--    
--    print(f"Found {len(files)} files with potential import issues")
--    
--    success_count = 0
--    for file_path in files:
--        if file_path:  # Skip empty strings
--            if fix_import_structure(file_path):
--                success_count += 1
--    
--    print(f"\nSuccessfully fixed import structures in {success_count} files")
--
--if __name__ == '__main__':
--    main()
-\ No newline at end of file
-diff --git a/fix_imports_final.py b/fix_imports_final.py
-deleted file mode 100644
-index da1ddd2..0000000
---- a/fix_imports_final.py
-+++ /dev/null
-@@ -1,131 +0,0 @@
--#!/usr/bin/env python3
--
--import os
--import glob
--
--def fix_import_error(file_path):
--    """修复特定的导入错误"""
--    with open(file_path, 'r', encoding='utf-8') as f:
--        content = f.read()
--    
--    # 查找并修复错误的导入结构
--    lines = content.split('\n')
--    in_use_block = False
--    
--    for i, line in enumerate(lines):
--        if 'use crate::{' in line:
--            in_use_block = True
--        elif in_use_block and '}' in line and 'use' not in line:
--            in_use_block = False
--        elif in_use_block and 'api_resp:' in line and 'endpoints::Endpoints,' in lines[i+1]:
--            # 找到错误的结构，需要修复
--            # 获取api_resp块的内容
--            j = i + 1
--            api_resp_content = []
--            endpoints_found = False
--            
--            while j < len(lines) and not lines[j].strip().endswith('},'):
--                if 'endpoints::Endpoints,' in lines[j]:
--                    endpoints_found = True
--                    j += 1
--                    continue
--                api_resp_content.append(lines[j].strip())
--                j += 1
--            
--            if endpoints_found:
--                # 修复导入结构
--                api_resp_line = lines[i].replace(',', '')
--                if not api_resp_line.endswith('{'):
--                    api_resp_line += '{'
--                
--                # 清理api_resp内容
--                clean_content = []
--                for content_line in api_resp_content:
--                    if content_line and not content_line.startswith('endpoints'):
--                        clean_content.append(content_line)
--                
--                # 重构
--                if clean_content:
--                    lines[i] = api_resp_line + ', '.join(clean_content) + '},'
--                else:
--                    lines[i] = api_resp_line.replace('{', '') + 'BaseResponse},'
--                
--                # 添加endpoints导入
--                lines.insert(i+1, '        endpoints::Endpoints,')
--                
--                # 删除原来错误的行
--                del lines[i+2:j+1]
--                break
--    
--    return '\n'.join(lines)
--
--def process_file(file_path):
--    """处理单个文件"""
--    try:
--        with open(file_path, 'r', encoding='utf-8') as f:
--            original_content = f.read()
--        
--        # 检查是否包含错误的导入
--        if 'api_resp:' in original_content and 'endpoints::Endpoints,' in original_content:
--            # 使用简单的字符串替换修复
--            fixed_content = original_content
--            
--            # 修复模式1: api_resp:{...endpoints::Endpoints,...}
--            import re
--            
--            pattern = r'api_resp:\{([^}]*?)\s*endpoints::Endpoints,([^}]*?)\},'
--            def replace_func(match):
--                before = match.group(1).strip()
--                after = match.group(2).strip()
--                
--                # 清理前后内容
--                parts = []
--                if before:
--                    parts.append(before.rstrip(','))
--                if after:
--                    parts.append(after.lstrip(','))
--                
--                if parts:
--                    return f'api_resp:{{{", ".join(parts)}}},\n        endpoints::Endpoints,'
--                else:
--                    return 'api_resp::BaseResponse,\n        endpoints::Endpoints,'
--            
--            fixed_content = re.sub(pattern, replace_func, fixed_content, flags=re.DOTALL)
--            
--            # 修复其他格式
--            fixed_content = re.sub(
--                r'api_resp:\{\s*endpoints::Endpoints,([^}]*?)\}',
--                r'api_resp:{\1},\n        endpoints::Endpoints',
--                fixed_content,
--                flags=re.DOTALL
--            )
--            
--            if fixed_content != original_content:
--                with open(file_path, 'w', encoding='utf-8') as f:
--                    f.write(fixed_content)
--                print(f"✓ 修复: {file_path}")
--            else:
--                print(f"- 无需修复: {file_path}")
--        else:
--            print(f"- 跳过: {file_path}")
--            
--    except Exception as e:
--        print(f"✗ 错误: {file_path}: {e}")
--
--def main():
--    """主函数"""
--    print("批量修复导入错误...")
--    
--    # 获取所有v2数据操作模块文件
--    files = glob.glob('src/service/cloud_docs/sheets/v2/data_operation/*.rs')
--    
--    print(f"处理 {len(files)} 个文件")
--    
--    for file_path in files:
--        if os.path.isfile(file_path):
--            process_file(file_path)
--    
--    print("修复完成!")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/fix_missing_endpoints_final.py b/fix_missing_endpoints_final.py
-deleted file mode 100644
-index d48ee25..0000000
---- a/fix_missing_endpoints_final.py
-+++ /dev/null
-@@ -1,47 +0,0 @@
--#!/usr/bin/env python3
--import os
--import subprocess
--
--def find_files_missing_endpoints():
--    """Find files that use Endpoints but don't have import"""
--    cmd = '''find /Users/zool/RustroverProjects/open-lark/src/service/cloud_docs/sheets -name "*.rs" -exec grep -l "Endpoints::" {} \\; | xargs grep -L "endpoints::Endpoints"'''
--    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
--    return [f for f in result.stdout.strip().split('\n') if f]
--
--def add_endpoints_import_simple(file_path):
--    """Add endpoints::Endpoints to core imports"""
--    try:
--        with open(file_path, 'r') as f:
--            content = f.read()
--        
--        # Simple replacement - add after constants::AccessTokenType
--        if 'constants::AccessTokenType,' in content:
--            content = content.replace(
--                'constants::AccessTokenType,',
--                'constants::AccessTokenType,\n        endpoints::Endpoints,'
--            )
--        elif 'constants::AccessTokenType' in content:
--            content = content.replace(
--                'constants::AccessTokenType',
--                'constants::AccessTokenType,\n        endpoints::Endpoints'
--            )
--        
--        with open(file_path, 'w') as f:
--            f.write(content)
--        
--        print(f"  Added endpoints import: {file_path}")
--        return True
--        
--    except Exception as e:
--        print(f"  Error: {e}")
--        return False
--
--def main():
--    files = find_files_missing_endpoints()
--    print(f"Found {len(files)} files missing Endpoints imports")
--    
--    for file_path in files:
--        add_endpoints_import_simple(file_path)
--
--if __name__ == '__main__':
--    main()
-\ No newline at end of file
-diff --git a/fix_missing_endpoints_imports.py b/fix_missing_endpoints_imports.py
-deleted file mode 100644
-index 89f48e8..0000000
---- a/fix_missing_endpoints_imports.py
-+++ /dev/null
-@@ -1,78 +0,0 @@
--#!/usr/bin/env python3
--import os
--import re
--import subprocess
--
--def find_files_needing_endpoints_import():
--    """Find v3 files that use Endpoints but don't have the import"""
--    cmd = '''find /Users/zool/RustroverProjects/open-lark/src/service/cloud_docs/sheets/v3 -name "*.rs" -exec grep -l "Endpoints::" {} \\; | xargs grep -L "use.*endpoints::Endpoints"'''
--    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
--    return result.stdout.strip().split('\n') if result.stdout.strip() else []
--
--def add_endpoints_import(file_path):
--    """Add endpoints::Endpoints import to a file's core imports"""
--    try:
--        with open(file_path, 'r') as f:
--            content = f.read()
--        
--        # Pattern to find core imports block
--        core_import_pattern = r'(use crate::\{\s*core::\{[^}]*\})'
--        
--        match = re.search(core_import_pattern, content, re.DOTALL)
--        if match:
--            core_block = match.group(1)
--            
--            # Check if endpoints::Endpoints is already there
--            if 'endpoints::Endpoints' in core_block:
--                print(f"  Already has endpoints import: {file_path}")
--                return False
--            
--            # Find where to insert endpoints::Endpoints
--            # Look for constants::AccessTokenType and add endpoints before it
--            if 'constants::AccessTokenType' in core_block:
--                new_core_block = core_block.replace(
--                    'constants::AccessTokenType',
--                    'endpoints::Endpoints,\n        constants::AccessTokenType'
--                )
--            else:
--                # Try to add after api_resp
--                if 'api_resp::{' in core_block:
--                    new_core_block = re.sub(
--                        r'(api_resp::\{[^}]*\}),',
--                        r'\1,\n        endpoints::Endpoints,',
--                        core_block
--                    )
--                else:
--                    print(f"  Could not find insertion point in: {file_path}")
--                    return False
--            
--            content = content.replace(core_block, new_core_block)
--            
--            with open(file_path, 'w') as f:
--                f.write(content)
--            
--            print(f"  Added endpoints import: {file_path}")
--            return True
--        else:
--            print(f"  Could not find core imports block: {file_path}")
--            return False
--    
--    except Exception as e:
--        print(f"  Error processing {file_path}: {e}")
--        return False
--
--def main():
--    files = find_files_needing_endpoints_import()
--    
--    print(f"Found {len(files)} files needing Endpoints import")
--    
--    success_count = 0
--    for file_path in files:
--        if file_path:  # Skip empty strings
--            if add_endpoints_import(file_path):
--                success_count += 1
--    
--    print(f"\nSuccessfully added imports to {success_count} files")
--
--if __name__ == '__main__':
--    main()
-\ No newline at end of file
-diff --git a/fix_query_params.sh b/fix_query_params.sh
-deleted file mode 100755
-index 34dca51..0000000
---- a/fix_query_params.sh
-+++ /dev/null
-@@ -1,160 +0,0 @@
--#!/bin/bash
--
--# 批量修复查询参数类型错误脚本
--# 该脚本解决从 HashMap<String, String> 到 HashMap<&'static str, String> 的迁移
--
--set -e
--
--echo "开始批量修复查询参数类型错误..."
--
--# 备份当前状态
--echo "创建备份分支..."
--git add .
--git stash push -m "Before query params fix"
--
--# 1. 修复最常见的查询参数，移除键上的 .to_string() 调用
--echo "第一阶段：移除常见查询参数键的 .to_string() 调用..."
--
--# 修复 page_size
--find src -name "*.rs" -type f -exec sed -i '' 's/"page_size"\.to_string()/"page_size"/g' {} \;
--
--# 修复 page_token  
--find src -name "*.rs" -type f -exec sed -i '' 's/"page_token"\.to_string()/"page_token"/g' {} \;
--
--# 修复 user_id_type
--find src -name "*.rs" -type f -exec sed -i '' 's/"user_id_type"\.to_string()/"user_id_type"/g' {} \;
--
--# 修复 user_id
--find src -name "*.rs" -type f -exec sed -i '' 's/"user_id"\.to_string()/"user_id"/g' {} \;
--
--# 修复其他常见参数
--find src -name "*.rs" -type f -exec sed -i '' 's/"start_time"\.to_string()/"start_time"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"end_time"\.to_string()/"end_time"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"department_id"\.to_string()/"department_id"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"department_id_type"\.to_string()/"department_id_type"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"file_type"\.to_string()/"file_type"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"image_type"\.to_string()/"image_type"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"receive_id_type"\.to_string()/"receive_id_type"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"chat_id"\.to_string()/"chat_id"/g' {} \;
--find src -name "*.rs" -type f -exec sed -i '' 's/"message_id"\.to_string()/"message_id"/g' {} \;
--
--echo "第一阶段完成。"
--
--# 2. 使用 QueryParams 常量替换可能的情况（更复杂，需要导入模块）
--echo "第二阶段：替换为 QueryParams 常量..."
--
--# 创建临时的查找和替换脚本
--cat > /tmp/replace_with_constants.py << 'EOF'
--#!/usr/bin/env python3
--import os
--import re
--import sys
--
--# 定义常量映射
--PARAM_CONSTANTS = {
--    '"page_size"': 'crate::core::query_params::QueryParams::PAGE_SIZE',
--    '"page_token"': 'crate::core::query_params::QueryParams::PAGE_TOKEN', 
--    '"user_id"': 'crate::core::query_params::QueryParams::USER_ID',
--    '"user_id_type"': 'crate::core::query_params::QueryParams::USER_ID_TYPE',
--    '"department_id"': 'crate::core::query_params::QueryParams::DEPARTMENT_ID',
--    '"department_id_type"': 'crate::core::query_params::QueryParams::DEPARTMENT_ID_TYPE',
--    '"start_time"': 'crate::core::query_params::QueryParams::START_TIME',
--    '"end_time"': 'crate::core::query_params::QueryParams::END_TIME',
--    '"file_type"': 'crate::core::query_params::QueryParams::FILE_TYPE',
--    '"chat_id"': 'crate::core::query_params::QueryParams::CHAT_ID',
--    '"message_id"': 'crate::core::query_params::QueryParams::MESSAGE_ID',
--}
--
--def should_add_import(file_content):
--    """检查是否需要添加 QueryParams 导入"""
--    return 'use crate::core::query_params::QueryParams' not in file_content
--
--def add_import_if_needed(file_path, content):
--    """如果需要且文件被修改，添加 QueryParams 导入"""
--    if should_add_import(content):
--        # 查找合适的导入位置
--        lines = content.split('\n')
--        import_line = 'use crate::core::query_params::QueryParams;'
--        
--        # 找到最后一个 use crate::core 导入语句的位置
--        insert_index = 0
--        for i, line in enumerate(lines):
--            if line.strip().startswith('use crate::core::'):
--                insert_index = i + 1
--        
--        # 如果没找到 core 导入，找其他 use 语句
--        if insert_index == 0:
--            for i, line in enumerate(lines):
--                if line.strip().startswith('use '):
--                    insert_index = i + 1
--        
--        lines.insert(insert_index, import_line)
--        return '\n'.join(lines)
--    
--    return content
--
--def process_file(file_path):
--    """处理单个文件"""
--    try:
--        with open(file_path, 'r', encoding='utf-8') as f:
--            content = f.read()
--        
--        original_content = content
--        modified = False
--        
--        # 替换查询参数常量
--        for old_param, new_const in PARAM_CONSTANTS.items():
--            pattern = f'\.insert\({re.escape(old_param)}, '
--            replacement = f'.insert({new_const}, '
--            if re.search(pattern, content):
--                content = re.sub(pattern, replacement, content)
--                modified = True
--        
--        # 如果文件被修改，添加必要的导入
--        if modified:
--            content = add_import_if_needed(file_path, content)
--            
--            with open(file_path, 'w', encoding='utf-8') as f:
--                f.write(content)
--            
--            print(f"已处理: {file_path}")
--    
--    except Exception as e:
--        print(f"处理 {file_path} 时出错: {e}")
--
--def main():
--    # 遍历 src 目录下所有 .rs 文件
--    for root, dirs, files in os.walk('src'):
--        for file in files:
--            if file.endswith('.rs'):
--                file_path = os.path.join(root, file)
--                process_file(file_path)
--
--if __name__ == "__main__":
--    main()
--EOF
--
--# 运行 Python 脚本（但这里我们先跳过，因为可能会导致编译问题）
--# python3 /tmp/replace_with_constants.py
--
--echo "第二阶段跳过，避免复杂的导入问题。"
--
--# 3. 修复 request_executor 中的类型问题
--echo "第三阶段：修复 request_executor.rs..."
--
--# 这个需要手动修复，因为涉及参数类型更改
--
--echo "修复完成！开始编译测试..."
--
--# 测试编译
--if cargo check --quiet; then
--    echo "✅ 编译成功！"
--    echo "修复的文件数量："
--    git diff --name-only | wc -l
--else
--    echo "❌ 还有编译错误，需要手动修复剩余问题"
--    echo "查看错误详情："
--    cargo check
--fi
--
--echo "脚本执行完成。如果还有错误，请手动检查剩余的 .to_string() 调用。"
-\ No newline at end of file
-diff --git a/fix_remaining_errors.py b/fix_remaining_errors.py
-deleted file mode 100644
-index 18b0995..0000000
---- a/fix_remaining_errors.py
-+++ /dev/null
-@@ -1,123 +0,0 @@
--#!/usr/bin/env python3
--
--import os
--import re
--import glob
--
--def fix_import_errors(file_path):
--    """修复导入错误"""
--    with open(file_path, 'r', encoding='utf-8') as f:
--        content = f.read()
--    
--    # 修复错误的导入结构：api_resp:{..., endpoints::Endpoints,}
--    content = re.sub(
--        r'api_resp:\{([^}]*),\s*endpoints::Endpoints,([^}]*)\}',
--        r'api_resp:{\1\2}, endpoints::Endpoints',
--        content
--    )
--    
--    # 修复另一种错误格式
--    content = re.sub(
--        r'api_resp:\{([^}]*)\s*endpoints::Endpoints,([^}]*)\}',
--        r'api_resp:{\1\2}, endpoints::Endpoints',
--        content
--    )
--    
--    return content
--
--def fix_constant_names(file_path):
--    """修复错误的常量名称"""
--    with open(file_path, 'r', encoding='utf-8') as f:
--        content = f.read()
--    
--    # 修复v2常量名称
--    content = re.sub(
--        r'Endpoints::SHEETS_V\.replace\([^,]+,\s*&2_([A-Z_]+)\)',
--        r'Endpoints::SHEETS_V2_\1',
--        content
--    )
--    
--    # 修复v3常量名称
--    content = re.sub(
--        r'Endpoints::SHEETS_V\.replace\([^,]+,\s*&3_([A-Z_]+)\)',
--        r'Endpoints::SHEETS_V3_\1',
--        content
--    )
--    
--    # 修复其他格式的错误
--    patterns = [
--        (r'&2_SPREADSHEET_VALUES_APPEND', 'Endpoints::SHEETS_V2_SPREADSHEET_VALUES_APPEND'),
--        (r'&3_SPREADSHEET_VALUES_APPEND', 'Endpoints::SHEETS_V3_SPREADSHEET_VALUES_APPEND'),
--        (r'&2_SPREADSHEET_VALUES', 'Endpoints::SHEETS_V2_SPREADSHEET_VALUES'),
--        (r'&3_SPREADSHEET_VALUES', 'Endpoints::SHEETS_V3_SPREADSHEET_VALUES'),
--        (r'&2_SPREADSHEET_MERGE_CELLS', 'Endpoints::SHEETS_V2_SPREADSHEET_MERGE_CELLS'),
--        (r'&3_SPREADSHEET_MERGE_CELLS', 'Endpoints::SHEETS_V3_SPREADSHEET_MERGE_CELLS'),
--        (r'&2_SPREADSHEET_UNMERGE_CELLS', 'Endpoints::SHEETS_V2_SPREADSHEET_UNMERGE_CELLS'),
--        (r'&3_SPREADSHEET_UNMERGE_CELLS', 'Endpoints::SHEETS_V3_SPREADSHEET_UNMERGE_CELLS'),
--        (r'&2_SPREADSHEET_STYLES_BATCH_UPDATE', 'Endpoints::SHEETS_V2_SPREADSHEET_STYLES_BATCH_UPDATE'),
--        (r'&3_SPREADSHEET_STYLES_BATCH_UPDATE', 'Endpoints::SHEETS_V3_SPREADSHEET_STYLES_BATCH_UPDATE'),
--        (r'&2_SPREADSHEET_STYLES_UPDATE', 'Endpoints::SHEETS_V2_SPREADSHEET_STYLES_UPDATE'),
--        (r'&3_SPREADSHEET_STYLES_UPDATE', 'Endpoints::SHEETS_V3_SPREADSHEET_STYLES_UPDATE'),
--        (r'&2_SPREADSHEET_FIND', 'Endpoints::SHEETS_V2_SPREADSHEET_FIND'),
--        (r'&3_SPREADSHEET_FIND', 'Endpoints::SHEETS_V3_SPREADSHEET_FIND'),
--        (r'&2_SPREADSHEET_REPLACE', 'Endpoints::SHEETS_V2_SPREADSHEET_REPLACE'),
--        (r'&3_SPREADSHEET_REPLACE', 'Endpoints::SHEETS_V3_SPREADSHEET_REPLACE'),
--        (r'&3_SPREADSHEET_CONDITION_FORMAT', 'Endpoints::SHEETS_V3_SPREADSHEET_CONDITION_FORMAT'),
--        (r'&3_SPREADSHEET_DATA_VALIDATION', 'Endpoints::SHEETS_V3_SPREADSHEET_DATA_VALIDATION'),
--        (r'&3_SPREADSHEET_FILTER', 'Endpoints::SHEETS_V3_SPREADSHEET_FILTER'),
--        (r'&3_SPREADSHEET_FLOAT_IMAGE', 'Endpoints::SHEETS_V3_SPREADSHEET_FLOAT_IMAGE'),
--        (r'&3_SPREADSHEET_SHEET', 'Endpoints::SHEETS_V3_SPREADSHEET_SHEET'),
--        (r'&3_SPREADSHEET_PROTECT_RANGE', 'Endpoints::SHEETS_V3_SPREADSHEET_PROTECT_RANGE'),
--        (r'&3_SPREADSHEET_GET', 'Endpoints::SHEETS_V3_SPREADSHEET_GET'),
--        (r'&2_SPREADSHEET_GET', 'Endpoints::SHEETS_V2_SPREADSHEET_GET'),
--    ]
--    
--    for pattern, replacement in patterns:
--        content = re.sub(pattern, replacement, content)
--    
--    return content
--
--def process_file(file_path):
--    """处理单个文件"""
--    try:
--        print(f"处理文件: {file_path}")
--        
--        # 修复导入错误
--        content = fix_import_errors(file_path)
--        
--        # 修复常量名称
--        content = fix_constant_names(file_path)
--        
--        # 写回文件
--        with open(file_path, 'w', encoding='utf-8') as f:
--            f.write(content)
--            
--        print(f"✓ 完成: {file_path}")
--        
--    except Exception as e:
--        print(f"✗ 错误处理 {file_path}: {e}")
--
--def main():
--    """主函数"""
--    print("修复剩余的导入和语法错误...")
--    
--    # 获取所有sheets模块的Rust文件
--    patterns = [
--        'src/service/cloud_docs/sheets/v2/**/*.rs',
--        'src/service/cloud_docs/sheets/v3/**/*.rs'
--    ]
--    
--    files = []
--    for pattern in patterns:
--        files.extend(glob.glob(pattern, recursive=True))
--    
--    print(f"找到 {len(files)} 个文件")
--    
--    for file_path in files:
--        if os.path.isfile(file_path):
--            process_file(file_path)
--    
--    print("修复完成!")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/fix_remaining_params.py b/fix_remaining_params.py
-deleted file mode 100644
-index 4d94891..0000000
---- a/fix_remaining_params.py
-+++ /dev/null
-@@ -1,92 +0,0 @@
--#!/usr/bin/env python3
--"""
--批量修复查询参数键中剩余的.to_string()调用
--"""
--
--import os
--import re
--import subprocess
--
--# 常见的查询参数名称，需要移除.to_string()
--QUERY_PARAMS = [
--    "access_type", "activation_status", "activity_status", "app_id", "approval_code",
--    "approval_id", "apps_type", "archive_time", "batch_id", "biz_entity_id", "biz_type",
--    "category_id", "chat_id", "create_time_end", "create_time_start", "created_by_type",
--    "custom_workplace_id", "department_id", "department_id_type", "doc_id", "employee_id", 
--    "end_date", "end_time", "field_names", "file_id", "file_name", "file_type", "folder_id",
--    "grant_type", "group_id", "image_type", "include_members", "instance_code", 
--    "instance_status", "job_id", "keyword", "language", "limit", "locale", "max_results",
--    "meeting_id", "message_id", "msg_type", "name", "offset", "order", "page",
--    "page_size", "page_token", "receive_id_type", "recording_id", "room_id", "rule_type",
--    "scope", "sort", "start_date", "start_time", "status", "task_status", "title",
--    "type", "update_time_end", "update_time_start", "user_id", "user_id_type", "widget_id",
--    # 新增更多参数
--    "container_id", "container_id_type", "with_user_id", "direction", "text_type",
--    "space_id", "node_type", "view_type", "table_id", "record_id", "with_shared_url",
--    "with_revision", "export_type", "token", "range", "valueInputOption", "majorDimension",
--    "dimension", "render_type", "dateTimeRenderOption", "user_id_format", "spreadsheetToken",
--    "includeGridData", "fields", "filter", "interval", "unique", "search_key", "format",
--    # 更多参数补充
--    "relation", "is_delete", "only_avatar", "parent_type", "parent_id", "need_url",
--    "thumb_size", "extra", "version", "mode", "size", "preview_type", "check_preview_permission",
--    "width", "height", "count", "level", "entity_type", "classification_filter", "highlight",
--    "lang", "repo_id", "owner_ids", "user_access_token", "direction", "sort_type", "ownership",
--    "drive_type"
--]
--
--def fix_file(file_path):
--    """修复单个文件中的查询参数"""
--    try:
--        with open(file_path, 'r', encoding='utf-8') as f:
--            content = f.read()
--        
--        original_content = content
--        
--        # 修复每个查询参数的.to_string()调用
--        for param in QUERY_PARAMS:
--            # 匹配模式：.insert("param_name".to_string(), value)
--            pattern = rf'\.insert\("{re.escape(param)}"\.to_string\(\)'
--            replacement = f'.insert("{param}"'
--            content = re.sub(pattern, replacement, content)
--        
--        # 如果内容有变化，写回文件
--        if content != original_content:
--            with open(file_path, 'w', encoding='utf-8') as f:
--                f.write(content)
--            print(f"修复: {file_path}")
--            return True
--    
--    except Exception as e:
--        print(f"处理 {file_path} 时出错: {e}")
--        return False
--    
--    return False
--
--def main():
--    """主函数"""
--    fixed_files = 0
--    
--    # 遍历src目录下的所有.rs文件
--    for root, dirs, files in os.walk('src'):
--        for file in files:
--            if file.endswith('.rs'):
--                file_path = os.path.join(root, file)
--                if fix_file(file_path):
--                    fixed_files += 1
--    
--    print(f"\n共修复了 {fixed_files} 个文件")
--    
--    # 测试编译
--    print("\n开始测试编译...")
--    result = subprocess.run(['cargo', 'check'], capture_output=True, text=True)
--    
--    if result.returncode == 0:
--        print("✅ 编译成功！")
--    else:
--        print("❌ 还有编译错误:")
--        # 只显示前20行错误
--        error_lines = result.stderr.split('\n')[:20]
--        print('\n'.join(error_lines))
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/fix_specific_files.py b/fix_specific_files.py
-deleted file mode 100644
-index 592b240..0000000
---- a/fix_specific_files.py
-+++ /dev/null
-@@ -1,103 +0,0 @@
--#!/usr/bin/env python3
--
--import os
--
--# 需要修复的文件列表
--files_to_fix = [
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/delete_dimension_range.rs",
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/insert_dimension_range.rs", 
--    "src/service/cloud_docs/sheets/v2/sheet_row_col/update_dimension_range.rs",
--    "src/service/cloud_docs/sheets/v2/spreadsheet_sheet/operate_sheets.rs",
--    "src/service/cloud_docs/sheets/v3/condition_format/create.rs",
--    "src/service/cloud_docs/sheets/v3/condition_format/delete.rs",
--    "src/service/cloud_docs/sheets/v3/condition_format/get.rs", 
--    "src/service/cloud_docs/sheets/v3/condition_format/update.rs",
--    "src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs",
--    "src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs",
--    "src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs",
--    "src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs",
--    "src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs",
--    "src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs",
--    "src/service/cloud_docs/sheets/v3/data_validation/create.rs",
--    "src/service/cloud_docs/sheets/v3/data_validation/delete.rs",
--    "src/service/cloud_docs/sheets/v3/data_validation/query.rs",
--    "src/service/cloud_docs/sheets/v3/data_validation/update.rs",
--    "src/service/cloud_docs/sheets/v3/float_image/create.rs",
--    "src/service/cloud_docs/sheets/v3/float_image/delete.rs",
--    "src/service/cloud_docs/sheets/v3/float_image/get.rs",
--    "src/service/cloud_docs/sheets/v3/float_image/patch.rs",
--    "src/service/cloud_docs/sheets/v3/float_image/query.rs"
--]
--
--def fix_import_in_file(file_path):
--    """修复单个文件的导入错误"""
--    try:
--        with open(file_path, 'r', encoding='utf-8') as f:
--            content = f.read()
--        
--        # 查找并修复错误的导入模式
--        # 模式1: api_resp::{...endpoints::Endpoints,...}
--        if 'api_resp:' in content and 'endpoints::Endpoints,' in content:
--            lines = content.split('\n')
--            
--            for i, line in enumerate(lines):
--                if 'api_resp:' in line and 'endpoints::Endpoints,' in lines[i+1]:
--                    # 找到错误的导入结构，修复它
--                    api_resp_line = line
--                    endpoints_line = lines[i+1]
--                    
--                    # 从api_resp行中提取其他导入
--                    if api_resp_line.strip().endswith('{'):
--                        # api_resp:{
--                        # endpoints::Endpoints,
--                        # ...
--                        # }
--                        j = i + 2
--                        imports = []
--                        while j < len(lines) and not lines[j].strip().startswith('}'):
--                            import_line = lines[j].strip()
--                            if import_line and not import_line.startswith('endpoints'):
--                                imports.append(import_line)
--                            j += 1
--                        
--                        # 重构导入
--                        if imports:
--                            lines[i] = api_resp_line.replace('{', f'{{{", ".join(imports)}}},')
--                        else:
--                            lines[i] = line.replace('api_resp:', 'api_resp::BaseResponse,')
--                        
--                        lines[i+1] = '        endpoints::Endpoints,'
--                        
--                        # 删除多余的行
--                        del lines[i+2:j+1]
--                        break
--            
--            content = '\n'.join(lines)
--        
--        with open(file_path, 'w', encoding='utf-8') as f:
--            f.write(content)
--        
--        print(f"✓ 修复: {file_path}")
--        return True
--        
--    except Exception as e:
--        print(f"✗ 错误: {file_path}: {e}")
--        return False
--
--def main():
--    """主函数"""
--    print("修复特定文件的导入错误...")
--    
--    fixed_count = 0
--    
--    for file_path in files_to_fix:
--        if os.path.exists(file_path):
--            if fix_import_in_file(file_path):
--                fixed_count += 1
--        else:
--            print(f"- 文件不存在: {file_path}")
--    
--    print(f"修复完成! 共修复 {fixed_count} 个文件")
--
--if __name__ == "__main__":
--    main()
-\ No newline at end of file
-diff --git a/remove_duplicate_endpoints.py b/remove_duplicate_endpoints.py
-deleted file mode 100644
-index 4320fd5..0000000
---- a/remove_duplicate_endpoints.py
-+++ /dev/null
-@@ -1,87 +0,0 @@
--#!/usr/bin/env python3
--import os
--import re
--import subprocess
--
--def find_files_with_duplicate_endpoints():
--    """Find files with duplicate Endpoints imports"""
--    files = []
--    cmd = '''find /Users/zool/RustroverProjects/open-lark/src/service/cloud_docs/sheets -name "*.rs" -exec grep -l "endpoints::Endpoints" {} \\;'''
--    result = subprocess.run(cmd, shell=True, capture_output=True, text=True)
--    
--    for file_path in result.stdout.strip().split('\n'):
--        if file_path:
--            # Count occurrences
--            count_cmd = f'grep -c "endpoints::Endpoints" "{file_path}"'
--            count_result = subprocess.run(count_cmd, shell=True, capture_output=True, text=True)
--            if count_result.stdout.strip() != "1":
--                files.append(file_path)
--    
--    return files
--
--def remove_duplicate_endpoints(file_path):
--    """Remove duplicate Endpoints imports"""
--    try:
--        with open(file_path, 'r') as f:
--            content = f.read()
--        
--        # Find the first occurrence of endpoints::Endpoints in core imports
--        in_core_imports = False
--        first_endpoints_found = False
--        lines = content.split('\n')
--        new_lines = []
--        
--        for line in lines:
--            # Check if we're in the core imports section
--            if 'core::{' in line:
--                in_core_imports = True
--            elif in_core_imports and '},' in line and 'core' not in line:
--                in_core_imports = False
--            
--            # If this line contains endpoints::Endpoints
--            if 'endpoints::Endpoints' in line:
--                if in_core_imports and not first_endpoints_found:
--                    # Keep the first one in core imports
--                    first_endpoints_found = True
--                    new_lines.append(line)
--                elif not in_core_imports:
--                    # Skip standalone imports
--                    print(f"  Removing duplicate import: {line.strip()}")
--                    continue
--                else:
--                    # Skip additional ones in core imports
--                    print(f"  Removing duplicate core import: {line.strip()}")
--                    continue
--            else:
--                new_lines.append(line)
--        
--        new_content = '\n'.join(new_lines)
--        
--        if new_content != content:
--            with open(file_path, 'w') as f:
--                f.write(new_content)
--            
--            print(f"  Fixed duplicate imports: {file_path}")
--            return True
--        else:
--            print(f"  No changes needed: {file_path}")
--            return False
--    
--    except Exception as e:
--        print(f"  Error processing {file_path}: {e}")
--        return False
--
--def main():
--    files = find_files_with_duplicate_endpoints()
--    
--    print(f"Found {len(files)} files with duplicate Endpoints imports")
--    
--    success_count = 0
--    for file_path in files:
--        if remove_duplicate_endpoints(file_path):
--            success_count += 1
--    
--    print(f"\nSuccessfully fixed {success_count} files")
--
--if __name__ == '__main__':
--    main()
-\ No newline at end of file
-diff --git a/src/core/endpoints.rs b/src/core/endpoints.rs
-index e262650..90ce035 100644
---- a/src/core/endpoints.rs
-+++ b/src/core/endpoints.rs
-@@ -49,13 +49,238 @@ impl Endpoints {
-         "/open-apis/workplace/v1/custom_workplace_widget_access_data/search";
- 
-     // ==================== 招聘相关端点 ====================
-+
-+    // ===== 候选人管理端点 =====
-+
-+    /// 申请管理
-+    pub const HIRE_V1_APPLICATIONS: &'static str = "/open-apis/hire/v1/applications";
-+    pub const HIRE_V1_APPLICATION_GET: &'static str =
-+        "/open-apis/hire/v1/applications/{application_id}";
-+    pub const HIRE_V1_APPLICATION_REJECT: &'static str =
-+        "/open-apis/hire/v1/applications/{application_id}/reject";
-+    pub const HIRE_V1_APPLICATION_INTERVIEWS: &'static str =
-+        "/open-apis/hire/v1/applications/{application_id}/interviews";
-+    pub const HIRE_V1_APPLICATION_OFFER: &'static str =
-+        "/open-apis/hire/v1/applications/{application_id}/offer";
-+    pub const HIRE_V1_APPLICATION_ADVANCE: &'static str =
-+        "/open-apis/hire/v1/applications/{application_id}/advance";
-+    pub const HIRE_V1_APPLICATION_EVALUATIONS: &'static str =
-+        "/open-apis/hire/v1/applications/{application_id}/evaluations";
-+
-+    /// 面试管理
-+    pub const HIRE_V1_INTERVIEWS: &'static str = "/open-apis/hire/v1/interviews";
-+    pub const HIRE_V1_INTERVIEW_GET: &'static str = "/open-apis/hire/v1/interviews/{interview_id}";
-+    pub const HIRE_V1_INTERVIEW_CANCEL: &'static str =
-+        "/open-apis/hire/v1/interviews/{interview_id}/cancel";
-+    pub const HIRE_V1_INTERVIEW_RESCHEDULE: &'static str =
-+        "/open-apis/hire/v1/interviews/{interview_id}/reschedule";
-+    pub const HIRE_V1_INTERVIEW_EVALUATIONS: &'static str =
-+        "/open-apis/hire/v1/interview_evaluations";
-+    pub const HIRE_V1_INTERVIEW_EVALUATIONS_BY_ID: &'static str =
-+        "/open-apis/hire/v1/interviews/{interview_id}/evaluations";
-+    pub const HIRE_V1_INTERVIEW_ARRANGEMENTS: &'static str =
-+        "/open-apis/hire/v1/interview_arrangements";
-+
-+    /// Offer 管理
-+    pub const HIRE_V1_OFFERS: &'static str = "/open-apis/hire/v1/offers";
-+    pub const HIRE_V1_OFFER_GET: &'static str = "/open-apis/hire/v1/offers/{offer_id}";
-+    pub const HIRE_V1_OFFER_SEND: &'static str = "/open-apis/hire/v1/offers/{offer_id}/send";
-+    pub const HIRE_V1_OFFER_WITHDRAW: &'static str =
-+        "/open-apis/hire/v1/offers/{offer_id}/withdraw";
-+
-+    /// 人才管理
-+    pub const HIRE_V1_TALENTS: &'static str = "/open-apis/hire/v1/talents";
-+    pub const HIRE_V1_TALENT_GET: &'static str = "/open-apis/hire/v1/talents/{talent_id}";
-+    pub const HIRE_V1_TALENT_APPLICATIONS: &'static str =
-+        "/open-apis/hire/v1/talents/{talent_id}/applications";
-+    pub const HIRE_V1_TALENTS_BATCH_IMPORT: &'static str =
-+        "/open-apis/hire/v1/talents/batch_import";
-+
-+    /// 人才库管理
-+    pub const HIRE_V1_TALENT_POOLS: &'static str = "/open-apis/hire/v1/talent_pools";
-+    pub const HIRE_V1_TALENT_POOL_GET: &'static str = "/open-apis/hire/v1/talent_pools/{pool_id}";
-+    pub const HIRE_V1_TALENT_POOL_TALENTS: &'static str =
-+        "/open-apis/hire/v1/talent_pools/{pool_id}/talents";
-+    pub const HIRE_V1_TALENT_POOL_TALENT_GET: &'static str =
-+        "/open-apis/hire/v1/talent_pools/{pool_id}/talents/{talent_id}";
-+
-+    // ===== 招聘配置端点 =====
-+
-+    /// 职位管理
-+    pub const HIRE_V1_JOBS: &'static str = "/open-apis/hire/v1/jobs";
-+    pub const HIRE_V1_JOB_COMBINED_CREATE: &'static str = "/open-apis/hire/v1/jobs/combined_create";
-+    pub const HIRE_V1_JOB_COMBINED_UPDATE: &'static str =
-+        "/open-apis/hire/v1/jobs/{job_id}/combined_update";
-+    pub const HIRE_V1_JOB_GET_DETAIL: &'static str = "/open-apis/hire/v1/jobs/{job_id}/get_detail";
-+    pub const HIRE_V1_JOB_CLOSE: &'static str = "/open-apis/hire/v1/jobs/{job_id}/close";
-+    pub const HIRE_V1_JOB_OPEN: &'static str = "/open-apis/hire/v1/jobs/{job_id}/open";
-+
-+    /// 招聘流程
-+    pub const HIRE_V1_JOB_PROCESSES: &'static str = "/open-apis/hire/v1/job_processes";
-+    pub const HIRE_V1_JOB_PROCESS_GET: &'static str =
-+        "/open-apis/hire/v1/job_processes/{process_id}";
-+
-+    /// 地点管理
-+    pub const HIRE_V1_LOCATIONS: &'static str = "/open-apis/hire/v1/locations";
-+    pub const HIRE_V1_LOCATIONS_QUERY: &'static str = "/open-apis/hire/v1/locations/query";
-+
-+    /// Offer 设置
-+    pub const HIRE_V1_OFFER_SETTINGS: &'static str = "/open-apis/hire/v1/offer_settings";
-+    pub const HIRE_V1_OFFER_SETTING_GET: &'static str =
-+        "/open-apis/hire/v1/offer_settings/{settings_id}";
-+
-+    /// 科目管理
-+    pub const HIRE_V1_SUBJECTS: &'static str = "/open-apis/hire/v1/subjects";
-+    pub const HIRE_V1_SUBJECT_GET: &'static str = "/open-apis/hire/v1/subjects/{subject_id}";
-+    pub const HIRE_V1_SUBJECT_ENABLE: &'static str =
-+        "/open-apis/hire/v1/subjects/{subject_id}/enable";
-+    pub const HIRE_V1_SUBJECT_DISABLE: &'static str =
-+        "/open-apis/hire/v1/subjects/{subject_id}/disable";
-+
-+    /// 职位要求
-+    pub const HIRE_V1_JOB_REQUIREMENTS: &'static str = "/open-apis/hire/v1/job_requirements";
-+    pub const HIRE_V1_JOB_REQUIREMENT_GET: &'static str =
-+        "/open-apis/hire/v1/job_requirements/{requirement_id}";
-+
-+    /// 权限管理
-+    pub const HIRE_V1_ROLES: &'static str = "/open-apis/hire/v1/roles";
-+    pub const HIRE_V1_ROLE_GET: &'static str = "/open-apis/hire/v1/roles/{role_id}";
-+    pub const HIRE_V1_USER_ROLES: &'static str = "/open-apis/hire/v1/users/{user_id}/roles";
-+
-+    /// 面试设置
-+    pub const HIRE_V1_INTERVIEW_SETTINGS: &'static str = "/open-apis/hire/v1/interview_settings";
-+    pub const HIRE_V1_INTERVIEW_SETTING_GET: &'static str =
-+        "/open-apis/hire/v1/interview_settings/{settings_id}";
-+
-+    /// 应用配置
-+    pub const HIRE_V1_TALENT_TAGS: &'static str = "/open-apis/hire/v1/talent_tags";
-+    pub const HIRE_V1_REGISTRATION_FORMS: &'static str = "/open-apis/hire/v1/registration_forms";
-+
-+    // ===== 获取候选人端点 =====
-+
-+    /// 代理渠道
-+    pub const HIRE_V1_AGENCIES: &'static str = "/open-apis/hire/v1/agencies";
-+    pub const HIRE_V1_AGENCY_CONSULTANTS: &'static str = "/open-apis/hire/v1/agency_consultants";
-+    pub const HIRE_V1_AGENCY_CONSULTANTS_BY_ID: &'static str =
-+        "/open-apis/hire/v1/agencies/{agency_id}/consultants";
-+    pub const HIRE_V1_AGENCY_RECOMMENDATIONS: &'static str =
-+        "/open-apis/hire/v1/agency_recommendations";
-+
-+    /// 外部系统
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS: &'static str = "/open-apis/hire/v1/external_systems";
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS_SYNC_TASKS: &'static str =
-+        "/open-apis/hire/v1/external_systems/sync_tasks";
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS_SYNC_RECORDS: &'static str =
-+        "/open-apis/hire/v1/external_systems/sync_records";
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS_CANDIDATES_IMPORT: &'static str =
-+        "/open-apis/hire/v1/external_systems/candidates/import";
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS_CANDIDATES: &'static str =
-+        "/open-apis/hire/v1/external_systems/candidates";
-+
-+    /// 内推渠道
-+    pub const HIRE_V1_REFERRALS: &'static str = "/open-apis/hire/v1/referrals";
-+    pub const HIRE_V1_REFERRAL_GET: &'static str = "/open-apis/hire/v1/referrals/{referral_id}";
-+    pub const HIRE_V1_REFERRAL_GRANT_REWARD: &'static str =
-+        "/open-apis/hire/v1/referrals/{referral_id}/grant_reward";
-+    pub const HIRE_V1_REFERRAL_REWARD_SETTINGS: &'static str =
-+        "/open-apis/hire/v1/referral_reward_settings";
-+
-     /// 内推账户相关端点
--    pub const HIRE_REFERRAL_ACCOUNTS: &'static str = "/open-apis/hire/v1/referral_accounts";
-+    pub const HIRE_V1_REFERRAL_ACCOUNTS: &'static str = "/open-apis/hire/v1/referral_accounts";
-+    pub const HIRE_V1_REFERRAL_ACCOUNT_GET: &'static str =
-+        "/open-apis/hire/v1/referral_accounts/{user_id}";
-+    pub const HIRE_REFERRAL_ACCOUNT_BALANCE: &'static str =
-+        "/open-apis/hire/v1/referral_accounts/{user_id}/balance";
-+    pub const HIRE_REFERRAL_ACCOUNT_ENABLE: &'static str =
-+        "/open-apis/hire/v1/referral_accounts/{user_id}/enable";
-+    pub const HIRE_REFERRAL_ACCOUNT_DISABLE: &'static str =
-+        "/open-apis/hire/v1/referral_accounts/{user_id}/disable";
-     pub const HIRE_REFERRAL_INCOME_RECORDS: &'static str =
-         "/open-apis/hire/v1/referral_income_records";
-     pub const HIRE_REFERRAL_WITHDRAWALS: &'static str = "/open-apis/hire/v1/referral_withdrawals";
-+    pub const HIRE_REFERRAL_WITHDRAWAL_APPROVE: &'static str =
-+        "/open-apis/hire/v1/referral_withdrawals/{withdrawal_id}/approve";
-     pub const HIRE_REFERRAL_STATISTICS: &'static str = "/open-apis/hire/v1/referral_statistics";
- 
-+    /// 网站渠道
-+    pub const HIRE_V1_WEBSITE_JOBS: &'static str = "/open-apis/hire/v1/website/jobs";
-+    pub const HIRE_V1_WEBSITE_JOBS_PUBLISH: &'static str =
-+        "/open-apis/hire/v1/website/jobs/publish";
-+    pub const HIRE_V1_WEBSITE_JOB_UNPUBLISH: &'static str =
-+        "/open-apis/hire/v1/website/jobs/{job_id}/unpublish";
-+    pub const HIRE_V1_WEBSITE_APPLICATIONS: &'static str =
-+        "/open-apis/hire/v1/website/applications";
-+    pub const HIRE_V1_WEBSITE_CONFIGURATION: &'static str =
-+        "/open-apis/hire/v1/website/configuration";
-+    pub const HIRE_V1_WEBSITE_STATISTICS: &'static str = "/open-apis/hire/v1/website/statistics";
-+    pub const HIRE_V1_WEBSITE_APPLICATION_CONVERT: &'static str =
-+        "/open-apis/hire/v1/website/applications/{website_application_id}/convert";
-+
-+    // ===== 生态对接端点 =====
-+
-+    /// 背景调查
-+    pub const HIRE_V1_BACKGROUND_CHECK_PACKAGES: &'static str =
-+        "/open-apis/hire/v1/background_check_packages";
-+    pub const HIRE_V1_BACKGROUND_CHECK_ORDERS: &'static str =
-+        "/open-apis/hire/v1/background_check_orders";
-+    pub const HIRE_V1_BACKGROUND_CHECK_ORDER_GET: &'static str =
-+        "/open-apis/hire/v1/background_check_orders/{order_id}";
-+    pub const HIRE_V1_BACKGROUND_CHECK_ORDER_CANCEL: &'static str =
-+        "/open-apis/hire/v1/background_check_orders/{order_id}/cancel";
-+    pub const HIRE_V1_BACKGROUND_CHECK_ORDER_REPORT: &'static str =
-+        "/open-apis/hire/v1/background_check_orders/{order_id}/report";
-+    pub const HIRE_V1_BACKGROUND_CHECK_ORDERS_BATCH: &'static str =
-+        "/open-apis/hire/v1/background_check_orders/batch";
-+
-+    /// 考试管理
-+    pub const HIRE_V1_EXAM_PAPERS: &'static str = "/open-apis/hire/v1/exam_papers";
-+    pub const HIRE_V1_EXAM_ARRANGEMENTS: &'static str = "/open-apis/hire/v1/exam_arrangements";
-+    pub const HIRE_V1_EXAM_RECORDS: &'static str = "/open-apis/hire/v1/exam_records";
-+    pub const HIRE_V1_EXAM_RECORD_GET: &'static str = "/open-apis/hire/v1/exam_records/{record_id}";
-+    pub const HIRE_V1_EXAM_RECORD_CANCEL: &'static str =
-+        "/open-apis/hire/v1/exam_records/{record_id}/cancel";
-+    pub const HIRE_V1_EXAM_RECORD_RESCHEDULE: &'static str =
-+        "/open-apis/hire/v1/exam_records/{record_id}/reschedule";
-+    pub const HIRE_V1_EXAM_SUBMISSIONS: &'static str = "/open-apis/hire/v1/exam_submissions";
-+    pub const HIRE_V1_EXAM_STATISTICS: &'static str = "/open-apis/hire/v1/exam_statistics";
-+
-+    // ===== 其他模块端点 =====
-+
-+    /// 附件管理
-+    pub const HIRE_V1_ATTACHMENTS: &'static str = "/open-apis/hire/v1/attachments";
-+    pub const HIRE_V1_ATTACHMENT_GET: &'static str =
-+        "/open-apis/hire/v1/attachments/{attachment_id}";
-+    pub const HIRE_V1_ATTACHMENT_UPLOAD: &'static str = "/open-apis/hire/v1/attachments/upload";
-+    pub const HIRE_V1_ATTACHMENT_DOWNLOAD: &'static str =
-+        "/open-apis/hire/v1/attachments/{attachment_id}/download";
-+    pub const HIRE_V1_ATTACHMENT_PREVIEW: &'static str =
-+        "/open-apis/hire/v1/attachments/{attachment_id}/preview";
-+    pub const HIRE_V1_ATTACHMENTS_BATCH_DOWNLOAD: &'static str =
-+        "/open-apis/hire/v1/attachments/batch_download";
-+    pub const HIRE_V1_ATTACHMENTS_BATCH_DELETE: &'static str =
-+        "/open-apis/hire/v1/attachments/batch_delete";
-+    pub const HIRE_V1_ATTACHMENT_STATISTICS: &'static str =
-+        "/open-apis/hire/v1/attachment_statistics";
-+
-+    /// 入职管理
-+    pub const HIRE_V1_ONBOARDINGS: &'static str = "/open-apis/hire/v1/onboardings";
-+
-+    /// 获取入职进度详情 (需要使用 EndpointBuilder::replace_param 替换 {onboarding_id} 和 {progress_id})
-+    pub const HIRE_V1_ONBOARDING_PROGRESS: &'static str =
-+        "/open-apis/hire/v1/onboardings/{onboarding_id}/progress/{progress_id}";
-+
-+    // 动态路径常量 - 用于 agency, external_system, referral 等模块
-+    pub const HIRE_V1_AGENCIES_CONSULTANTS: &'static str =
-+        "/open-apis/hire/v1/agencies/{agency_id}/consultants";
-+    pub const HIRE_V1_AGENCY_RECOMMENDATION_CONFIRM: &'static str =
-+        "/open-apis/hire/v1/agency_recommendations/{recommendation_id}/confirm";
-+    pub const HIRE_V1_AGENCY_RECOMMENDATION_REJECT: &'static str =
-+        "/open-apis/hire/v1/agency_recommendations/{recommendation_id}/reject";
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS_CANDIDATES_CONVERT: &'static str =
-+        "/open-apis/hire/v1/external_systems/candidates/{external_candidate_id}/convert";
-+    pub const HIRE_V1_EXTERNAL_SYSTEMS_TEST_CONNECTION: &'static str =
-+        "/open-apis/hire/v1/external_systems/{system_config_id}/test_connection";
-+
-     /// 获取收藏的推荐规则
-     pub const WORKPLACE_APP_RECOMMEND_FAVOURITE: &'static str =
-         "/open-apis/workplace/v1/app_recommend_rule/favourite";
-@@ -184,6 +409,89 @@ impl Endpoints {
-     pub const IM_CHAT_REMOVE_MEMBERS: &'static str =
-         "/open-apis/im/v1/chats/{chat_id}/members/batch_delete";
- 
-+    // 回复消息
-+    /// 回复消息
-+    pub const IM_V1_REPLY_MESSAGE: &'static str = "/open-apis/im/v1/messages/{message_id}/reply";
-+
-+    // 消息表情回应
-+    /// 添加消息表情回应
-+    pub const IM_V1_MESSAGE_REACTIONS: &'static str = "/open-apis/im/v1/messages/{message_id}/reactions";
-+
-+    /// 删除消息表情回应
-+    pub const IM_V1_DELETE_MESSAGE_REACTION: &'static str = "/open-apis/im/v1/messages/{message_id}/reactions/{reaction_id}";
-+
-+    // 批量消息
-+    /// 批量发送消息
-+    pub const IM_V1_BATCH_MESSAGES: &'static str = "/open-apis/im/v1/batch_messages";
-+
-+    /// 批量撤回消息
-+    pub const IM_V1_DELETE_BATCH_MESSAGE: &'static str = "/open-apis/im/v1/batch_messages/{batch_message_id}";
-+
-+    /// 查询批量发送消息进度
-+    pub const IM_V1_BATCH_MESSAGE_PROGRESS: &'static str = "/open-apis/im/v1/batch_messages/{batch_message_id}/get_progress";
-+
-+    /// 查询批量发送消息已读状态
-+    pub const IM_V1_BATCH_MESSAGE_READ_USER: &'static str = "/open-apis/im/v1/batch_messages/{batch_message_id}/read_user";
-+
-+    // 紧急消息/消息加急
-+    /// 应用内加急
-+    pub const IM_V1_MESSAGE_URGENT_APP: &'static str = "/open-apis/im/v1/messages/{message_id}/urgent_app";
-+
-+    /// 短信加急
-+    pub const IM_V1_MESSAGE_URGENT_SMS: &'static str = "/open-apis/im/v1/messages/{message_id}/urgent_sms";
-+
-+    /// 电话加急
-+    pub const IM_V1_MESSAGE_URGENT_PHONE: &'static str = "/open-apis/im/v1/messages/{message_id}/urgent_phone";
-+
-+    // 延时更新卡片
-+    /// 延时更新卡片
-+    pub const IM_V1_MESSAGE_DELAY_UPDATE: &'static str = "/open-apis/im/v1/messages/{message_id}/delay_update";
-+
-+    // Pin 消息
-+    /// 创建Pin消息
-+    pub const IM_V1_PINS: &'static str = "/open-apis/im/v1/pins";
-+
-+    /// 删除Pin消息
-+    pub const IM_V1_DELETE_PIN: &'static str = "/open-apis/im/v1/pins/{pin_id}";
-+
-+    // 文件和图片
-+    /// 上传文件
-+    pub const IM_V1_FILES: &'static str = "/open-apis/im/v1/files";
-+
-+    /// 下载文件
-+    pub const IM_V1_DOWNLOAD_FILE: &'static str = "/open-apis/im/v1/files/{file_key}";
-+
-+    /// 上传图片
-+    pub const IM_V1_IMAGES: &'static str = "/open-apis/im/v1/images";
-+
-+    /// 下载图片
-+    pub const IM_V1_DOWNLOAD_IMAGE: &'static str = "/open-apis/im/v1/images/{image_key}";
-+
-+    // URL预览
-+    /// 批量更新消息URL预览
-+    pub const IM_V1_MESSAGE_URL_PREVIEW_BATCH_UPDATE: &'static str = "/open-apis/im/v1/messages/{message_id}/url_preview/batch_update";
-+
-+    // V2 API 端点
-+    // App feed card
-+    /// 应用信息流卡片
-+    pub const IM_V2_APP_FEED_CARD: &'static str = "/open-apis/im/v2/app_feed_card";
-+
-+    /// 获取应用信息流卡片
-+    pub const IM_V2_GET_APP_FEED_CARD: &'static str = "/open-apis/im/v2/app_feed_card/{card_id}";
-+
-+    /// 删除应用信息流卡片
-+    pub const IM_V2_DELETE_APP_FEED_CARD: &'static str = "/open-apis/im/v2/app_feed_card/{card_id}";
-+
-+    // Groups bots
-+    /// 群机器人时间敏感性设置
-+    pub const IM_V2_GROUPS_BOTS_TIME_SENSITIVE: &'static str = "/open-apis/im/v2/groups-bots/bot_time_sentive";
-+
-+    /// 更新群机器人消息
-+    pub const IM_V2_GROUPS_BOTS_UPDATE: &'static str = "/open-apis/im/v2/groups-bots/{message_id}/update";
-+
-+    /// 批量更新群机器人设置
-+    pub const IM_V2_GROUPS_BOTS_PATCH: &'static str = "/open-apis/im/v2/groups-bots/patch";
-+
-     // ==================== 云盘服务端点 ====================
- 
-     // 文件管理 - v1版本
-@@ -406,6 +714,169 @@ impl Endpoints {
-     /// 任务清单管理
-     pub const TASK_V2_TASKLISTS: &'static str = "/open-apis/task/v2/tasklists";
- 
-+    // 参数化端点常量
-+    /// 获取/更新/删除特定附件
-+    pub const TASK_V2_ATTACHMENT_GET: &'static str = "/open-apis/task/v2/attachments/{attachment_guid}";
-+
-+    /// 获取/更新/删除特定自定义字段
-+    pub const TASK_V2_CUSTOM_FIELD_GET: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}";
-+
-+    /// 添加自定义字段选项
-+    pub const TASK_V2_CUSTOM_FIELD_ADD: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/add";
-+
-+    /// 移除自定义字段选项
-+    pub const TASK_V2_CUSTOM_FIELD_REMOVE: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/remove";
-+
-+    /// 自定义字段选项管理
-+    pub const TASK_V2_CUSTOM_FIELD_OPTIONS: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/options";
-+
-+    /// 获取/更新/删除特定自定义字段选项
-+    pub const TASK_V2_CUSTOM_FIELD_OPTION_GET: &'static str = "/open-apis/task/v2/custom_fields/{custom_field_guid}/options/{option_guid}";
-+
-+    /// 获取/更新/删除特定分组
-+    pub const TASK_V2_SECTION_GET: &'static str = "/open-apis/task/v2/sections/{section_guid}";
-+
-+    /// 分组任务管理
-+    pub const TASK_V2_SECTION_TASKS: &'static str = "/open-apis/task/v2/sections/{section_guid}/tasks";
-+
-+    /// 获取/更新/删除特定任务清单
-+    pub const TASK_V2_TASKLIST_GET: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}";
-+
-+    /// 任务清单添加成员
-+    pub const TASK_V2_TASKLIST_ADD_MEMBERS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/add_members";
-+
-+    /// 任务清单移除成员
-+    pub const TASK_V2_TASKLIST_REMOVE_MEMBERS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/remove_members";
-+
-+    /// 任务清单任务管理
-+    pub const TASK_V2_TASKLIST_TASKS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/tasks";
-+
-+    /// 任务清单活动订阅
-+    pub const TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions";
-+
-+    /// 获取/更新/删除特定活动订阅
-+    pub const TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET: &'static str = "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions/{activity_subscription_guid}";
-+
-+    /// 获取/更新/删除特定任务
-+    pub const TASK_V2_TASK_GET: &'static str = "/open-apis/task/v2/tasks/{task_guid}";
-+
-+    /// 任务添加成员
-+    pub const TASK_V2_TASK_ADD_MEMBERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/add_members";
-+
-+    /// 任务移除成员
-+    pub const TASK_V2_TASK_REMOVE_MEMBERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/remove_members";
-+
-+    /// 任务添加提醒
-+    pub const TASK_V2_TASK_ADD_REMINDERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/add_reminders";
-+
-+    /// 任务移除提醒
-+    pub const TASK_V2_TASK_REMOVE_REMINDERS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/remove_reminders";
-+
-+    /// 任务添加依赖
-+    pub const TASK_V2_TASK_ADD_DEPENDENCIES: &'static str = "/open-apis/task/v2/tasks/{task_guid}/add_dependencies";
-+
-+    /// 任务移除依赖
-+    pub const TASK_V2_TASK_REMOVE_DEPENDENCIES: &'static str = "/open-apis/task/v2/tasks/{task_guid}/remove_dependencies";
-+
-+    /// 任务评论管理
-+    pub const TASK_V2_TASK_COMMENTS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/comments";
-+
-+    /// 获取/更新/删除特定任务评论
-+    pub const TASK_V2_TASK_COMMENT_GET: &'static str = "/open-apis/task/v2/tasks/{task_guid}/comments/{comment_id}";
-+
-+    /// 任务子任务管理
-+    pub const TASK_V2_TASK_SUBTASKS: &'static str = "/open-apis/task/v2/tasks/{task_guid}/subtasks";
-+
-+    // ==================== APaaS 平台即服务相关端点 ====================
-+    
-+    // ===== 座位管理端点 =====
-+    /// 查询座位分配列表
-+    pub const APASS_V1_SEAT_ASSIGNMENT_LIST: &'static str = "/open-apis/apaas/v1/seat_assignment/list";
-+    /// 查询座位活动列表
-+    pub const APASS_V1_SEAT_ACTIVITY_LIST: &'static str = "/open-apis/apaas/v1/seat_activity/list";
-+
-+    // ===== 流程管理端点 =====
-+    /// 执行流程
-+    pub const APASS_V1_FLOW_EXECUTE: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/{flow_api_name}/execute";
-+    /// 查询用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_QUERY: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/query";
-+    /// 同意用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_AGREE: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/agree";
-+    /// 拒绝用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_REJECT: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/reject";
-+    /// 转发用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_TRANSFER: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/transfer";
-+    /// 添加用户任务处理人
-+    pub const APASS_V1_FLOW_USER_TASK_ADD_ASSIGNEE: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/add_assignee";
-+    /// 抄送用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_CC: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/cc";
-+    /// 催办用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_EXPEDITING: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/expediting";
-+    /// 取消用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_CANCEL: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/cancel";
-+    /// 查询用户任务回退点
-+    pub const APASS_V1_FLOW_USER_TASK_ROLLBACK_POINTS: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback_points";
-+    /// 回退用户任务
-+    pub const APASS_V1_FLOW_USER_TASK_ROLLBACK: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback";
-+    /// 获取用户任务群聊
-+    pub const APASS_V1_FLOW_USER_TASK_CHAT_GROUP: &'static str = "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/chat_group";
-+
-+    // ===== 函数管理端点 =====
-+    /// 调用函数
-+    pub const APASS_V1_FUNCTION_INVOKE: &'static str = "/open-apis/apaas/v1/application/{app_id}/function/{function_name}/invoke";
-+
-+    // ===== 权限管理端点 =====
-+    /// 批量移除角色成员
-+    pub const APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_REMOVE: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/members/batch_remove";
-+    /// 批量添加角色成员
-+    pub const APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/members/batch_create";
-+    /// 获取角色成员
-+    pub const APASS_V1_PERMISSION_ROLE_MEMBER_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/member/{user_id}";
-+    /// 批量移除记录权限成员
-+    pub const APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_REMOVE: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/record_permission/{record_permission_api_name}/members/batch_remove";
-+    /// 批量添加记录权限成员
-+    pub const APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/permission/record_permission/{record_permission_api_name}/members/batch_create";
-+
-+    // ===== 对象管理端点 =====
-+    /// OQL 查询
-+    pub const APASS_V1_OBJECT_OQL: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/oql";
-+    /// 搜索记录
-+    pub const APASS_V1_OBJECT_RECORD_SEARCH: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/search";
-+    /// 获取记录
-+    pub const APASS_V1_OBJECT_RECORD_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
-+    /// 更新记录
-+    pub const APASS_V1_OBJECT_RECORD_UPDATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
-+    /// 删除记录
-+    pub const APASS_V1_OBJECT_RECORD_DELETE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/{record_id}";
-+    /// 创建记录
-+    pub const APASS_V1_OBJECT_RECORD_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record";
-+    /// 批量更新记录
-+    pub const APASS_V1_OBJECT_RECORD_BATCH_UPDATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_update";
-+    /// 批量查询记录
-+    pub const APASS_V1_OBJECT_RECORD_BATCH_QUERY: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_query";
-+    /// 批量删除记录
-+    pub const APASS_V1_OBJECT_RECORD_BATCH_DELETE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_delete";
-+    /// 批量创建记录
-+    pub const APASS_V1_OBJECT_RECORD_BATCH_CREATE: &'static str = "/open-apis/apaas/v1/application/{app_id}/object/{object_api_name}/record/batch_create";
-+
-+    // ===== 环境变量管理端点 =====
-+    /// 查询环境变量
-+    pub const APASS_V1_ENVIRONMENT_VARIABLE_QUERY: &'static str = "/open-apis/apaas/v1/application/{app_id}/environment_variable/query";
-+    /// 获取环境变量
-+    pub const APASS_V1_ENVIRONMENT_VARIABLE_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/environment_variable/{variable_name}";
-+
-+    // ===== 审计日志管理端点 =====
-+    /// 审计日志列表
-+    pub const APASS_V1_AUDIT_LOG_LIST: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/list";
-+    /// 获取审计日志
-+    pub const APASS_V1_AUDIT_LOG_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/{log_id}";
-+    /// 数据变更日志列表
-+    pub const APASS_V1_AUDIT_LOG_DATA_CHANGE_LOGS: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_logs";
-+    /// 获取数据变更日志
-+    pub const APASS_V1_AUDIT_LOG_DATA_CHANGE_LOG_GET: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_log/{log_id}";
-+    /// 审计事件列表
-+    pub const APASS_V1_AUDIT_LOG_AUDIT_EVENTS: &'static str = "/open-apis/apaas/v1/application/{app_id}/audit_log/audit_events";
-+
-     // ==================== Performance 绩效管理相关端点 ====================
-     /// 绩效周期列表查询
-     pub const PERFORMANCE_SEMESTER_LIST: &'static str =
-@@ -581,6 +1052,67 @@ impl Endpoints {
-     /// 功能角色管理
-     pub const CONTACT_V3_FUNCTIONAL_ROLES: &'static str = "/open-apis/contact/v3/functional_roles";
- 
-+    /// 用户管理 - 带参数的端点
-+    pub const CONTACT_V3_USER_GET: &'static str = "/open-apis/contact/v3/users/{user_id}";
-+    pub const CONTACT_V3_USER_UPDATE_ID: &'static str = "/open-apis/contact/v3/users/{user_id}/update_user_id";
-+    pub const CONTACT_V3_USER_RESURRECT: &'static str = "/open-apis/contact/v3/users/{user_id}/resurrect";
-+
-+    /// 部门管理 - 带参数的端点
-+    pub const CONTACT_V3_DEPARTMENT_GET: &'static str = "/open-apis/contact/v3/departments/{department_id}";
-+    pub const CONTACT_V3_DEPARTMENT_UPDATE_ID: &'static str = "/open-apis/contact/v3/departments/{department_id}/update_department_id";
-+
-+    /// 职务管理 - 带参数的端点
-+    pub const CONTACT_V3_JOB_TITLE_GET: &'static str = "/open-apis/contact/v3/job_titles/{job_title_id}";
-+
-+    /// 职位族群管理 - 带参数的端点
-+    pub const CONTACT_V3_JOB_FAMILY_GET: &'static str = "/open-apis/contact/v3/job_families/{job_family_id}";
-+
-+    /// 职级管理 - 带参数的端点
-+    pub const CONTACT_V3_JOB_LEVEL_GET: &'static str = "/open-apis/contact/v3/job_levels/{job_level_id}";
-+
-+    /// 功能角色管理 - 带参数的端点
-+    pub const CONTACT_V3_FUNCTIONAL_ROLE_GET: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}";
-+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members";
-+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_create";
-+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_DELETE: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_delete";
-+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_SCOPES: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/scopes";
-+    pub const CONTACT_V3_FUNCTIONAL_ROLE_MEMBER_GET: &'static str = "/open-apis/contact/v3/functional_roles/{role_id}/members/{member_id}";
-+
-+    /// 群组管理
-+    pub const CONTACT_V3_GROUPS: &'static str = "/open-apis/contact/v3/groups";
-+    pub const CONTACT_V3_GROUPS_SIMPLELIST: &'static str = "/open-apis/contact/v3/groups/simplelist";
-+    pub const CONTACT_V3_GROUPS_MEMBER_BELONG: &'static str = "/open-apis/contact/v3/groups/member_belong";
-+    pub const CONTACT_V3_GROUP_GET: &'static str = "/open-apis/contact/v3/groups/{group_id}";
-+    pub const CONTACT_V3_GROUP_DETAIL: &'static str = "/open-apis/contact/v3/groups/{group_id}/detail";
-+
-+    /// 群组成员管理
-+    pub const CONTACT_V3_GROUP_MEMBERS_ADD: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/add";
-+    pub const CONTACT_V3_GROUP_MEMBERS_BATCH_ADD: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/batch_add";
-+    pub const CONTACT_V3_GROUP_MEMBERS_REMOVE: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/remove";
-+    pub const CONTACT_V3_GROUP_MEMBERS_BATCH_REMOVE: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/batch_remove";
-+    pub const CONTACT_V3_GROUP_MEMBERS_SIMPLELIST: &'static str = "/open-apis/contact/v3/groups/{group_id}/members/simplelist";
-+
-+    /// 单位管理
-+    pub const CONTACT_V3_UNITS: &'static str = "/open-apis/contact/v3/units";
-+    pub const CONTACT_V3_UNIT_GET: &'static str = "/open-apis/contact/v3/units/{unit_id}";
-+    pub const CONTACT_V3_UNIT_BIND_DEPARTMENT: &'static str = "/open-apis/contact/v3/units/{unit_id}/bind_department";
-+    pub const CONTACT_V3_UNIT_UNBIND_DEPARTMENT: &'static str = "/open-apis/contact/v3/units/{unit_id}/unbind_department";
-+    pub const CONTACT_V3_UNIT_LIST_DEPARTMENT: &'static str = "/open-apis/contact/v3/units/{unit_id}/list_department";
-+
-+    /// 工作城市管理
-+    pub const CONTACT_V3_WORK_CITIES: &'static str = "/open-apis/contact/v3/work_cities";
-+    pub const CONTACT_V3_WORK_CITY_GET: &'static str = "/open-apis/contact/v3/work_cities/{work_city_id}";
-+
-+    /// 员工类型枚举管理
-+    pub const CONTACT_V3_EMPLOYEE_TYPE_ENUMS: &'static str = "/open-apis/contact/v3/employee_type_enums";
-+    pub const CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET: &'static str = "/open-apis/contact/v3/employee_type_enums/{enum_id}";
-+
-+    /// 自定义属性管理
-+    pub const CONTACT_V3_CUSTOM_ATTRS: &'static str = "/open-apis/contact/v3/custom_attrs";
-+
-+    /// 权限范围管理
-+    pub const CONTACT_V3_SCOPES: &'static str = "/open-apis/contact/v3/scopes";
-+
-     // ==================== 考勤服务端点 ====================
- 
-     // 考勤组管理
-@@ -860,6 +1392,18 @@ impl Endpoints {
-     pub const HELPDESK_V1_NOTIFICATION_UPDATE: &'static str =
-         "/open-apis/helpdesk/v1/notifications/{notification_id}";
- 
-+    /// 通知提交审核
-+    pub const HELPDESK_V1_NOTIFICATION_SUBMIT_APPROVE: &'static str =
-+        "/open-apis/helpdesk/v1/notifications/{notification_id}/submit_approve";
-+
-+    /// 通知取消审核
-+    pub const HELPDESK_V1_NOTIFICATION_CANCEL_APPROVE: &'static str =
-+        "/open-apis/helpdesk/v1/notifications/{notification_id}/cancel_approve";
-+
-+    /// 通知执行推送
-+    pub const HELPDESK_V1_NOTIFICATION_EXECUTE_SEND: &'static str =
-+        "/open-apis/helpdesk/v1/notifications/{notification_id}/execute_send";
-+
-     /// 通知取消发送
-     pub const HELPDESK_V1_NOTIFICATION_CANCEL_SEND: &'static str =
-         "/open-apis/helpdesk/v1/notifications/{notification_id}/cancel_send";
-@@ -1070,6 +1614,8 @@ impl Endpoints {
-         "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}";
-     pub const BITABLE_V1_FORM_PATCH_META: &'static str =
-         "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}/questions";
-+    pub const BITABLE_V1_FORM_QUESTION: &'static str =
-+        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}/questions/{question_id}";
- 
-     /// 多维表格工作流管理
-     pub const BITABLE_V1_WORKFLOWS: &'static str =
-@@ -1096,9 +1642,9 @@ impl Endpoints {
-     pub const COMMENT_V1_COMMENT_REPLIES: &'static str =
-         "/open-apis/comment/v1/comments/{}/replies";
-     pub const COMMENT_V1_COMMENT_REPLY_UPDATE: &'static str =
--        "/open-apis/comment/v1/comments/{}/replies/{}";
-+        "/open-apis/comment/v1/comments/{comment_id}/replies/{reply_id}";
-     pub const COMMENT_V1_COMMENT_REPLY_DELETE: &'static str =
--        "/open-apis/comment/v1/comments/{}/replies/{}";
-+        "/open-apis/comment/v1/comments/{comment_id}/replies/{reply_id}";
- 
-     // Docx 文档服务
-     /// 文档管理
-@@ -1367,6 +1913,7 @@ impl Endpoints {
-     pub const WIKI_V2_TASKS_MOVE_DOCS_TO_WIKI: &'static str =
-         "/open-apis/wiki/v2/tasks/move_docs_to_wiki";
-     pub const WIKI_V2_TASK_GET: &'static str = "/open-apis/wiki/v2/tasks/{}";
-+
- }
- 
- /// API端点构建辅助函数
-@@ -1418,6 +1965,36 @@ impl EndpointBuilder {
-         result
-     }
- 
-+    /// Replace multiple parameters in an endpoint template using an array of key-value pairs.
-+    ///
-+    /// This is a convenience method for replacing multiple parameters without creating a HashMap.
-+    ///
-+    /// # Arguments
-+    ///
-+    /// * `template` - The template string containing placeholders like `{param_name}`
-+    /// * `params` - An array of tuples containing (key, value) pairs
-+    ///
-+    /// # Example
-+    ///
-+    /// ```rust
-+    /// use open_lark::core::endpoints::EndpointBuilder;
-+    /// let path = EndpointBuilder::replace_params_from_array(
-+    ///     "/open-apis/apaas/v1/application/{app_id}/flow/{flow_api_name}/execute",
-+    ///     &[("app_id", "app_123"), ("flow_api_name", "flow_456")]
-+    /// );
-+    /// assert_eq!(path, "/open-apis/apaas/v1/application/app_123/flow/flow_456/execute");
-+    /// ```
-+    pub fn replace_params_from_array(
-+        template: &str,
-+        params: &[(&str, &str)],
-+    ) -> String {
-+        let mut result = template.to_string();
-+        for (key, value) in params {
-+            result = result.replace(&format!("{{{}}}", key), value);
-+        }
-+        result
-+    }
-+
-     /// 构建VC会议室相关端点
-     pub fn vc_room(room_id: &str) -> VCRoomEndpoints {
-         VCRoomEndpoints {
-diff --git a/src/service/apass/audit_log/mod.rs b/src/service/apass/audit_log/mod.rs
-index b80e8e9..040a5be 100644
---- a/src/service/apass/audit_log/mod.rs
-+++ b/src/service/apass/audit_log/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -111,9 +112,10 @@ impl AuditLogService {
-     ) -> SDKResult<BaseResponse<AuditLogListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/audit_log/list",
--                request.app_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::APASS_V1_AUDIT_LOG_LIST,
-+                "app_id",
-+                &request.app_id
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -161,7 +163,10 @@ impl AuditLogService {
-     ) -> SDKResult<BaseResponse<AuditLogGetResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/apaas/v1/application/{app_id}/audit_log/{log_id}"),
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_AUDIT_LOG_GET,
-+                &[("app_id", app_id), ("log_id", log_id)]
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-             ..Default::default()
-@@ -185,9 +190,10 @@ impl AuditLogService {
-     ) -> SDKResult<BaseResponse<DataChangeLogListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/audit_log/data_change_logs",
--                request.app_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::APASS_V1_AUDIT_LOG_DATA_CHANGE_LOGS,
-+                "app_id",
-+                &request.app_id
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -229,8 +235,9 @@ impl AuditLogService {
-     ) -> SDKResult<BaseResponse<DataChangeLogDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{app_id}/audit_log/data_change_log/{log_id}"
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_AUDIT_LOG_DATA_CHANGE_LOG_GET,
-+                &[("app_id", app_id), ("log_id", log_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -255,7 +262,11 @@ impl AuditLogService {
-     ) -> SDKResult<BaseResponse<AuditEventListResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/apaas/v1/application/{app_id}/audit_log/audit_events"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::APASS_V1_AUDIT_LOG_AUDIT_EVENTS,
-+                "app_id",
-+                app_id
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/apass/environment_variable/mod.rs b/src/service/apass/environment_variable/mod.rs
-index cae34bb..d929226 100644
---- a/src/service/apass/environment_variable/mod.rs
-+++ b/src/service/apass/environment_variable/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -70,9 +71,10 @@ impl EnvironmentVariableService {
-     ) -> SDKResult<BaseResponse<EnvironmentVariableQueryResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/environment_variable/query",
--                request.app_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::APASS_V1_ENVIRONMENT_VARIABLE_QUERY,
-+                "app_id",
-+                &request.app_id
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -107,9 +109,9 @@ impl EnvironmentVariableService {
-     ) -> SDKResult<BaseResponse<EnvironmentVariableGetResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/environment_variable/{}",
--                request.app_id, request.variable_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_ENVIRONMENT_VARIABLE_GET,
-+                &[("app_id", &request.app_id), ("variable_name", &request.variable_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-diff --git a/src/service/apass/flow/mod.rs b/src/service/apass/flow/mod.rs
-index adba59e..f52dbb8 100644
---- a/src/service/apass/flow/mod.rs
-+++ b/src/service/apass/flow/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -120,9 +121,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<FlowExecuteResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/{}/execute",
--                request.app_id, request.flow_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_EXECUTE,
-+                &[("app_id", &request.app_id), ("flow_api_name", &request.flow_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -149,9 +150,10 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskQueryResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/query",
--                request.app_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_QUERY,
-+                "app_id",
-+                &request.app_id
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -189,9 +191,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/agree",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_AGREE,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -219,9 +221,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/reject",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_REJECT,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -249,9 +251,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/transfer",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_TRANSFER,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -279,9 +281,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/add_assignee",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_ADD_ASSIGNEE,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -309,9 +311,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/cc",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_CC,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -339,9 +341,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/expediting",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_EXPEDITING,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -368,9 +370,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/cancel",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_CANCEL,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -399,8 +401,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskRollbackPointsResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{app_id}/flow/user_task/{task_id}/rollback_points"
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_ROLLBACK_POINTS,
-+                &[("app_id", app_id), ("task_id", task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -425,9 +428,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskActionResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/rollback",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_ROLLBACK,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -455,9 +458,9 @@ impl FlowService {
-     ) -> SDKResult<BaseResponse<UserTaskChatGroupResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/flow/user_task/{}/chat_group",
--                request.app_id, request.task_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FLOW_USER_TASK_CHAT_GROUP,
-+                &[("app_id", &request.app_id), ("task_id", &request.task_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-diff --git a/src/service/apass/function/mod.rs b/src/service/apass/function/mod.rs
-index bffa23c..da35f81 100644
---- a/src/service/apass/function/mod.rs
-+++ b/src/service/apass/function/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -53,9 +54,9 @@ impl FunctionService {
-     ) -> SDKResult<BaseResponse<FunctionInvokeResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/function/{}/invoke",
--                request.app_id, request.function_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_FUNCTION_INVOKE,
-+                &[("app_id", &request.app_id), ("function_name", &request.function_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-diff --git a/src/service/apass/object/mod.rs b/src/service/apass/object/mod.rs
-index 1416187..c281d7a 100644
---- a/src/service/apass/object/mod.rs
-+++ b/src/service/apass/object/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -167,9 +168,10 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<OqlQueryResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/oql",
--                request.app_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::APASS_V1_OBJECT_OQL,
-+                "app_id",
-+                &request.app_id
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -197,9 +199,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<RecordSearchResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/search",
--                request.app_id, request.object_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_SEARCH,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -236,9 +238,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<RecordQueryResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/{}",
--                request.app_id, request.object_api_name, request.record_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_GET,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name), ("record_id", &request.record_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -268,9 +270,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<RecordUpdateResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/{}",
--                request.app_id, request.object_api_name, request.record_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_UPDATE,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name), ("record_id", &request.record_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request.data)?,
-@@ -295,9 +297,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<RecordDeleteResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/{}",
--                request.app_id, request.object_api_name, request.record_id
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_DELETE,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name), ("record_id", &request.record_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -322,9 +324,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<RecordCreateResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record",
--                request.app_id, request.object_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_CREATE,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request.data)?,
-@@ -349,9 +351,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<BatchRecordResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/batch_update",
--                request.app_id, request.object_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_BATCH_UPDATE,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -378,9 +380,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<BatchRecordQueryResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/batch_query",
--                request.app_id, request.object_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_BATCH_QUERY,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -418,9 +420,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<BatchRecordResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/batch_delete",
--                request.app_id, request.object_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_BATCH_DELETE,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -447,9 +449,9 @@ impl ObjectService {
-     ) -> SDKResult<BaseResponse<BatchRecordResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/object/{}/record/batch_create",
--                request.app_id, request.object_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_OBJECT_RECORD_BATCH_CREATE,
-+                &[("app_id", &request.app_id), ("object_api_name", &request.object_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-diff --git a/src/service/apass/permission/mod.rs b/src/service/apass/permission/mod.rs
-index 7a8a36b..1e46cfd 100644
---- a/src/service/apass/permission/mod.rs
-+++ b/src/service/apass/permission/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -72,9 +73,9 @@ impl PermissionService {
-     ) -> SDKResult<BaseResponse<OperationSuccessResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/permission/role/{}/members/batch_remove",
--                request.app_id, request.role_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_REMOVE,
-+                &[("app_id", &request.app_id), ("role_api_name", &request.role_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -101,9 +102,9 @@ impl PermissionService {
-     ) -> SDKResult<BaseResponse<OperationSuccessResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/permission/role/{}/members/batch_create",
--                request.app_id, request.role_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_PERMISSION_ROLE_MEMBERS_BATCH_CREATE,
-+                &[("app_id", &request.app_id), ("role_api_name", &request.role_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -134,8 +135,9 @@ impl PermissionService {
-     ) -> SDKResult<BaseResponse<RoleMemberGetResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{app_id}/permission/role/{role_api_name}/member/{user_id}"
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_PERMISSION_ROLE_MEMBER_GET,
-+                &[("app_id", app_id), ("role_api_name", role_api_name), ("user_id", user_id)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-@@ -160,9 +162,9 @@ impl PermissionService {
-     ) -> SDKResult<BaseResponse<OperationSuccessResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/permission/record_permission/{}/members/batch_remove",
--                request.app_id, request.record_permission_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_REMOVE,
-+                &[("app_id", &request.app_id), ("record_permission_api_name", &request.record_permission_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-@@ -190,9 +192,9 @@ impl PermissionService {
-     ) -> SDKResult<BaseResponse<OperationSuccessResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/apaas/v1/application/{}/permission/record_permission/{}/members/batch_create",
--                request.app_id, request.record_permission_api_name
-+            api_path: EndpointBuilder::replace_params_from_array(
-+                Endpoints::APASS_V1_PERMISSION_RECORD_MEMBERS_BATCH_CREATE,
-+                &[("app_id", &request.app_id), ("record_permission_api_name", &request.record_permission_api_name)]
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&serde_json::json!({
-diff --git a/src/service/apass/seat/mod.rs b/src/service/apass/seat/mod.rs
-index c529b27..e52d01a 100644
---- a/src/service/apass/seat/mod.rs
-+++ b/src/service/apass/seat/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -70,7 +71,7 @@ impl SeatService {
-     ) -> SDKResult<BaseResponse<SeatAssignmentListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/apaas/v1/seat_assignment/list".to_string(),
-+            api_path: Endpoints::APASS_V1_SEAT_ASSIGNMENT_LIST.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-             ..Default::default()
-@@ -104,7 +105,7 @@ impl SeatService {
-     ) -> SDKResult<BaseResponse<SeatActivityListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/apaas/v1/seat_activity/list".to_string(),
-+            api_path: Endpoints::APASS_V1_SEAT_ACTIVITY_LIST.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/cloud_docs/bitable/v1/app/copy.rs b/src/service/cloud_docs/bitable/v1/app/copy.rs
-index 33c6200..3342665 100644
---- a/src/service/cloud_docs/bitable/v1/app/copy.rs
-+++ b/src/service/cloud_docs/bitable/v1/app/copy.rs
-@@ -25,7 +25,7 @@ impl AppService {
-     ) -> SDKResult<BaseResponse<CopyAppResponse>> {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::POST;
--        api_req.api_path = format!("/open-apis/bitable/v1/apps/{}/copy", request.app_token);
-+        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_APP_COPY, request.app_token);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-         api_req.body = serde_json::to_vec(&CopyAppRequestBody {
-             name: request.name,
-diff --git a/src/service/cloud_docs/bitable/v1/app/get.rs b/src/service/cloud_docs/bitable/v1/app/get.rs
-index 065853b..da96f16 100644
---- a/src/service/cloud_docs/bitable/v1/app/get.rs
-+++ b/src/service/cloud_docs/bitable/v1/app/get.rs
-@@ -27,7 +27,7 @@ impl AppService {
-     ) -> SDKResult<BaseResponse<GetAppResponse>> {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::GET;
--        api_req.api_path = format!("/open-apis/bitable/v1/apps/{}", request.app_token);
-+        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_APP_GET, request.app_token);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         let api_resp = Transport::request(api_req, &self.config, option).await?;
-diff --git a/src/service/cloud_docs/bitable/v1/app/update.rs b/src/service/cloud_docs/bitable/v1/app/update.rs
-index 30d0adf..33b797c 100644
---- a/src/service/cloud_docs/bitable/v1/app/update.rs
-+++ b/src/service/cloud_docs/bitable/v1/app/update.rs
-@@ -27,7 +27,7 @@ impl AppService {
-     ) -> SDKResult<BaseResponse<UpdateAppResponse>> {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::PUT;
--        api_req.api_path = format!("/open-apis/bitable/v1/apps/{}", request.app_token);
-+        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_APP_UPDATE, request.app_token);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-         api_req.body = serde_json::to_vec(&UpdateAppRequestBody {
-             name: request.name,
-diff --git a/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs b/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs
-index ac70cc6..0b4dbfa 100644
---- a/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_dashboard/copy.rs
-@@ -113,7 +113,7 @@ pub async fn copy_dashboard(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::POST;
-     api_req.api_path = format!(
--        "/open-apis/bitable/v1/apps/{app_token}/dashboards/{block_id}/copy",
-+        crate::core::endpoints::BITABLE_V1_DASHBOARD_COPY,
-         app_token = request.app_token,
-         block_id = request.block_id
-     );
-diff --git a/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs b/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs
-index 04cb804..14f814f 100644
---- a/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table/batch_create.rs
-@@ -26,7 +26,7 @@ impl AppTableService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::POST;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/batch_create",
-+            crate::core::endpoints::BITABLE_V1_TABLES_BATCH_CREATE,
-             request.app_token
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs b/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs
-index a3f0eb4..f38a4fe 100644
---- a/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table/batch_delete.rs
-@@ -26,7 +26,7 @@ impl AppTableService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::POST;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/batch_delete",
-+            crate::core::endpoints::BITABLE_V1_TABLES_BATCH_DELETE,
-             request.app_token
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table/create.rs b/src/service/cloud_docs/bitable/v1/app_table/create.rs
-index b11bc9f..19b2a34 100644
---- a/src/service/cloud_docs/bitable/v1/app_table/create.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table/create.rs
-@@ -25,7 +25,7 @@ impl AppTableService {
-     ) -> SDKResult<BaseResponse<CreateTableResponse>> {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::POST;
--        api_req.api_path = format!("/open-apis/bitable/v1/apps/{}/tables", request.app_token);
-+        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_TABLE_CREATE, request.app_token);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-         api_req.body = serde_json::to_vec(&CreateTableRequestBody {
-             table: request.table,
-diff --git a/src/service/cloud_docs/bitable/v1/app_table/delete.rs b/src/service/cloud_docs/bitable/v1/app_table/delete.rs
-index 540567c..927f226 100644
---- a/src/service/cloud_docs/bitable/v1/app_table/delete.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table/delete.rs
-@@ -26,7 +26,7 @@ impl AppTableService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::DELETE;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/{}",
-+            crate::core::endpoints::BITABLE_V1_TABLE_DELETE,
-             request.app_token, request.table_id
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table/list.rs b/src/service/cloud_docs/bitable/v1/app_table/list.rs
-index 87d5e3d..022c64b 100644
---- a/src/service/cloud_docs/bitable/v1/app_table/list.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table/list.rs
-@@ -22,7 +22,7 @@ impl AppTableService {
-     ) -> SDKResult<BaseResponse<ListTablesResponse>> {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::GET;
--        api_req.api_path = format!("/open-apis/bitable/v1/apps/{}/tables", request.app_token);
-+        api_req.api_path = format!(crate::core::endpoints::BITABLE_V1_TABLES, request.app_token);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         // 添加查询参数
-diff --git a/src/service/cloud_docs/bitable/v1/app_table/patch.rs b/src/service/cloud_docs/bitable/v1/app_table/patch.rs
-index 5692b3e..7c40583 100644
---- a/src/service/cloud_docs/bitable/v1/app_table/patch.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table/patch.rs
-@@ -26,7 +26,7 @@ impl AppTableService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::PATCH;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/{}",
-+            crate::core::endpoints::BITABLE_V1_TABLE_PATCH,
-             request.app_token, request.table_id
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/create.rs b/src/service/cloud_docs/bitable/v1/app_table_view/create.rs
-index 9d4d9b8..f255616 100644
---- a/src/service/cloud_docs/bitable/v1/app_table_view/create.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table_view/create.rs
-@@ -26,7 +26,7 @@ impl AppTableViewService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::POST;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/{}/views",
-+            crate::core::endpoints::BITABLE_V1_VIEW_CREATE,
-             request.app_token, request.table_id
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs b/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs
-index 72f79b4..e591e49 100644
---- a/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table_view/delete.rs
-@@ -37,7 +37,7 @@ pub async fn delete_view(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::DELETE;
-     api_req.api_path = format!(
--        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}",
-+        crate::core::endpoints::BITABLE_V1_VIEW_DELETE,
-         request.app_token, request.table_id, request.view_id
-     );
-     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/get.rs b/src/service/cloud_docs/bitable/v1/app_table_view/get.rs
-index b98c48d..fc3a48b 100644
---- a/src/service/cloud_docs/bitable/v1/app_table_view/get.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table_view/get.rs
-@@ -26,7 +26,7 @@ impl AppTableViewService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::GET;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}",
-+            crate::core::endpoints::BITABLE_V1_VIEW_GET,
-             request.app_token, request.table_id, request.view_id
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
-index aab1729..ffaee23 100644
---- a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
-@@ -23,7 +23,7 @@ impl AppTableViewService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::GET;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/{}/views",
-+            crate::core::endpoints::BITABLE_V1_VIEWS,
-             request.app_token, request.table_id
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs b/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs
-index 48ef934..7cfe80e 100644
---- a/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs
-+++ b/src/service/cloud_docs/bitable/v1/app_table_view/patch.rs
-@@ -26,7 +26,7 @@ impl AppTableViewService {
-         let mut api_req = request.api_request;
-         api_req.http_method = Method::PATCH;
-         api_req.api_path = format!(
--            "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}",
-+            crate::core::endpoints::BITABLE_V1_VIEW_PATCH,
-             request.app_token, request.table_id, request.view_id
-         );
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/bitable/v1/form/get.rs b/src/service/cloud_docs/bitable/v1/form/get.rs
-index ab74c94..f38ff56 100644
---- a/src/service/cloud_docs/bitable/v1/form/get.rs
-+++ b/src/service/cloud_docs/bitable/v1/form/get.rs
-@@ -119,7 +119,7 @@ pub async fn get_form(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}",
-+        crate::core::endpoints::BITABLE_V1_FORM_GET,
-         app_token = request.app_token,
-         form_id = request.form_id
-     );
-diff --git a/src/service/cloud_docs/bitable/v1/form/list.rs b/src/service/cloud_docs/bitable/v1/form/list.rs
-index 5d31bab..2a9a8cf 100644
---- a/src/service/cloud_docs/bitable/v1/form/list.rs
-+++ b/src/service/cloud_docs/bitable/v1/form/list.rs
-@@ -150,7 +150,7 @@ pub async fn list_form_questions(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}/questions",
-+        crate::core::endpoints::BITABLE_V1_FORM_PATCH_META,
-         app_token = request.app_token,
-         form_id = request.form_id
-     );
-diff --git a/src/service/cloud_docs/bitable/v1/form/patch.rs b/src/service/cloud_docs/bitable/v1/form/patch.rs
-index 796aea1..1070e4f 100644
---- a/src/service/cloud_docs/bitable/v1/form/patch.rs
-+++ b/src/service/cloud_docs/bitable/v1/form/patch.rs
-@@ -157,7 +157,7 @@ pub async fn patch_form_question(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::PATCH;
-     api_req.api_path = format!(
--        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}/questions/{question_id}",
-+        crate::core::endpoints::BITABLE_V1_FORM_QUESTION,
-         app_token = request.app_token,
-         form_id = request.form_id,
-         question_id = request.question_id
-diff --git a/src/service/cloud_docs/bitable/v1/form/patch_meta.rs b/src/service/cloud_docs/bitable/v1/form/patch_meta.rs
-index c53a78d..f2088bc 100644
---- a/src/service/cloud_docs/bitable/v1/form/patch_meta.rs
-+++ b/src/service/cloud_docs/bitable/v1/form/patch_meta.rs
-@@ -160,7 +160,7 @@ pub async fn patch_form_meta(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::PATCH;
-     api_req.api_path = format!(
--        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}",
-+        crate::core::endpoints::BITABLE_V1_FORM_PATCH,
-         app_token = request.app_token,
-         form_id = request.form_id
-     );
-diff --git a/src/service/cloud_docs/comments/batch_query.rs b/src/service/cloud_docs/comments/batch_query.rs
-index e3032ad..ef57773 100644
---- a/src/service/cloud_docs/comments/batch_query.rs
-+++ b/src/service/cloud_docs/comments/batch_query.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -176,7 +177,8 @@ pub async fn batch_query_comments(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::POST;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments/batch_query?file_type={}&file_token={}",
-+        "{}?file_type={}&file_token={}",
-+        Endpoints::COMMENT_V1_COMMENTS_BATCH_QUERY,
-         request.file_type, request.file_token
-     );
- 
-diff --git a/src/service/cloud_docs/comments/create.rs b/src/service/cloud_docs/comments/create.rs
-index 7e2a16c..6c560d4 100644
---- a/src/service/cloud_docs/comments/create.rs
-+++ b/src/service/cloud_docs/comments/create.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -238,8 +239,8 @@ pub async fn create_comment(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::POST;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments?file_type={}&file_token={}",
--        request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        Endpoints::COMMENT_V1_COMMENTS, request.file_type, request.file_token
-     );
- 
-     // 添加用户ID类型查询参数
-diff --git a/src/service/cloud_docs/comments/delete_reply.rs b/src/service/cloud_docs/comments/delete_reply.rs
-index fc69f20..0a10f8e 100644
---- a/src/service/cloud_docs/comments/delete_reply.rs
-+++ b/src/service/cloud_docs/comments/delete_reply.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -184,9 +185,17 @@ pub async fn delete_reply(
- ) -> SDKResult<BaseResponse<DeleteReplyResponse>> {
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::DELETE;
-+    use std::collections::HashMap;
-+    let mut params = HashMap::new();
-+    params.insert("comment_id".to_string(), request.comment_id.clone());
-+    params.insert("reply_id".to_string(), request.reply_id.clone());
-+    let endpoint = EndpointBuilder::replace_params(
-+        Endpoints::COMMENT_V1_COMMENT_REPLY_DELETE,
-+        &params
-+    );
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments/{}/replies/{}?file_type={}&file_token={}",
--        request.comment_id, request.reply_id, request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        endpoint, request.file_type, request.file_token
-     );
- 
-     // 添加用户ID类型查询参数
-diff --git a/src/service/cloud_docs/comments/get.rs b/src/service/cloud_docs/comments/get.rs
-index ec48948..8aeb61d 100644
---- a/src/service/cloud_docs/comments/get.rs
-+++ b/src/service/cloud_docs/comments/get.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -163,8 +164,9 @@ pub async fn get_comment(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments/{}?file_type={}&file_token={}",
--        request.comment_id, request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        Endpoints::COMMENT_V1_COMMENT_GET.replace("{}", &request.comment_id),
-+        request.file_type, request.file_token
-     );
- 
-     // 添加用户ID类型查询参数
-diff --git a/src/service/cloud_docs/comments/list.rs b/src/service/cloud_docs/comments/list.rs
-index 344fb51..8aa0db1 100644
---- a/src/service/cloud_docs/comments/list.rs
-+++ b/src/service/cloud_docs/comments/list.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -271,8 +272,8 @@ pub async fn list_comments(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments?file_type={}&file_token={}",
--        request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        Endpoints::COMMENT_V1_COMMENTS, request.file_type, request.file_token
-     );
- 
-     // 构建查询参数
-diff --git a/src/service/cloud_docs/comments/list_replies.rs b/src/service/cloud_docs/comments/list_replies.rs
-index cdad5ad..997655d 100644
---- a/src/service/cloud_docs/comments/list_replies.rs
-+++ b/src/service/cloud_docs/comments/list_replies.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -185,8 +186,9 @@ pub async fn list_replies(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments/{}/replies?file_type={}&file_token={}",
--        request.comment_id, request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        Endpoints::COMMENT_V1_COMMENT_REPLIES.replace("{}", &request.comment_id),
-+        request.file_type, request.file_token
-     );
- 
-     // 构建查询参数
-diff --git a/src/service/cloud_docs/comments/patch.rs b/src/service/cloud_docs/comments/patch.rs
-index f75b2cc..08e802b 100644
---- a/src/service/cloud_docs/comments/patch.rs
-+++ b/src/service/cloud_docs/comments/patch.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -207,8 +208,9 @@ pub async fn patch_comment(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::PATCH;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments/{}?file_type={}&file_token={}",
--        request.comment_id, request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        Endpoints::COMMENT_V1_COMMENT_GET.replace("{}", &request.comment_id),
-+        request.file_type, request.file_token
-     );
- 
-     // 添加用户ID类型查询参数
-diff --git a/src/service/cloud_docs/comments/update_reply.rs b/src/service/cloud_docs/comments/update_reply.rs
-index 482c09a..5a6c71d 100644
---- a/src/service/cloud_docs/comments/update_reply.rs
-+++ b/src/service/cloud_docs/comments/update_reply.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -199,8 +200,12 @@ pub async fn update_reply(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::PUT;
-     api_req.api_path = format!(
--        "/open-apis/comment/v1/comments/{}/replies/{}?file_type={}&file_token={}",
--        request.comment_id, request.reply_id, request.file_type, request.file_token
-+        "{}?file_type={}&file_token={}",
-+        EndpointBuilder::replace_params(
-+            Endpoints::COMMENT_V1_COMMENT_REPLY_UPDATE,
-+            &[("comment_id", &request.comment_id), ("reply_id", &request.reply_id)]
-+        ),
-+        request.file_type, request.file_token
-     );
- 
-     // 添加用户ID类型查询参数
-diff --git a/src/service/cloud_docs/docx/v1/document_block.rs b/src/service/cloud_docs/docx/v1/document_block.rs
-index 1b9cb8d..8a2325c 100644
---- a/src/service/cloud_docs/docx/v1/document_block.rs
-+++ b/src/service/cloud_docs/docx/v1/document_block.rs
-@@ -60,7 +60,7 @@ impl DocumentBlockService {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
-             api_path: format!(
--                "/open-apis/docx/v1/documents/{}/blocks/{}",
-+                crate::core::endpoints::DOCX_V1_DOCUMENT_BLOCK_GET,
-                 document_id.into(),
-                 block_id.into()
-             ),
-@@ -87,7 +87,7 @@ impl DocumentBlockService {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
-             api_path: format!(
--                "/open-apis/docx/v1/documents/{}/blocks/{}",
-+                crate::core::endpoints::DOCX_V1_DOCUMENT_BLOCK_GET,
-                 document_id.into(),
-                 block_id.into()
-             ),
-@@ -114,7 +114,7 @@ impl DocumentBlockService {
-         let mut api_req = ApiRequest {
-             http_method: Method::PATCH,
-             api_path: format!(
--                "/open-apis/docx/v1/documents/{}/blocks/batch_update",
-+                crate::core::endpoints::DOCX_V1_DOCUMENT_BLOCKS_BATCH_UPDATE,
-                 document_id.into()
-             ),
-             ..Default::default()
-diff --git a/src/service/cloud_docs/permission/member/auth.rs b/src/service/cloud_docs/permission/member/auth.rs
-index 84601a8..ee449df 100644
---- a/src/service/cloud_docs/permission/member/auth.rs
-+++ b/src/service/cloud_docs/permission/member/auth.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -165,8 +166,9 @@ pub async fn auth_permission(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members/auth?type={}&perm={}",
--        request.token, request.obj_type, request.perm
-+        "{}?type={}&perm={}",
-+        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_AUTH, "token", &request.token),
-+        request.obj_type, request.perm
-     );
- 
-     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-diff --git a/src/service/cloud_docs/permission/member/batch_create.rs b/src/service/cloud_docs/permission/member/batch_create.rs
-index e4ca398..9c9a6d1 100644
---- a/src/service/cloud_docs/permission/member/batch_create.rs
-+++ b/src/service/cloud_docs/permission/member/batch_create.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -226,8 +227,9 @@ pub async fn batch_create_permission_member(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::POST;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members/batch_create?type={}",
--        request.token, request.obj_type
-+        "{}?type={}",
-+        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_BATCH_CREATE, "token", &request.token),
-+        request.obj_type
-     );
- 
-     // 添加通知参数
-diff --git a/src/service/cloud_docs/permission/member/create.rs b/src/service/cloud_docs/permission/member/create.rs
-index b866da8..8755a51 100644
---- a/src/service/cloud_docs/permission/member/create.rs
-+++ b/src/service/cloud_docs/permission/member/create.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -257,8 +258,9 @@ pub async fn create_permission_member(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::POST;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members?type={}",
--        request.token, request.obj_type
-+        "{}?type={}",
-+        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS, "token", &request.token),
-+        request.obj_type
-     );
- 
-     // 添加通知参数
-diff --git a/src/service/cloud_docs/permission/member/delete.rs b/src/service/cloud_docs/permission/member/delete.rs
-index 0607f95..18cc210 100644
---- a/src/service/cloud_docs/permission/member/delete.rs
-+++ b/src/service/cloud_docs/permission/member/delete.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -206,8 +207,12 @@ pub async fn delete_permission_member(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::DELETE;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members/{}?type={}&member_type={}",
--        request.token, request.member_id, request.obj_type, request.member_type
-+        "{}?type={}&member_type={}",
-+        EndpointBuilder::replace_params(
-+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBER_GET,
-+            &[("token", &request.token), ("member_id", &request.member_id)]
-+        ),
-+        request.obj_type, request.member_type
-     );
- 
-     // 添加通知参数
-diff --git a/src/service/cloud_docs/permission/member/list.rs b/src/service/cloud_docs/permission/member/list.rs
-index 6bcddea..e64d2b6 100644
---- a/src/service/cloud_docs/permission/member/list.rs
-+++ b/src/service/cloud_docs/permission/member/list.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -161,8 +162,9 @@ pub async fn list_permission_members(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::GET;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members?type={}",
--        request.token, request.obj_type
-+        "{}?type={}",
-+        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS, "token", &request.token),
-+        request.obj_type
-     );
- 
-     // 构建查询参数
-diff --git a/src/service/cloud_docs/permission/member/transfer_owner.rs b/src/service/cloud_docs/permission/member/transfer_owner.rs
-index 4fb0e1a..0b236f6 100644
---- a/src/service/cloud_docs/permission/member/transfer_owner.rs
-+++ b/src/service/cloud_docs/permission/member/transfer_owner.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -209,8 +210,9 @@ pub async fn transfer_owner(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::POST;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members/transfer_owner?type={}",
--        request.token, request.obj_type
-+        "{}?type={}",
-+        EndpointBuilder::replace_param(Endpoints::DRIVE_V1_PERMISSIONS_MEMBERS_TRANSFER_OWNER, "token", &request.token),
-+        request.obj_type
-     );
- 
-     // 添加其他查询参数
-diff --git a/src/service/cloud_docs/permission/member/update.rs b/src/service/cloud_docs/permission/member/update.rs
-index c8a5f9a..42db8c8 100644
---- a/src/service/cloud_docs/permission/member/update.rs
-+++ b/src/service/cloud_docs/permission/member/update.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -253,8 +254,12 @@ pub async fn update_permission_member(
-     let mut api_req = request.api_request;
-     api_req.http_method = Method::PUT;
-     api_req.api_path = format!(
--        "/open-apis/drive/v1/permissions/{}/members/{}?type={}&member_type={}",
--        request.token, request.member_id, request.obj_type, request.member_type
-+        "{}?type={}&member_type={}",
-+        EndpointBuilder::replace_params(
-+            Endpoints::DRIVE_V1_PERMISSIONS_MEMBER_GET,
-+            &[("token", &request.token), ("member_id", &request.member_id)]
-+        ),
-+        request.obj_type, request.member_type
-     );
- 
-     // 添加通知参数
-diff --git a/src/service/cloud_docs/permission/public_v1/get.rs b/src/service/cloud_docs/permission/public_v1/get.rs
-index c43ca71..12ac17b 100644
---- a/src/service/cloud_docs/permission/public_v1/get.rs
-+++ b/src/service/cloud_docs/permission/public_v1/get.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-diff --git a/src/service/cloud_docs/permission/public_v1/password/create.rs b/src/service/cloud_docs/permission/public_v1/password/create.rs
-index 5024c05..107104f 100644
---- a/src/service/cloud_docs/permission/public_v1/password/create.rs
-+++ b/src/service/cloud_docs/permission/public_v1/password/create.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-diff --git a/src/service/cloud_docs/permission/public_v1/password/delete.rs b/src/service/cloud_docs/permission/public_v1/password/delete.rs
-index ca3808c..39c7de9 100644
---- a/src/service/cloud_docs/permission/public_v1/password/delete.rs
-+++ b/src/service/cloud_docs/permission/public_v1/password/delete.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-diff --git a/src/service/cloud_docs/permission/public_v1/password/update.rs b/src/service/cloud_docs/permission/public_v1/password/update.rs
-index ddb3f8e..0455cac 100644
---- a/src/service/cloud_docs/permission/public_v1/password/update.rs
-+++ b/src/service/cloud_docs/permission/public_v1/password/update.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-diff --git a/src/service/cloud_docs/permission/public_v1/patch.rs b/src/service/cloud_docs/permission/public_v1/patch.rs
-index 2ceed44..62bcea1 100644
---- a/src/service/cloud_docs/permission/public_v1/patch.rs
-+++ b/src/service/cloud_docs/permission/public_v1/patch.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-diff --git a/src/service/cloud_docs/permission/public_v2/get.rs b/src/service/cloud_docs/permission/public_v2/get.rs
-index 8aa991c..385ced5 100644
---- a/src/service/cloud_docs/permission/public_v2/get.rs
-+++ b/src/service/cloud_docs/permission/public_v2/get.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-diff --git a/src/service/contact/v3/custom_attr.rs b/src/service/contact/v3/custom_attr.rs
-index 354d28a..90d7309 100644
---- a/src/service/contact/v3/custom_attr.rs
-+++ b/src/service/contact/v3/custom_attr.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::Endpoints, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -24,7 +24,7 @@ impl CustomAttrService {
-     ) -> crate::core::SDKResult<ListCustomAttrsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/custom_attrs".to_string(),
-+            api_path: Endpoints::CONTACT_V3_CUSTOM_ATTRS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-diff --git a/src/service/contact/v3/department.rs b/src/service/contact/v3/department.rs
-index 9322449..929ea40 100644
---- a/src/service/contact/v3/department.rs
-+++ b/src/service/contact/v3/department.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -31,7 +31,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<CreateDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/departments".to_string(),
-+            api_path: Endpoints::CONTACT_V3_DEPARTMENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -50,7 +50,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<PatchDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PATCH,
--            api_path: format!("/open-apis/contact/v3/departments/{department_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -69,7 +69,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<UpdateDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PUT,
--            api_path: format!("/open-apis/contact/v3/departments/{department_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -88,9 +88,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<UpdateDepartmentIdResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PATCH,
--            api_path: format!(
--                "/open-apis/contact/v3/departments/{department_id}/update_department_id"
--            ),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_UPDATE_ID, "department_id", department_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -109,7 +107,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<GetDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/departments/{department_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -127,7 +125,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<BatchGetDepartmentsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/departments/batch".to_string(),
-+            api_path: Endpoints::CONTACT_V3_DEPARTMENTS_BATCH.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -145,7 +143,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<GetChildrenDepartmentsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/departments/children".to_string(),
-+            api_path: Endpoints::CONTACT_V3_DEPARTMENTS_CHILDREN.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -165,7 +163,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<GetParentDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/departments/parent".to_string(),
-+            api_path: Endpoints::CONTACT_V3_DEPARTMENTS_PARENT.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -184,7 +182,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<SearchDepartmentsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/departments/search".to_string(),
-+            api_path: Endpoints::CONTACT_V3_DEPARTMENTS_SEARCH.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -203,7 +201,7 @@ impl DepartmentService {
-     ) -> crate::core::SDKResult<DeleteDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/departments/{department_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_DEPARTMENT_GET, "department_id", department_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-diff --git a/src/service/contact/v3/employee_type_enum.rs b/src/service/contact/v3/employee_type_enum.rs
-index be5122e..20b01f1 100644
---- a/src/service/contact/v3/employee_type_enum.rs
-+++ b/src/service/contact/v3/employee_type_enum.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -24,7 +24,7 @@ impl EmployeeTypeEnumService {
-     ) -> crate::core::SDKResult<CreateEmployeeTypeResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/employee_type_enums".to_string(),
-+            api_path: Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUMS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -43,7 +43,7 @@ impl EmployeeTypeEnumService {
-     ) -> crate::core::SDKResult<UpdateEmployeeTypeResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PUT,
--            api_path: format!("/open-apis/contact/v3/employee_type_enums/{enum_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET, "enum_id", enum_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -61,7 +61,7 @@ impl EmployeeTypeEnumService {
-     ) -> crate::core::SDKResult<ListEmployeeTypesResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/employee_type_enums".to_string(),
-+            api_path: Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUMS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -80,7 +80,7 @@ impl EmployeeTypeEnumService {
-     ) -> crate::core::SDKResult<DeleteEmployeeTypeResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/employee_type_enums/{enum_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_EMPLOYEE_TYPE_ENUM_GET, "enum_id", enum_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-diff --git a/src/service/contact/v3/functional_role.rs b/src/service/contact/v3/functional_role.rs
-index 602d2aa..0fdd5cf 100644
---- a/src/service/contact/v3/functional_role.rs
-+++ b/src/service/contact/v3/functional_role.rs
-@@ -1,6 +1,6 @@
- use crate::core::{
-     api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config, constants::AccessTokenType,
--    http::Transport,
-+    endpoints::{EndpointBuilder, Endpoints}, http::Transport,
- };
- use serde::{Deserialize, Serialize};
- 
-@@ -21,7 +21,7 @@ impl FunctionalRoleService {
-     ) -> crate::core::SDKResult<CreateFunctionalRoleResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/functional_roles".to_string(),
-+            api_path: Endpoints::CONTACT_V3_FUNCTIONAL_ROLES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -40,7 +40,7 @@ impl FunctionalRoleService {
-     ) -> crate::core::SDKResult<UpdateFunctionalRoleResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PUT,
--            api_path: format!("/open-apis/contact/v3/functional_roles/{role_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -55,7 +55,7 @@ impl FunctionalRoleService {
-     pub async fn get(&self, role_id: &str) -> crate::core::SDKResult<GetFunctionalRoleResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/functional_roles/{role_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -73,7 +73,7 @@ impl FunctionalRoleService {
-     ) -> crate::core::SDKResult<ListFunctionalRolesResponse> {
-         let mut api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/functional_roles".to_string(),
-+            api_path: Endpoints::CONTACT_V3_FUNCTIONAL_ROLES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -103,7 +103,7 @@ impl FunctionalRoleService {
-     ) -> crate::core::SDKResult<DeleteFunctionalRoleResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/functional_roles/{role_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_GET, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-diff --git a/src/service/contact/v3/functional_role_member.rs b/src/service/contact/v3/functional_role_member.rs
-index e032f90..81525f2 100644
---- a/src/service/contact/v3/functional_role_member.rs
-+++ b/src/service/contact/v3/functional_role_member.rs
-@@ -1,6 +1,6 @@
- use crate::core::{
-     api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config, constants::AccessTokenType,
--    http::Transport,
-+    endpoints::{EndpointBuilder, Endpoints}, http::Transport,
- };
- use serde::{Deserialize, Serialize};
- 
-@@ -22,7 +22,7 @@ impl FunctionalRoleMemberService {
-     ) -> crate::core::SDKResult<CreateRoleMemberResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/functional_roles/{role_id}/members"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -41,9 +41,7 @@ impl FunctionalRoleMemberService {
-     ) -> crate::core::SDKResult<BatchCreateRoleMembersResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!(
--                "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_create"
--            ),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_CREATE, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -63,7 +61,7 @@ impl FunctionalRoleMemberService {
-     ) -> crate::core::SDKResult<SetRoleMemberScopesResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/functional_roles/{role_id}/members/scopes"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_SCOPES, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -83,9 +81,10 @@ impl FunctionalRoleMemberService {
-     ) -> crate::core::SDKResult<GetRoleMemberResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!(
--                "/open-apis/contact/v3/functional_roles/{role_id}/members/{member_id}"
--            ),
-+            api_path: {
-+                let path = EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBER_GET, "role_id", role_id);
-+                EndpointBuilder::replace_param(&path, "member_id", member_id)
-+            },
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -104,7 +103,7 @@ impl FunctionalRoleMemberService {
-     ) -> crate::core::SDKResult<ListRoleMembersResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/functional_roles/{role_id}/members"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -124,9 +123,7 @@ impl FunctionalRoleMemberService {
-     ) -> crate::core::SDKResult<BatchDeleteRoleMembersResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!(
--                "/open-apis/contact/v3/functional_roles/{role_id}/members/batch_delete"
--            ),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_FUNCTIONAL_ROLE_MEMBERS_BATCH_DELETE, "role_id", role_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-diff --git a/src/service/contact/v3/group.rs b/src/service/contact/v3/group.rs
-index d7efe43..73b25e6 100644
---- a/src/service/contact/v3/group.rs
-+++ b/src/service/contact/v3/group.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -24,7 +24,7 @@ impl GroupService {
-     ) -> crate::core::SDKResult<CreateGroupResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/groups".to_string(),
-+            api_path: Endpoints::CONTACT_V3_GROUPS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -42,7 +42,7 @@ impl GroupService {
-     ) -> crate::core::SDKResult<PatchGroupResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PATCH,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_GET, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -60,7 +60,7 @@ impl GroupService {
-     ) -> crate::core::SDKResult<GetGroupResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_GET, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -78,7 +78,7 @@ impl GroupService {
-     ) -> crate::core::SDKResult<ListGroupsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/groups/simplelist".to_string(),
-+            api_path: Endpoints::CONTACT_V3_GROUPS_SIMPLELIST.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -96,7 +96,7 @@ impl GroupService {
-     ) -> crate::core::SDKResult<GetUserGroupsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/groups/member_belong".to_string(),
-+            api_path: Endpoints::CONTACT_V3_GROUPS_MEMBER_BELONG.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -111,7 +111,7 @@ impl GroupService {
-     pub async fn delete(&self, group_id: &str) -> crate::core::SDKResult<DeleteGroupResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_GET, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -141,7 +141,7 @@ impl GroupService {
- 
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}/detail"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_DETAIL, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params,
-diff --git a/src/service/contact/v3/group_member.rs b/src/service/contact/v3/group_member.rs
-index 51444c0..3a1b23f 100644
---- a/src/service/contact/v3/group_member.rs
-+++ b/src/service/contact/v3/group_member.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -25,7 +25,7 @@ impl GroupMemberService {
-     ) -> crate::core::SDKResult<AddGroupMemberResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}/members/add"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_ADD, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -44,7 +44,7 @@ impl GroupMemberService {
-     ) -> crate::core::SDKResult<BatchAddGroupMembersResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}/members/batch_add"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_BATCH_ADD, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -63,7 +63,7 @@ impl GroupMemberService {
-     ) -> crate::core::SDKResult<ListGroupMembersResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}/members/simplelist"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_SIMPLELIST, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -83,7 +83,7 @@ impl GroupMemberService {
-     ) -> crate::core::SDKResult<RemoveGroupMemberResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}/members/remove"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_REMOVE, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -102,7 +102,7 @@ impl GroupMemberService {
-     ) -> crate::core::SDKResult<BatchRemoveGroupMembersResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/groups/{group_id}/members/batch_remove"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_GROUP_MEMBERS_BATCH_REMOVE, "group_id", group_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-diff --git a/src/service/contact/v3/job_family.rs b/src/service/contact/v3/job_family.rs
-index 03c5635..ac9ca20 100644
---- a/src/service/contact/v3/job_family.rs
-+++ b/src/service/contact/v3/job_family.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -24,7 +24,7 @@ impl JobFamilyService {
-     ) -> crate::core::SDKResult<CreateJobFamilyResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/job_families".to_string(),
-+            api_path: Endpoints::CONTACT_V3_JOB_FAMILIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -43,7 +43,7 @@ impl JobFamilyService {
-     ) -> crate::core::SDKResult<UpdateJobFamilyResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PUT,
--            api_path: format!("/open-apis/contact/v3/job_families/{job_family_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_FAMILY_GET, "job_family_id", job_family_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -58,7 +58,7 @@ impl JobFamilyService {
-     pub async fn get(&self, job_family_id: &str) -> crate::core::SDKResult<GetJobFamilyResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/job_families/{job_family_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_FAMILY_GET, "job_family_id", job_family_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -75,7 +75,7 @@ impl JobFamilyService {
-     ) -> crate::core::SDKResult<ListJobFamiliesResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/job_families".to_string(),
-+            api_path: Endpoints::CONTACT_V3_JOB_FAMILIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -94,7 +94,7 @@ impl JobFamilyService {
-     ) -> crate::core::SDKResult<DeleteJobFamilyResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/job_families/{job_family_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_FAMILY_GET, "job_family_id", job_family_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-diff --git a/src/service/contact/v3/job_level.rs b/src/service/contact/v3/job_level.rs
-index 705b2fb..e1c9a34 100644
---- a/src/service/contact/v3/job_level.rs
-+++ b/src/service/contact/v3/job_level.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -24,7 +24,7 @@ impl JobLevelService {
-     ) -> crate::core::SDKResult<CreateJobLevelResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/job_levels".to_string(),
-+            api_path: Endpoints::CONTACT_V3_JOB_LEVELS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -43,7 +43,7 @@ impl JobLevelService {
-     ) -> crate::core::SDKResult<UpdateJobLevelResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PUT,
--            api_path: format!("/open-apis/contact/v3/job_levels/{job_level_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_LEVEL_GET, "job_level_id", job_level_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -58,7 +58,7 @@ impl JobLevelService {
-     pub async fn get(&self, job_level_id: &str) -> crate::core::SDKResult<GetJobLevelResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/job_levels/{job_level_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_LEVEL_GET, "job_level_id", job_level_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -75,7 +75,7 @@ impl JobLevelService {
-     ) -> crate::core::SDKResult<ListJobLevelsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/job_levels".to_string(),
-+            api_path: Endpoints::CONTACT_V3_JOB_LEVELS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -93,7 +93,7 @@ impl JobLevelService {
-     ) -> crate::core::SDKResult<DeleteJobLevelResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/job_levels/{job_level_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_LEVEL_GET, "job_level_id", job_level_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-diff --git a/src/service/contact/v3/job_title.rs b/src/service/contact/v3/job_title.rs
-index c94eec8..60c6762 100644
---- a/src/service/contact/v3/job_title.rs
-+++ b/src/service/contact/v3/job_title.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -21,7 +21,7 @@ impl JobTitleService {
-     pub async fn get(&self, job_title_id: &str) -> crate::core::SDKResult<GetJobTitleResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/job_titles/{job_title_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_JOB_TITLE_GET, "job_title_id", job_title_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -38,7 +38,7 @@ impl JobTitleService {
-     ) -> crate::core::SDKResult<ListJobTitlesResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/job_titles".to_string(),
-+            api_path: Endpoints::CONTACT_V3_JOB_TITLES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-diff --git a/src/service/contact/v3/scope.rs b/src/service/contact/v3/scope.rs
-index 19be2b9..0d7570d 100644
---- a/src/service/contact/v3/scope.rs
-+++ b/src/service/contact/v3/scope.rs
-@@ -1,6 +1,6 @@
- use crate::core::{
-     api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config, constants::AccessTokenType,
--    http::Transport,
-+    endpoints::Endpoints, http::Transport,
- };
- use serde::{Deserialize, Serialize};
- 
-@@ -22,7 +22,7 @@ impl ScopeService {
-     pub async fn list(&self, _req: &GetScopeRequest) -> crate::core::SDKResult<GetScopeResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/scopes".to_string(),
-+            api_path: Endpoints::CONTACT_V3_SCOPES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-diff --git a/src/service/contact/v3/unit.rs b/src/service/contact/v3/unit.rs
-index 58a09c3..a84add1 100644
---- a/src/service/contact/v3/unit.rs
-+++ b/src/service/contact/v3/unit.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -24,7 +24,7 @@ impl UnitService {
-     ) -> crate::core::SDKResult<CreateUnitResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: "/open-apis/contact/v3/units".to_string(),
-+            api_path: Endpoints::CONTACT_V3_UNITS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -42,7 +42,7 @@ impl UnitService {
-     ) -> crate::core::SDKResult<PatchUnitResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PATCH,
--            api_path: format!("/open-apis/contact/v3/units/{unit_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_GET, "unit_id", unit_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -60,7 +60,7 @@ impl UnitService {
-     ) -> crate::core::SDKResult<BindDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/units/{unit_id}/bind_department"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_BIND_DEPARTMENT, "unit_id", unit_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -79,7 +79,7 @@ impl UnitService {
-     ) -> crate::core::SDKResult<UnbindDepartmentResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/units/{unit_id}/unbind_department"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_UNBIND_DEPARTMENT, "unit_id", unit_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -98,7 +98,7 @@ impl UnitService {
-     ) -> crate::core::SDKResult<ListUnitDepartmentsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/units/{unit_id}/list_department"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_LIST_DEPARTMENT, "unit_id", unit_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -114,7 +114,7 @@ impl UnitService {
-     pub async fn get(&self, unit_id: &str) -> crate::core::SDKResult<GetUnitResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/units/{unit_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_GET, "unit_id", unit_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -128,7 +128,7 @@ impl UnitService {
-     pub async fn list(&self, _req: &ListUnitsRequest) -> crate::core::SDKResult<ListUnitsResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/units".to_string(),
-+            api_path: Endpoints::CONTACT_V3_UNITS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -143,7 +143,7 @@ impl UnitService {
-     pub async fn delete(&self, unit_id: &str) -> crate::core::SDKResult<DeleteUnitResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/units/{unit_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_UNIT_GET, "unit_id", unit_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-diff --git a/src/service/contact/v3/user.rs b/src/service/contact/v3/user.rs
-index c848ebc..023cfed 100644
---- a/src/service/contact/v3/user.rs
-+++ b/src/service/contact/v3/user.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, endpoints::Endpoints, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-         req_option::RequestOption, standard_response::StandardResponse,
-         trait_system::executable_builder::ExecutableBuilder, SDKResult,
-     },
-@@ -52,7 +52,7 @@ impl UserService {
-     ) -> crate::core::SDKResult<PatchUserResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PATCH,
--            api_path: format!("/open-apis/contact/v3/users/{user_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_GET, "user_id", user_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -70,7 +70,7 @@ impl UserService {
-     ) -> crate::core::SDKResult<UpdateUserIdResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::PATCH,
--            api_path: format!("/open-apis/contact/v3/users/{user_id}/update_user_id"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_UPDATE_ID, "user_id", user_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-@@ -96,7 +96,7 @@ impl UserService {
- 
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/users/{user_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_GET, "user_id", user_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: Vec::new(),
-             query_params,
-@@ -186,7 +186,7 @@ impl UserService {
-     ) -> crate::core::SDKResult<DeleteUserResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::DELETE,
--            api_path: format!("/open-apis/contact/v3/users/{user_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_GET, "user_id", user_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-@@ -205,7 +205,7 @@ impl UserService {
-     ) -> crate::core::SDKResult<ResurrectUserResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::POST,
--            api_path: format!("/open-apis/contact/v3/users/{user_id}/resurrect"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_USER_RESURRECT, "user_id", user_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(req)?,
-             ..Default::default()
-diff --git a/src/service/contact/v3/work_city.rs b/src/service/contact/v3/work_city.rs
-index 0600b3d..bd281cd 100644
---- a/src/service/contact/v3/work_city.rs
-+++ b/src/service/contact/v3/work_city.rs
-@@ -1,7 +1,7 @@
- use crate::{
-     core::{
-         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
--        constants::AccessTokenType, http::Transport,
-+        constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-     },
-     service::contact::models::*,
- };
-@@ -21,7 +21,7 @@ impl WorkCityService {
-     pub async fn get(&self, work_city_id: &str) -> crate::core::SDKResult<GetWorkCityResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: format!("/open-apis/contact/v3/work_cities/{work_city_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::CONTACT_V3_WORK_CITY_GET, "work_city_id", work_city_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             ..Default::default()
-@@ -38,7 +38,7 @@ impl WorkCityService {
-     ) -> crate::core::SDKResult<ListWorkCitiesResponse> {
-         let api_req = ApiRequest {
-             http_method: reqwest::Method::GET,
--            api_path: "/open-apis/contact/v3/work_cities".to_string(),
-+            api_path: Endpoints::CONTACT_V3_WORK_CITIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: Vec::new(),
-             query_params: std::collections::HashMap::new(),
-diff --git a/src/service/helpdesk/v1/agent/mod.rs b/src/service/helpdesk/v1/agent/mod.rs
-index 72428f0..830f1e7 100644
---- a/src/service/helpdesk/v1/agent/mod.rs
-+++ b/src/service/helpdesk/v1/agent/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -92,7 +93,11 @@ impl AgentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/helpdesk/v1/agents/{agent_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_AGENT_GET,
-+                "agent_id",
-+                agent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -130,7 +135,11 @@ impl AgentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/agents/{agent_id}/agent_email"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_AGENT_EMAIL,
-+                "agent_id",
-+                agent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/agent_schedule/mod.rs b/src/service/helpdesk/v1/agent_schedule/mod.rs
-index d669964..78b742f 100644
---- a/src/service/helpdesk/v1/agent_schedule/mod.rs
-+++ b/src/service/helpdesk/v1/agent_schedule/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -124,7 +125,7 @@ impl AgentScheduleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_AGENT_SCHEDULES, "agent_id", agent_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -149,8 +150,14 @@ impl AgentScheduleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!(
--                "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules/{schedule_id}"
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(
-+                    Endpoints::HELPDESK_V1_AGENT_SCHEDULE_DELETE,
-+                    "agent_id",
-+                    agent_id,
-+                ),
-+                "schedule_id",
-+                schedule_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -176,8 +183,14 @@ impl AgentScheduleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!(
--                "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules/{schedule_id}"
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(
-+                    Endpoints::HELPDESK_V1_AGENT_SCHEDULE_DELETE,
-+                    "agent_id",
-+                    agent_id,
-+                ),
-+                "schedule_id",
-+                schedule_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -203,8 +216,14 @@ impl AgentScheduleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules/{schedule_id}"
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(
-+                    Endpoints::HELPDESK_V1_AGENT_SCHEDULE_DELETE,
-+                    "agent_id",
-+                    agent_id,
-+                ),
-+                "schedule_id",
-+                schedule_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -236,7 +255,7 @@ impl AgentScheduleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_AGENT_SCHEDULES, "agent_id", agent_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/agent_skill/mod.rs b/src/service/helpdesk/v1/agent_skill/mod.rs
-index 1733210..fa340c0 100644
---- a/src/service/helpdesk/v1/agent_skill/mod.rs
-+++ b/src/service/helpdesk/v1/agent_skill/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -94,7 +95,7 @@ impl AgentSkillService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/agent_skills".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_AGENT_SKILL_CREATE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -118,7 +119,11 @@ impl AgentSkillService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/helpdesk/v1/agent_skills/{skill_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_AGENT_SKILL_DELETE,
-+                "skill_id",
-+                skill_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -141,7 +146,11 @@ impl AgentSkillService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/agent_skills/{skill_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_AGENT_SKILL_GET,
-+                "skill_id",
-+                skill_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -171,7 +180,7 @@ impl AgentSkillService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/agent_skills".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_AGENT_SKILLS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/agent_skill_rule/mod.rs b/src/service/helpdesk/v1/agent_skill_rule/mod.rs
-index bb2a7da..df697b8 100644
---- a/src/service/helpdesk/v1/agent_skill_rule/mod.rs
-+++ b/src/service/helpdesk/v1/agent_skill_rule/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -86,7 +87,7 @@ impl AgentSkillRuleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/agent_skill_rules/operator-options".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_AGENT_SKILL_RULES_OPERATOR_OPTIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -130,7 +131,7 @@ impl AgentSkillRuleService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/agent_skill_rules".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_AGENT_SKILL_RULES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/category/mod.rs b/src/service/helpdesk/v1/category/mod.rs
-index 5f0f21a..dc5f665 100644
---- a/src/service/helpdesk/v1/category/mod.rs
-+++ b/src/service/helpdesk/v1/category/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -124,7 +125,7 @@ impl CategoryService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/categories".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_CATEGORIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -148,7 +149,11 @@ impl CategoryService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/categories/{category_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_CATEGORY_GET,
-+                "category_id",
-+                category_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -172,7 +177,11 @@ impl CategoryService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/helpdesk/v1/categories/{category_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_CATEGORY_GET,
-+                "category_id",
-+                category_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -196,7 +205,11 @@ impl CategoryService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/helpdesk/v1/categories/{category_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_CATEGORY_GET,
-+                "category_id",
-+                category_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -230,7 +243,7 @@ impl CategoryService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/categories".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_CATEGORIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/event/mod.rs b/src/service/helpdesk/v1/event/mod.rs
-index 115f360..6ed9473 100644
---- a/src/service/helpdesk/v1/event/mod.rs
-+++ b/src/service/helpdesk/v1/event/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -82,7 +83,7 @@ impl EventService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/events/subscribe".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_EVENTS_SUBSCRIBE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -120,7 +121,7 @@ impl EventService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/events/unsubscribe".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_EVENTS_UNSUBSCRIBE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-diff --git a/src/service/helpdesk/v1/faq/mod.rs b/src/service/helpdesk/v1/faq/mod.rs
-index b9514b8..0bc33aa 100644
---- a/src/service/helpdesk/v1/faq/mod.rs
-+++ b/src/service/helpdesk/v1/faq/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, BinaryResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -165,7 +166,7 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/faqs".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_FAQ_CREATE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -203,7 +204,11 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/helpdesk/v1/faqs/{faq_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_FAQ_DELETE,
-+                "faq_id",
-+                faq_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -242,7 +247,11 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/helpdesk/v1/faqs/{faq_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_FAQ_UPDATE,
-+                "faq_id",
-+                faq_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -280,7 +289,11 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/faqs/{faq_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_FAQ_GET,
-+                "faq_id",
-+                faq_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -334,7 +347,7 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/faqs".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_FAQS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -373,7 +386,15 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/faqs/{faq_id}/image/{image_key}"),
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(
-+                    Endpoints::HELPDESK_V1_FAQ_IMAGE,
-+                    "faq_id",
-+                    faq_id,
-+                ),
-+                "image_key",
-+                image_key,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -425,7 +446,7 @@ impl FaqService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/faqs/search".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_FAQS_SEARCH.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/notification/mod.rs b/src/service/helpdesk/v1/notification/mod.rs
-index 6cc8735..0b8ecd7 100644
---- a/src/service/helpdesk/v1/notification/mod.rs
-+++ b/src/service/helpdesk/v1/notification/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -123,7 +124,7 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/notifications".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_NOTIFICATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -148,7 +149,11 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/helpdesk/v1/notifications/{notification_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_UPDATE,
-+                "notification_id",
-+                notification_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -172,7 +177,11 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/notifications/{notification_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_GET,
-+                "notification_id",
-+                notification_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -195,7 +204,11 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/helpdesk/v1/notifications/{notification_id}/preview"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_PREVIEW,
-+                "notification_id",
-+                notification_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -218,8 +231,10 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/helpdesk/v1/notifications/{notification_id}/submit_approve"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_SUBMIT_APPROVE,
-+                "notification_id",
-+                notification_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -243,8 +258,10 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/helpdesk/v1/notifications/{notification_id}/cancel_approve"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_CANCEL_APPROVE,
-+                "notification_id",
-+                notification_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -268,8 +285,10 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/helpdesk/v1/notifications/{notification_id}/execute_send"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_EXECUTE_SEND,
-+                "notification_id",
-+                notification_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -293,7 +312,11 @@ impl NotificationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/helpdesk/v1/notifications/{notification_id}/cancel_send"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_NOTIFICATION_CANCEL_SEND,
-+                "notification_id",
-+                notification_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/ticket/mod.rs b/src/service/helpdesk/v1/ticket/mod.rs
-index 6923e3e..fba3ae8 100644
---- a/src/service/helpdesk/v1/ticket/mod.rs
-+++ b/src/service/helpdesk/v1/ticket/mod.rs
-@@ -151,7 +151,11 @@ impl TicketService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/tickets/{ticket_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_TICKET_GET,
-+                "ticket_id",
-+                ticket_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -175,7 +179,11 @@ impl TicketService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PUT,
--            api_path: format!("/open-apis/helpdesk/v1/tickets/{ticket_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_TICKET_GET,
-+                "ticket_id",
-+                ticket_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-diff --git a/src/service/helpdesk/v1/ticket_customized_field/mod.rs b/src/service/helpdesk/v1/ticket_customized_field/mod.rs
-index 7db8d58..26b889e 100644
---- a/src/service/helpdesk/v1/ticket_customized_field/mod.rs
-+++ b/src/service/helpdesk/v1/ticket_customized_field/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -146,7 +147,7 @@ impl TicketCustomizedFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/helpdesk/v1/ticket_customized_fields".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELDS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -184,7 +185,7 @@ impl TicketCustomizedFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/helpdesk/v1/ticket_customized_fields/{field_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_DELETE, "field_id", field_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -223,7 +224,7 @@ impl TicketCustomizedFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/helpdesk/v1/ticket_customized_fields/{field_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_UPDATE, "field_id", field_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -261,7 +262,7 @@ impl TicketCustomizedFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/ticket_customized_fields/{field_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_GET, "field_id", field_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -305,7 +306,7 @@ impl TicketCustomizedFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/helpdesk/v1/ticket_customized_fields".to_string(),
-+            api_path: Endpoints::HELPDESK_V1_TICKET_CUSTOMIZED_FIELDS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/helpdesk/v1/ticket_message/mod.rs b/src/service/helpdesk/v1/ticket_message/mod.rs
-index d76d0d6..1f4d24d 100644
---- a/src/service/helpdesk/v1/ticket_message/mod.rs
-+++ b/src/service/helpdesk/v1/ticket_message/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -120,7 +121,11 @@ impl TicketMessageService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/helpdesk/v1/tickets/{ticket_id}/messages"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_TICKET_MESSAGES,
-+                "ticket_id",
-+                ticket_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -168,7 +173,11 @@ impl TicketMessageService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/helpdesk/v1/tickets/{ticket_id}/messages"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_TICKET_MESSAGES,
-+                "ticket_id",
-+                ticket_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -208,7 +217,11 @@ impl TicketMessageService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/helpdesk/v1/tickets/{ticket_id}/bot_messages"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HELPDESK_V1_TICKET_BOT_MESSAGES,
-+                "ticket_id",
-+                ticket_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-diff --git a/src/service/hire/attachment/mod.rs b/src/service/hire/attachment/mod.rs
-index dc5df67..ccce0bd 100644
---- a/src/service/hire/attachment/mod.rs
-+++ b/src/service/hire/attachment/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -262,7 +263,7 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<AttachmentUploadResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/attachments/upload".to_string(),
-+            api_path: Endpoints::HIRE_V1_ATTACHMENT_UPLOAD.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -308,7 +309,11 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<AttachmentDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/attachments/{attachment_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_ATTACHMENT_GET,
-+                "attachment_id",
-+                attachment_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -372,7 +377,7 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<AttachmentListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/attachments".to_string(),
-+            api_path: Endpoints::HIRE_V1_ATTACHMENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -456,7 +461,11 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<AttachmentOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/attachments/{attachment_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_ATTACHMENT_GET,
-+                "attachment_id",
-+                attachment_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -488,7 +497,11 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<AttachmentOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/attachments/{attachment_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_ATTACHMENT_GET,
-+                "attachment_id",
-+                attachment_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -520,7 +533,11 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<serde_json::Value>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/attachments/{attachment_id}/download"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_ATTACHMENT_DOWNLOAD,
-+                "attachment_id",
-+                attachment_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -552,7 +569,11 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<serde_json::Value>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/attachments/{attachment_id}/preview"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_ATTACHMENT_PREVIEW,
-+                "attachment_id",
-+                attachment_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -606,7 +627,7 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<BatchDownloadResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/attachments/batch_download".to_string(),
-+            api_path: Endpoints::HIRE_V1_ATTACHMENTS_BATCH_DOWNLOAD.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -650,7 +671,7 @@ impl AttachmentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/attachments/batch_delete".to_string(),
-+            api_path: Endpoints::HIRE_V1_ATTACHMENTS_BATCH_DELETE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -694,7 +715,7 @@ impl AttachmentService {
-     ) -> SDKResult<BaseResponse<serde_json::Value>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/attachment_statistics".to_string(),
-+            api_path: Endpoints::HIRE_V1_ATTACHMENT_STATISTICS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/candidate_management/application/mod.rs b/src/service/hire/candidate_management/application/mod.rs
-index d6aed19..c20181d 100644
---- a/src/service/hire/candidate_management/application/mod.rs
-+++ b/src/service/hire/candidate_management/application/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -170,7 +171,7 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<ApplicationOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/applications".to_string(),
-+            api_path: Endpoints::HIRE_V1_APPLICATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -218,7 +219,11 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<ApplicationDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/applications/{application_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_APPLICATION_GET,
-+                "application_id",
-+                application_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -283,7 +288,7 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<ApplicationListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/applications".to_string(),
-+            api_path: Endpoints::HIRE_V1_APPLICATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -362,9 +367,10 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<ApplicationOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/applications/{}/advance",
--                request.application_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_APPLICATION_ADVANCE,
-+                "application_id",
-+                &request.application_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-@@ -420,7 +426,11 @@ impl ApplicationService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/applications/{application_id}/reject"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_APPLICATION_REJECT,
-+                "application_id",
-+                application_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -474,7 +484,11 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<InterviewListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/applications/{application_id}/interviews"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_APPLICATION_INTERVIEWS,
-+                "application_id",
-+                application_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -529,7 +543,7 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<ApplicationOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/offers".to_string(),
-+            api_path: Endpoints::HIRE_V1_OFFERS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -575,7 +589,11 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<OfferDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/applications/{application_id}/offer"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_APPLICATION_OFFER,
-+                "application_id",
-+                application_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -616,9 +634,10 @@ impl ApplicationService {
-     ) -> SDKResult<BaseResponse<ApplicationOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/applications/{}/evaluations",
--                request.application_id
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_APPLICATION_EVALUATIONS,
-+                "application_id",
-+                &request.application_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-diff --git a/src/service/hire/candidate_management/interview/mod.rs b/src/service/hire/candidate_management/interview/mod.rs
-index 3aa4e6e..0db11d2 100644
---- a/src/service/hire/candidate_management/interview/mod.rs
-+++ b/src/service/hire/candidate_management/interview/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -312,7 +313,7 @@ impl InterviewService {
-     ) -> SDKResult<BaseResponse<InterviewOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/interviews".to_string(),
-+            api_path: Endpoints::HIRE_V1_INTERVIEWS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -359,7 +360,11 @@ impl InterviewService {
-     ) -> SDKResult<BaseResponse<InterviewDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/interviews/{interview_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_GET,
-+                "interview_id",
-+                interview_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -423,7 +428,7 @@ impl InterviewService {
-     ) -> SDKResult<BaseResponse<InterviewListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/interviews".to_string(),
-+            api_path: Endpoints::HIRE_V1_INTERVIEWS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -508,7 +513,7 @@ impl InterviewService {
-     ) -> SDKResult<BaseResponse<InterviewOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/interview_arrangements".to_string(),
-+            api_path: Endpoints::HIRE_V1_INTERVIEW_ARRANGEMENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -562,7 +567,7 @@ impl InterviewService {
-     ) -> SDKResult<BaseResponse<InterviewOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/interview_evaluations".to_string(),
-+            api_path: Endpoints::HIRE_V1_INTERVIEW_EVALUATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -603,7 +608,11 @@ impl InterviewService {
-     ) -> SDKResult<BaseResponse<InterviewEvaluationListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/interviews/{interview_id}/evaluations"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_EVALUATIONS_BY_ID,
-+                "interview_id",
-+                interview_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -663,7 +672,11 @@ impl InterviewService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/interviews/{interview_id}/cancel"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_CANCEL,
-+                "interview_id",
-+                interview_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -718,7 +731,11 @@ impl InterviewService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/interviews/{interview_id}/reschedule"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_RESCHEDULE,
-+                "interview_id",
-+                interview_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-diff --git a/src/service/hire/candidate_management/offer/mod.rs b/src/service/hire/candidate_management/offer/mod.rs
-index b84906c..1a16c51 100644
---- a/src/service/hire/candidate_management/offer/mod.rs
-+++ b/src/service/hire/candidate_management/offer/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -342,7 +343,7 @@ impl OfferService {
-     ) -> SDKResult<BaseResponse<OfferOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/offers".to_string(),
-+            api_path: Endpoints::HIRE_V1_OFFERS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -388,7 +389,11 @@ impl OfferService {
-     ) -> SDKResult<BaseResponse<OfferDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/offers/{offer_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_GET,
-+                "offer_id",
-+                offer_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -452,7 +457,7 @@ impl OfferService {
-     ) -> SDKResult<BaseResponse<OfferListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/offers".to_string(),
-+            api_path: Endpoints::HIRE_V1_OFFERS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -542,7 +547,11 @@ impl OfferService {
-     ) -> SDKResult<BaseResponse<OfferOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/offers/{offer_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_GET,
-+                "offer_id",
-+                offer_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -597,7 +606,11 @@ impl OfferService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/offers/{offer_id}/send"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_SEND,
-+                "offer_id",
-+                offer_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -642,7 +655,11 @@ impl OfferService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/offers/{offer_id}/withdraw"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_WITHDRAW,
-+                "offer_id",
-+                offer_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -687,7 +704,7 @@ impl OfferService {
-     ) -> SDKResult<BaseResponse<OfferOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/onboardings".to_string(),
-+            api_path: Endpoints::HIRE_V1_ONBOARDINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -730,7 +747,7 @@ impl OfferService {
-     ) -> SDKResult<BaseResponse<OnboardingListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/onboardings".to_string(),
-+            api_path: Endpoints::HIRE_V1_ONBOARDINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -805,9 +822,14 @@ impl OfferService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/onboardings/{onboarding_id}/progress/{progress_id}"
--            ),
-+            api_path: {
-+                let path = EndpointBuilder::replace_param(
-+                    Endpoints::HIRE_V1_ONBOARDING_PROGRESS,
-+                    "onboarding_id",
-+                    &onboarding_id,
-+                );
-+                EndpointBuilder::replace_param(&path, "progress_id", &progress_id)
-+            },
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-diff --git a/src/service/hire/candidate_management/talent/mod.rs b/src/service/hire/candidate_management/talent/mod.rs
-index 8053991..bd9254b 100644
---- a/src/service/hire/candidate_management/talent/mod.rs
-+++ b/src/service/hire/candidate_management/talent/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         error::LarkAPIError,
-         http::Transport,
-         req_option::RequestOption,
-@@ -176,7 +177,7 @@ impl TalentService {
-     ) -> SDKResult<BaseResponse<TalentOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/talents".to_string(),
-+            api_path: Endpoints::HIRE_V1_TALENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -225,7 +226,11 @@ impl TalentService {
-     ) -> SDKResult<BaseResponse<TalentDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/talents/{talent_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_GET,
-+                "talent_id",
-+                talent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -292,7 +297,7 @@ impl TalentService {
-     ) -> SDKResult<BaseResponse<TalentListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/talents".to_string(),
-+            api_path: Endpoints::HIRE_V1_TALENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -387,7 +392,11 @@ impl TalentService {
-     ) -> SDKResult<BaseResponse<TalentOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/talents/{talent_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_GET,
-+                "talent_id",
-+                talent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -419,7 +428,11 @@ impl TalentService {
-     ) -> SDKResult<BaseResponse<TalentOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/talents/{talent_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_GET,
-+                "talent_id",
-+                talent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -473,7 +486,11 @@ impl TalentService {
-     ) -> SDKResult<BaseResponse<TalentApplicationHistoryResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/talents/{talent_id}/applications"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_APPLICATIONS,
-+                "talent_id",
-+                talent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -539,7 +556,7 @@ impl TalentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/talents/batch_import".to_string(),
-+            api_path: Endpoints::HIRE_V1_TALENTS_BATCH_IMPORT.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-diff --git a/src/service/hire/candidate_management/talent_pool/mod.rs b/src/service/hire/candidate_management/talent_pool/mod.rs
-index 4025083..9778aae 100644
---- a/src/service/hire/candidate_management/talent_pool/mod.rs
-+++ b/src/service/hire/candidate_management/talent_pool/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -230,7 +231,7 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/talent_pools".to_string(),
-+            api_path: Endpoints::HIRE_V1_TALENT_POOLS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -277,7 +278,11 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/talent_pools/{pool_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_POOL_GET,
-+                "pool_id",
-+                pool_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -337,7 +342,7 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/talent_pools".to_string(),
-+            api_path: Endpoints::HIRE_V1_TALENT_POOLS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -423,7 +428,11 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolTalentListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/talent_pools/{pool_id}/talents"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_POOL_TALENTS,
-+                "pool_id",
-+                pool_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -483,7 +492,15 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/talent_pools/{pool_id}/talents/{talent_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(
-+                    Endpoints::HIRE_V1_TALENT_POOL_TALENT_GET,
-+                    "pool_id",
-+                    pool_id,
-+                ),
-+                "talent_id",
-+                talent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -518,7 +535,15 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/talent_pools/{pool_id}/talents/{talent_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(
-+                    Endpoints::HIRE_V1_TALENT_POOL_TALENT_GET,
-+                    "pool_id",
-+                    pool_id,
-+                ),
-+                "talent_id",
-+                talent_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -566,7 +591,11 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/talent_pools/{pool_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_POOL_GET,
-+                "pool_id",
-+                pool_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -598,7 +627,11 @@ impl TalentPoolService {
-     ) -> SDKResult<BaseResponse<TalentPoolOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/talent_pools/{pool_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_TALENT_POOL_GET,
-+                "pool_id",
-+                pool_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/ecological_docking/background_check/mod.rs b/src/service/hire/ecological_docking/background_check/mod.rs
-index 334865a..37188a0 100644
---- a/src/service/hire/ecological_docking/background_check/mod.rs
-+++ b/src/service/hire/ecological_docking/background_check/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -341,7 +342,7 @@ impl BackgroundCheckService {
-     ) -> SDKResult<BaseResponse<BackgroundCheckPackageListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/background_check_packages".to_string(),
-+            api_path: Endpoints::HIRE_V1_BACKGROUND_CHECK_PACKAGES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -440,7 +441,7 @@ impl BackgroundCheckService {
-     ) -> SDKResult<BaseResponse<BackgroundCheckOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/background_check_orders".to_string(),
-+            api_path: Endpoints::HIRE_V1_BACKGROUND_CHECK_ORDERS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -486,7 +487,11 @@ impl BackgroundCheckService {
-     ) -> SDKResult<BaseResponse<BackgroundCheckOrderDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/background_check_orders/{order_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_BACKGROUND_CHECK_ORDER_GET,
-+                "order_id",
-+                order_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -548,7 +553,7 @@ impl BackgroundCheckService {
-     ) -> SDKResult<BaseResponse<BackgroundCheckOrderListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/background_check_orders".to_string(),
-+            api_path: Endpoints::HIRE_V1_BACKGROUND_CHECK_ORDERS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -624,7 +629,11 @@ impl BackgroundCheckService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/background_check_orders/{order_id}/cancel"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_BACKGROUND_CHECK_ORDER_CANCEL,
-+                "order_id",
-+                order_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -656,7 +665,11 @@ impl BackgroundCheckService {
-     ) -> SDKResult<BaseResponse<serde_json::Value>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/background_check_orders/{order_id}/report"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_BACKGROUND_CHECK_ORDER_REPORT,
-+                "order_id",
-+                order_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -707,7 +720,7 @@ impl BackgroundCheckService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/background_check_orders/batch".to_string(),
-+            api_path: Endpoints::HIRE_V1_BACKGROUND_CHECK_ORDERS_BATCH.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-diff --git a/src/service/hire/ecological_docking/exam/mod.rs b/src/service/hire/ecological_docking/exam/mod.rs
-index 9d50b16..b963550 100644
---- a/src/service/hire/ecological_docking/exam/mod.rs
-+++ b/src/service/hire/ecological_docking/exam/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -348,7 +349,7 @@ impl ExamService {
-     ) -> SDKResult<BaseResponse<ExamPaperListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/exam_papers".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXAM_PAPERS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -437,7 +438,7 @@ impl ExamService {
-     ) -> SDKResult<BaseResponse<ExamOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/exam_arrangements".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXAM_ARRANGEMENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -483,7 +484,11 @@ impl ExamService {
-     ) -> SDKResult<BaseResponse<ExamRecordDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/exam_records/{record_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_EXAM_RECORD_GET,
-+                "record_id",
-+                record_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -547,7 +552,7 @@ impl ExamService {
-     ) -> SDKResult<BaseResponse<ExamRecordListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/exam_records".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXAM_RECORDS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -630,7 +635,7 @@ impl ExamService {
-     ) -> SDKResult<BaseResponse<ExamOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/exam_submissions".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXAM_SUBMISSIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -675,7 +680,11 @@ impl ExamService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/exam_records/{record_id}/cancel"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_EXAM_RECORD_CANCEL,
-+                "record_id",
-+                record_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -730,7 +739,11 @@ impl ExamService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/exam_records/{record_id}/reschedule"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_EXAM_RECORD_RESCHEDULE,
-+                "record_id",
-+                record_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -774,7 +787,7 @@ impl ExamService {
-     ) -> SDKResult<BaseResponse<serde_json::Value>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/exam_statistics".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXAM_STATISTICS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/get_candidates/agency/mod.rs b/src/service/hire/get_candidates/agency/mod.rs
-index ccd13c8..82c2efb 100644
---- a/src/service/hire/get_candidates/agency/mod.rs
-+++ b/src/service/hire/get_candidates/agency/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -357,7 +358,7 @@ impl AgencyService {
-     ) -> SDKResult<BaseResponse<AgencyOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/agencies".to_string(),
-+            api_path: Endpoints::HIRE_V1_AGENCIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -419,7 +420,7 @@ impl AgencyService {
-     ) -> SDKResult<BaseResponse<AgencyListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/agencies".to_string(),
-+            api_path: Endpoints::HIRE_V1_AGENCIES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -497,7 +498,7 @@ impl AgencyService {
-     ) -> SDKResult<BaseResponse<AgencyOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/agency_recommendations".to_string(),
-+            api_path: Endpoints::HIRE_V1_AGENCY_RECOMMENDATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -540,7 +541,7 @@ impl AgencyService {
-     ) -> SDKResult<BaseResponse<AgencyRecommendationListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/agency_recommendations".to_string(),
-+            api_path: Endpoints::HIRE_V1_AGENCY_RECOMMENDATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -618,7 +619,7 @@ impl AgencyService {
-     ) -> SDKResult<BaseResponse<AgencyOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/agency_consultants".to_string(),
-+            api_path: Endpoints::HIRE_V1_AGENCY_CONSULTANTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -654,7 +655,11 @@ impl AgencyService {
-     ) -> SDKResult<BaseResponse<AgencyConsultantListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/agencies/{agency_id}/consultants"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_AGENCIES_CONSULTANTS,
-+                "agency_id",
-+                agency_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -712,8 +717,10 @@ impl AgencyService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/agency_recommendations/{recommendation_id}/confirm"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_AGENCY_RECOMMENDATION_CONFIRM,
-+                "recommendation_id",
-+                recommendation_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-@@ -769,8 +776,10 @@ impl AgencyService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/agency_recommendations/{recommendation_id}/reject"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_AGENCY_RECOMMENDATION_REJECT,
-+                "recommendation_id",
-+                recommendation_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-diff --git a/src/service/hire/get_candidates/external_system/mod.rs b/src/service/hire/get_candidates/external_system/mod.rs
-index e4dc936..9cc9e79 100644
---- a/src/service/hire/get_candidates/external_system/mod.rs
-+++ b/src/service/hire/get_candidates/external_system/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -319,7 +320,7 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/external_systems".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXTERNAL_SYSTEMS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -377,7 +378,7 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemConfigListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/external_systems".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXTERNAL_SYSTEMS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -442,7 +443,7 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/external_systems/sync_tasks".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXTERNAL_SYSTEMS_SYNC_TASKS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -504,7 +505,7 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemSyncRecordListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/external_systems/sync_records".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXTERNAL_SYSTEMS_SYNC_RECORDS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -585,7 +586,7 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/external_systems/candidates/import".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXTERNAL_SYSTEMS_CANDIDATES_IMPORT.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -646,7 +647,7 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalCandidateListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/external_systems/candidates".to_string(),
-+            api_path: Endpoints::HIRE_V1_EXTERNAL_SYSTEMS_CANDIDATES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -706,8 +707,10 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/external_systems/candidates/{external_candidate_id}/convert"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_EXTERNAL_SYSTEMS_CANDIDATES_CONVERT,
-+                "external_candidate_id",
-+                external_candidate_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-@@ -743,8 +746,10 @@ impl ExternalSystemService {
-     ) -> SDKResult<BaseResponse<ExternalSystemOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/external_systems/{system_config_id}/test_connection"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_EXTERNAL_SYSTEMS_TEST_CONNECTION,
-+                "system_config_id",
-+                system_config_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-diff --git a/src/service/hire/get_candidates/referral/mod.rs b/src/service/hire/get_candidates/referral/mod.rs
-index 14a6bc5..177e7a7 100644
---- a/src/service/hire/get_candidates/referral/mod.rs
-+++ b/src/service/hire/get_candidates/referral/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -250,7 +251,7 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/referrals".to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRALS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -297,7 +298,11 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/referrals/{referral_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_REFERRAL_GET,
-+                "referral_id",
-+                &referral_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -361,7 +366,7 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/referrals".to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRALS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -440,7 +445,7 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/referral_accounts".to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRAL_ACCOUNTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -486,7 +491,11 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralAccountDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/referral_accounts/{user_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_REFERRAL_ACCOUNT_GET,
-+                "user_id",
-+                &user_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -541,7 +550,11 @@ impl ReferralService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/referrals/{referral_id}/grant_reward"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_REFERRAL_GRANT_REWARD,
-+                "referral_id",
-+                &referral_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -583,7 +596,7 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/referral_reward_settings".to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRAL_REWARD_SETTINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -629,7 +642,7 @@ impl ReferralService {
-     ) -> SDKResult<BaseResponse<ReferralRewardSettingsListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/referral_reward_settings".to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRAL_REWARD_SETTINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/get_candidates/website/mod.rs b/src/service/hire/get_candidates/website/mod.rs
-index 628c176..116567a 100644
---- a/src/service/hire/get_candidates/website/mod.rs
-+++ b/src/service/hire/get_candidates/website/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -298,7 +299,7 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteJobListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/website/jobs".to_string(),
-+            api_path: Endpoints::HIRE_V1_WEBSITE_JOBS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -377,7 +378,7 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/website/jobs/publish".to_string(),
-+            api_path: Endpoints::HIRE_V1_WEBSITE_JOBS_PUBLISH.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -409,7 +410,11 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/website/jobs/{job_id}/unpublish"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_WEBSITE_JOB_UNPUBLISH,
-+                "job_id",
-+                job_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -474,7 +479,7 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteApplicationListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/website/applications".to_string(),
-+            api_path: Endpoints::HIRE_V1_WEBSITE_APPLICATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -561,7 +566,7 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteConfigurationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/website/configuration".to_string(),
-+            api_path: Endpoints::HIRE_V1_WEBSITE_CONFIGURATION.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -634,7 +639,7 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/website/configuration".to_string(),
-+            api_path: Endpoints::HIRE_V1_WEBSITE_CONFIGURATION.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -666,8 +671,10 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<WebsiteOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/hire/v1/website/applications/{website_application_id}/convert"
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_WEBSITE_APPLICATION_CONVERT,
-+                "website_application_id",
-+                &website_application_id,
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-@@ -712,7 +719,7 @@ impl WebsiteService {
-     ) -> SDKResult<BaseResponse<serde_json::Value>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/website/statistics".to_string(),
-+            api_path: Endpoints::HIRE_V1_WEBSITE_STATISTICS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/application.rs b/src/service/hire/recruitment_config/application.rs
-index fa41a30..711cc5d 100644
---- a/src/service/hire/recruitment_config/application.rs
-+++ b/src/service/hire/recruitment_config/application.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -74,7 +75,7 @@ impl ApplicationConfigService {
-     ) -> SDKResult<BaseResponse<TalentTagListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/talent_tags".to_string(),
-+            api_path: Endpoints::HIRE_V1_TALENT_TAGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -119,7 +120,7 @@ impl ApplicationConfigService {
-     ) -> SDKResult<BaseResponse<RegistrationFormListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/registration_forms".to_string(),
-+            api_path: Endpoints::HIRE_V1_REGISTRATION_FORMS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/auth/mod.rs b/src/service/hire/recruitment_config/auth/mod.rs
-index 81b1803..4903721 100644
---- a/src/service/hire/recruitment_config/auth/mod.rs
-+++ b/src/service/hire/recruitment_config/auth/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -88,7 +89,11 @@ impl AuthService {
-     ) -> SDKResult<BaseResponse<RoleDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/roles/{role_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_ROLE_GET,
-+                "role_id",
-+                role_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -126,7 +131,7 @@ impl AuthService {
-     ) -> SDKResult<BaseResponse<RoleListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/roles".to_string(),
-+            api_path: Endpoints::HIRE_V1_ROLES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -169,7 +174,11 @@ impl AuthService {
-     ) -> SDKResult<BaseResponse<UserRoleListResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/users/{user_id}/roles"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_USER_ROLES,
-+                "user_id",
-+                user_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/interview_settings/mod.rs b/src/service/hire/recruitment_config/interview_settings/mod.rs
-index 04fd57c..ba52c27 100644
---- a/src/service/hire/recruitment_config/interview_settings/mod.rs
-+++ b/src/service/hire/recruitment_config/interview_settings/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -271,7 +272,7 @@ impl InterviewSettingsService {
-     ) -> SDKResult<BaseResponse<InterviewSettingsOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/interview_settings".to_string(),
-+            api_path: Endpoints::HIRE_V1_INTERVIEW_SETTINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -319,7 +320,11 @@ impl InterviewSettingsService {
-     ) -> SDKResult<BaseResponse<InterviewSettingsDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/interview_settings/{settings_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_SETTING_GET,
-+                "settings_id",
-+                settings_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -377,7 +382,7 @@ impl InterviewSettingsService {
-     ) -> SDKResult<BaseResponse<InterviewSettingsListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/interview_settings".to_string(),
-+            api_path: Endpoints::HIRE_V1_INTERVIEW_SETTINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -459,7 +464,11 @@ impl InterviewSettingsService {
-     ) -> SDKResult<BaseResponse<InterviewSettingsOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/interview_settings/{settings_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_SETTING_GET,
-+                "settings_id",
-+                settings_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -491,7 +500,11 @@ impl InterviewSettingsService {
-     ) -> SDKResult<BaseResponse<InterviewSettingsOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/interview_settings/{settings_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_INTERVIEW_SETTING_GET,
-+                "settings_id",
-+                settings_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/job/mod.rs b/src/service/hire/recruitment_config/job/mod.rs
-index a42c9bd..efde747 100644
---- a/src/service/hire/recruitment_config/job/mod.rs
-+++ b/src/service/hire/recruitment_config/job/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -121,7 +122,7 @@ impl JobService {
-     ) -> SDKResult<BaseResponse<JobOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/jobs/combined_create".to_string(),
-+            api_path: Endpoints::HIRE_V1_JOB_COMBINED_CREATE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -170,7 +171,11 @@ impl JobService {
-     ) -> SDKResult<BaseResponse<JobOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/jobs/{}/combined_update", request.job_id),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_COMBINED_UPDATE,
-+                "job_id",
-+                &request.job_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -218,7 +223,11 @@ impl JobService {
-     ) -> SDKResult<BaseResponse<JobDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/jobs/{job_id}/get_detail"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_GET_DETAIL,
-+                "job_id",
-+                job_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -281,7 +290,7 @@ impl JobService {
-     ) -> SDKResult<BaseResponse<JobListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/jobs".to_string(),
-+            api_path: Endpoints::HIRE_V1_JOBS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -348,7 +357,11 @@ impl JobService {
-     ) -> SDKResult<BaseResponse<JobOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/jobs/{job_id}/close"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_CLOSE,
-+                "job_id",
-+                job_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -380,7 +393,7 @@ impl JobService {
-     ) -> SDKResult<BaseResponse<JobOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/jobs/{job_id}/open"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::HIRE_V1_JOB_OPEN, "job_id", job_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/job_process/mod.rs b/src/service/hire/recruitment_config/job_process/mod.rs
-index 2310e8f..4850c18 100644
---- a/src/service/hire/recruitment_config/job_process/mod.rs
-+++ b/src/service/hire/recruitment_config/job_process/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -249,7 +250,7 @@ impl JobProcessService {
-     ) -> SDKResult<BaseResponse<JobProcessOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/job_processes".to_string(),
-+            api_path: Endpoints::HIRE_V1_JOB_PROCESSES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -295,7 +296,11 @@ impl JobProcessService {
-     ) -> SDKResult<BaseResponse<JobProcessDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/job_processes/{process_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_PROCESS_GET,
-+                "process_id",
-+                process_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -353,7 +358,7 @@ impl JobProcessService {
-     ) -> SDKResult<BaseResponse<JobProcessListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/job_processes".to_string(),
-+            api_path: Endpoints::HIRE_V1_JOB_PROCESSES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -421,7 +426,11 @@ impl JobProcessService {
-     ) -> SDKResult<BaseResponse<JobProcessOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/job_processes/{process_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_PROCESS_GET,
-+                "process_id",
-+                process_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -453,7 +462,11 @@ impl JobProcessService {
-     ) -> SDKResult<BaseResponse<JobProcessOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/job_processes/{process_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_PROCESS_GET,
-+                "process_id",
-+                process_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/job_requirement/mod.rs b/src/service/hire/recruitment_config/job_requirement/mod.rs
-index f9c251e..b65c37c 100644
---- a/src/service/hire/recruitment_config/job_requirement/mod.rs
-+++ b/src/service/hire/recruitment_config/job_requirement/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -114,8 +115,8 @@ impl JobRequirementService {
-     ///     name: "急招Java高级工程师".to_string(),
-     ///     job_id: "job_123456".to_string(),
-     ///     headcount: 3,
--    ///     description: Some("项目紧急需求，要求有微服务架构经验".to_string()),
--    ///     expected_entry_time: Some("2024-02-01".to_string()),
-+    ///     description: Some("项目紧急需求，要求有微服务架构经验".to_string(),
-+    ///     expected_entry_time: Some("2024-02-01".to_string(),
-     /// };
-     ///
-     /// let response = client.hire.recruitment_config.job_requirement.create_requirement(request, None).await?;
-@@ -127,7 +128,7 @@ impl JobRequirementService {
-     ) -> SDKResult<BaseResponse<JobRequirementOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/job_requirements".to_string(),
-+            api_path: Endpoints::HIRE_V1_JOB_REQUIREMENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -173,7 +174,11 @@ impl JobRequirementService {
-     ) -> SDKResult<BaseResponse<JobRequirementDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/job_requirements/{requirement_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_REQUIREMENT_GET,
-+                "requirement_id",
-+                requirement_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -211,8 +216,8 @@ impl JobRequirementService {
-     /// let request = JobRequirementListRequest {
-     ///     page_size: Some(50),
-     ///     page_token: None,
--    ///     job_id: Some("job_123456".to_string()),
--    ///     status: Some("active".to_string()),
-+    ///     job_id: Some("job_123456".to_string(),
-+    ///     status: Some("active".to_string(),
-     /// };
-     ///
-     /// let response = client.hire.recruitment_config.job_requirement.list_requirements(request, None).await?;
-@@ -231,7 +236,7 @@ impl JobRequirementService {
-     ) -> SDKResult<BaseResponse<JobRequirementListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/job_requirements".to_string(),
-+            api_path: Endpoints::HIRE_V1_JOB_REQUIREMENTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -280,8 +285,8 @@ impl JobRequirementService {
-     ///     name: "急招Java架构师".to_string(),
-     ///     job_id: "job_123456".to_string(),
-     ///     headcount: 2,
--    ///     description: Some("项目技术难度较高，需要有分布式系统设计经验".to_string()),
--    ///     expected_entry_time: Some("2024-01-15".to_string()),
-+    ///     description: Some("项目技术难度较高，需要有分布式系统设计经验".to_string(),
-+    ///     expected_entry_time: Some("2024-01-15".to_string(),
-     /// };
-     ///
-     /// let response = client.hire.recruitment_config.job_requirement.update_requirement(requirement_id, request, None).await?;
-@@ -294,7 +299,11 @@ impl JobRequirementService {
-     ) -> SDKResult<BaseResponse<JobRequirementOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/job_requirements/{requirement_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_REQUIREMENT_GET,
-+                "requirement_id",
-+                requirement_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -326,7 +335,11 @@ impl JobRequirementService {
-     ) -> SDKResult<BaseResponse<JobRequirementOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/job_requirements/{requirement_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_JOB_REQUIREMENT_GET,
-+                "requirement_id",
-+                requirement_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/location/mod.rs b/src/service/hire/recruitment_config/location/mod.rs
-index 75ceac7..cf49f3c 100644
---- a/src/service/hire/recruitment_config/location/mod.rs
-+++ b/src/service/hire/recruitment_config/location/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -73,7 +74,7 @@ impl LocationService {
-     ) -> SDKResult<BaseResponse<LocationListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/locations/query".to_string(),
-+            api_path: Endpoints::HIRE_V1_LOCATIONS_QUERY.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -121,7 +122,7 @@ impl LocationService {
-     ) -> SDKResult<BaseResponse<LocationListResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/locations".to_string(),
-+            api_path: Endpoints::HIRE_V1_LOCATIONS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/offer_settings/mod.rs b/src/service/hire/recruitment_config/offer_settings/mod.rs
-index 0dd18d7..1dfcdf0 100644
---- a/src/service/hire/recruitment_config/offer_settings/mod.rs
-+++ b/src/service/hire/recruitment_config/offer_settings/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -266,8 +267,8 @@ impl OfferSettingsService {
-     ///
-     /// let request = OfferSettingsCreateRequest {
-     ///     name: I18nText {
--    ///         zh_cn: Some("技术岗位Offer设置".to_string()),
--    ///         en_us: Some("Technical Position Offer Settings".to_string()),
-+    ///         zh_cn: Some("技术岗位Offer设置".to_string(),
-+    ///         en_us: Some("Technical Position Offer Settings".to_string(),
-     ///         ja_jp: None,
-     ///     },
-     ///     applicable_job_types: vec!["software_engineer".to_string()],
-@@ -301,7 +302,7 @@ impl OfferSettingsService {
-     ) -> SDKResult<BaseResponse<OfferSettingsOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/offer_settings".to_string(),
-+            api_path: Endpoints::HIRE_V1_OFFER_SETTINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -350,7 +351,11 @@ impl OfferSettingsService {
-     ) -> SDKResult<BaseResponse<OfferSettingsDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/offer_settings/{settings_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_SETTING_GET,
-+                "settings_id",
-+                settings_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -388,8 +393,8 @@ impl OfferSettingsService {
-     /// let request = OfferSettingsListRequest {
-     ///     page_size: Some(50),
-     ///     page_token: None,
--    ///     job_type: Some("software_engineer".to_string()),
--    ///     status: Some("active".to_string()),
-+    ///     job_type: Some("software_engineer".to_string(),
-+    ///     status: Some("active".to_string(),
-     /// };
-     ///
-     /// let response = client.hire.recruitment_config.offer_settings.list_settings(request, None).await?;
-@@ -408,7 +413,7 @@ impl OfferSettingsService {
-     ) -> SDKResult<BaseResponse<OfferSettingsListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/offer_settings".to_string(),
-+            api_path: Endpoints::HIRE_V1_OFFER_SETTINGS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -458,8 +463,8 @@ impl OfferSettingsService {
-     /// let settings_id = "settings_123456";
-     /// let request = OfferSettingsCreateRequest {
-     ///     name: I18nText {
--    ///         zh_cn: Some("高级技术岗位Offer设置".to_string()),
--    ///         en_us: Some("Senior Technical Position Offer Settings".to_string()),
-+    ///         zh_cn: Some("高级技术岗位Offer设置".to_string(),
-+    ///         en_us: Some("Senior Technical Position Offer Settings".to_string(),
-     ///         ja_jp: None,
-     ///     },
-     ///     applicable_job_types: vec!["senior_engineer".to_string()],
-@@ -482,7 +487,11 @@ impl OfferSettingsService {
-     ) -> SDKResult<BaseResponse<OfferSettingsOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/offer_settings/{settings_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_SETTING_GET,
-+                "settings_id",
-+                settings_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -514,7 +523,11 @@ impl OfferSettingsService {
-     ) -> SDKResult<BaseResponse<OfferSettingsOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/offer_settings/{settings_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_OFFER_SETTING_GET,
-+                "settings_id",
-+                settings_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/recruitment_config/subject/mod.rs b/src/service/hire/recruitment_config/subject/mod.rs
-index aae60e1..412c88b 100644
---- a/src/service/hire/recruitment_config/subject/mod.rs
-+++ b/src/service/hire/recruitment_config/subject/mod.rs
-@@ -7,6 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -179,20 +180,20 @@ impl SubjectService {
-     ///
-     /// let request = SubjectCreateRequest {
-     ///     name: I18nText {
--    ///         zh_cn: Some("2024年春季校园招聘".to_string()),
--    ///         en_us: Some("2024 Spring Campus Recruitment".to_string()),
-+    ///         zh_cn: Some("2024年春季校园招聘".to_string(),
-+    ///         en_us: Some("2024 Spring Campus Recruitment".to_string(),
-     ///         ja_jp: None,
-     ///     },
-     ///     subject_type: "campus_recruitment".to_string(),
-     ///     description: Some(I18nText {
--    ///         zh_cn: Some("面向应届毕业生的春季招聘项目".to_string()),
--    ///         en_us: Some("Spring recruitment project for fresh graduates".to_string()),
-+    ///         zh_cn: Some("面向应届毕业生的春季招聘项目".to_string(),
-+    ///         en_us: Some("Spring recruitment project for fresh graduates".to_string(),
-     ///         ja_jp: None,
-     ///     }),
--    ///     owner_id: Some("user_123456".to_string()),
-+    ///     owner_id: Some("user_123456".to_string(),
-     ///     member_ids: vec!["user_789".to_string(), "user_456".to_string()],
--    ///     start_time: Some("2024-02-01T00:00:00Z".to_string()),
--    ///     end_time: Some("2024-05-31T23:59:59Z".to_string()),
-+    ///     start_time: Some("2024-02-01T00:00:00Z".to_string(),
-+    ///     end_time: Some("2024-05-31T23:59:59Z".to_string(),
-     ///     ..Default::default()
-     /// };
-     ///
-@@ -205,7 +206,7 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/hire/v1/subjects".to_string(),
-+            api_path: Endpoints::HIRE_V1_SUBJECTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -252,7 +253,11 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectDetailResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/subjects/{subject_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_SUBJECT_GET,
-+                "subject_id",
-+                subject_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -291,9 +296,9 @@ impl SubjectService {
-     /// let request = SubjectListRequest {
-     ///     page_size: Some(50),
-     ///     page_token: None,
--    ///     subject_type: Some("campus_recruitment".to_string()),
--    ///     status: Some("active".to_string()),
--    ///     owner_id: Some("user_123456".to_string()),
-+    ///     subject_type: Some("campus_recruitment".to_string(),
-+    ///     status: Some("active".to_string(),
-+    ///     owner_id: Some("user_123456".to_string(),
-     /// };
-     ///
-     /// let response = client.hire.recruitment_config.subject.list_subjects(request, None).await?;
-@@ -312,7 +317,7 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/hire/v1/subjects".to_string(),
-+            api_path: Endpoints::HIRE_V1_SUBJECTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -364,8 +369,8 @@ impl SubjectService {
-     /// let subject_id = "subject_123456";
-     /// let request = SubjectCreateRequest {
-     ///     name: I18nText {
--    ///         zh_cn: Some("2024年春季校园招聘(更新)".to_string()),
--    ///         en_us: Some("2024 Spring Campus Recruitment (Updated)".to_string()),
-+    ///         zh_cn: Some("2024年春季校园招聘(更新)".to_string(),
-+    ///         en_us: Some("2024 Spring Campus Recruitment (Updated)".to_string(),
-     ///         ja_jp: None,
-     ///     },
-     ///     subject_type: "campus_recruitment".to_string(),
-@@ -383,7 +388,11 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/subjects/{subject_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_SUBJECT_GET,
-+                "subject_id",
-+                subject_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -415,7 +424,11 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/hire/v1/subjects/{subject_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_SUBJECT_GET,
-+                "subject_id",
-+                subject_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -447,7 +460,11 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/subjects/{subject_id}/enable"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_SUBJECT_ENABLE,
-+                "subject_id",
-+                subject_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -479,7 +496,11 @@ impl SubjectService {
-     ) -> SDKResult<BaseResponse<SubjectOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/subjects/{subject_id}/disable"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_V1_SUBJECT_DISABLE,
-+                "subject_id",
-+                subject_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-diff --git a/src/service/hire/referral_account/mod.rs b/src/service/hire/referral_account/mod.rs
-index 3c317ac..d489743 100644
---- a/src/service/hire/referral_account/mod.rs
-+++ b/src/service/hire/referral_account/mod.rs
-@@ -7,7 +7,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
--        endpoints::Endpoints,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         query_params::QueryParams,
-         req_option::RequestOption,
-@@ -324,7 +324,7 @@ impl ReferralAccountService {
-     ) -> SDKResult<BaseResponse<ReferralAccountOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: Endpoints::HIRE_REFERRAL_ACCOUNTS.to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRAL_ACCOUNTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -382,7 +382,7 @@ impl ReferralAccountService {
-     ) -> SDKResult<BaseResponse<ReferralAccountListResponse>> {
-         let mut api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: Endpoints::HIRE_REFERRAL_ACCOUNTS.to_string(),
-+            api_path: Endpoints::HIRE_V1_REFERRAL_ACCOUNTS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -448,7 +448,11 @@ impl ReferralAccountService {
-     ) -> SDKResult<BaseResponse<ReferralAccountBalanceResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/hire/v1/referral_accounts/{user_id}/balance"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_REFERRAL_ACCOUNT_BALANCE,
-+                "user_id",
-+                user_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -749,7 +753,11 @@ impl ReferralAccountService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/referral_withdrawals/{withdrawal_id}/approve"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_REFERRAL_WITHDRAWAL_APPROVE,
-+                "withdrawal_id",
-+                withdrawal_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-@@ -781,7 +789,11 @@ impl ReferralAccountService {
-     ) -> SDKResult<BaseResponse<ReferralAccountOperationResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/referral_accounts/{user_id}/enable"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_REFERRAL_ACCOUNT_ENABLE,
-+                "user_id",
-+                user_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: vec![],
-             ..Default::default()
-@@ -826,7 +838,11 @@ impl ReferralAccountService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/hire/v1/referral_accounts/{user_id}/disable"),
-+            api_path: EndpointBuilder::replace_param(
-+                Endpoints::HIRE_REFERRAL_ACCOUNT_DISABLE,
-+                "user_id",
-+                user_id,
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant],
-             body: serde_json::to_vec(&request).unwrap_or_default(),
-             ..Default::default()
-diff --git a/src/service/im/v1/batch_message/mod.rs b/src/service/im/v1/batch_message/mod.rs
-index 28fd697..b30cc05 100644
---- a/src/service/im/v1/batch_message/mod.rs
-+++ b/src/service/im/v1/batch_message/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         standard_response::StandardResponse,
-@@ -122,7 +123,7 @@ impl BatchMessageService {
-     ) -> SDKResult<BatchSendMessageResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/im/v1/batch_messages".to_string(),
-+            api_path: Endpoints::IM_V1_BATCH_MESSAGES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([(
-                 "receive_id_type",
-@@ -145,7 +146,7 @@ impl BatchMessageService {
-     ) -> SDKResult<EmptyResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/im/v1/batch_messages/{batch_message_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DELETE_BATCH_MESSAGE, "batch_message_id", batch_message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             ..Default::default()
-         };
-@@ -163,7 +164,7 @@ impl BatchMessageService {
-     ) -> SDKResult<GetBatchProgressResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/im/v1/batch_messages/{batch_message_id}/get_progress"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_BATCH_MESSAGE_PROGRESS, "batch_message_id", batch_message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             ..Default::default()
-         };
-@@ -195,7 +196,7 @@ impl BatchMessageService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/im/v1/batch_messages/{batch_message_id}/read_user"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_BATCH_MESSAGE_READ_USER, "batch_message_id", batch_message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/im/v1/buzz_messages/mod.rs b/src/service/im/v1/buzz_messages/mod.rs
-index 16d71d8..9d29423 100644
---- a/src/service/im/v1/buzz_messages/mod.rs
-+++ b/src/service/im/v1/buzz_messages/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         standard_response::StandardResponse,
-@@ -70,7 +71,7 @@ impl BuzzMessagesService {
-     ) -> SDKResult<UrgentResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_app"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_APP, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
-             body: serde_json::to_vec(&request)?,
-@@ -92,7 +93,7 @@ impl BuzzMessagesService {
-     ) -> SDKResult<UrgentResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_sms"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_SMS, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
-             body: serde_json::to_vec(&request)?,
-@@ -114,7 +115,7 @@ impl BuzzMessagesService {
-     ) -> SDKResult<UrgentResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_phone"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_PHONE, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
-             body: serde_json::to_vec(&request)?,
-diff --git a/src/service/im/v1/chats.rs b/src/service/im/v1/chats.rs
-index fac7a89..2276a92 100644
---- a/src/service/im/v1/chats.rs
-+++ b/src/service/im/v1/chats.rs
-@@ -6,6 +6,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::Endpoints,
-     http::Transport,
-     req_option::RequestOption,
-     standard_response::StandardResponse,
-@@ -27,7 +28,7 @@ impl ChatsService {
-     ) -> SDKResult<ListChatRespData> {
-         let mut api_req = list_chat_request.api_req;
-         api_req.http_method = Method::GET;
--        api_req.api_path = "/open-apis/im/v1/chats".to_string();
-+        api_req.api_path = Endpoints::IM_CHAT_CREATE.to_string();
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         let api_resp: BaseResponse<ListChatRespData> =
-diff --git a/src/service/im/v1/file/mod.rs b/src/service/im/v1/file/mod.rs
-index 4c76789..96594d7 100644
---- a/src/service/im/v1/file/mod.rs
-+++ b/src/service/im/v1/file/mod.rs
-@@ -7,6 +7,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     error::LarkAPIError,
-     http::Transport,
-     req_option::RequestOption,
-@@ -67,7 +68,7 @@ impl FileService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/im/v1/files".to_string(),
-+            api_path: Endpoints::IM_V1_FILES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: file_data,
-@@ -87,7 +88,7 @@ impl FileService {
-     ) -> SDKResult<GetFileResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/im/v1/files/{file_key}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DOWNLOAD_FILE, "file_key", file_key),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             ..Default::default()
-         };
-diff --git a/src/service/im/v1/image/mod.rs b/src/service/im/v1/image/mod.rs
-index 1b5228d..6536a23 100644
---- a/src/service/im/v1/image/mod.rs
-+++ b/src/service/im/v1/image/mod.rs
-@@ -7,6 +7,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     standard_response::StandardResponse,
-@@ -60,7 +61,7 @@ impl ImageService {
-     ) -> SDKResult<CreateImageResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/im/v1/images".to_string(),
-+            api_path: Endpoints::IM_V1_IMAGES.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([("image_type", image_type.to_string())]),
-             body: image_data,
-@@ -80,7 +81,7 @@ impl ImageService {
-     ) -> SDKResult<GetImageResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/im/v1/images/{image_key}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DOWNLOAD_IMAGE, "image_key", image_key),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             ..Default::default()
-         };
-diff --git a/src/service/im/v1/message/list.rs b/src/service/im/v1/message/list.rs
-index 166358e..3f59000 100644
---- a/src/service/im/v1/message/list.rs
-+++ b/src/service/im/v1/message/list.rs
-@@ -6,6 +6,7 @@ use crate::{
-         api_req::ApiRequest,
-         api_resp::{ApiResponseTrait, BaseResponse},
-         constants::AccessTokenType,
-+        endpoints::Endpoints,
-         http::Transport,
-         req_option::RequestOption,
-         standard_response::StandardResponse,
-@@ -212,7 +213,7 @@ impl MessageService {
-     ) -> SDKResult<ListMessageRespData> {
-         let mut api_req = list_message_request.api_req;
-         api_req.http_method = Method::GET;
--        api_req.api_path = "/open-apis/im/v1/messages".to_string();
-+        api_req.api_path = Endpoints::IM_V1_LIST_MESSAGE.to_string();
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         let api_resp: BaseResponse<ListMessageRespData> =
-diff --git a/src/service/im/v1/message/send.rs b/src/service/im/v1/message/send.rs
-index e3baede..7cc8c06 100644
---- a/src/service/im/v1/message/send.rs
-+++ b/src/service/im/v1/message/send.rs
-@@ -2,7 +2,7 @@ use reqwest::Method;
- 
- use crate::{
-     core::{
--        api_resp::BaseResponse, constants::AccessTokenType, http::Transport,
-+        api_resp::BaseResponse, constants::AccessTokenType, endpoints::{EndpointBuilder, Endpoints}, http::Transport,
-         req_option::RequestOption, standard_response::StandardResponse, SDKResult,
-     },
-     service::im::v1::message::{CreateMessageResp, Message},
-@@ -25,7 +25,7 @@ impl MessageService {
-     ) -> SDKResult<Message> {
-         let mut api_req = create_message_request.api_req;
-         api_req.http_method = Method::POST;
--        api_req.api_path = "/open-apis/im/v1/messages".to_string();
-+        api_req.api_path = Endpoints::IM_V1_SEND_MESSAGE.to_string();
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         let api_resp: BaseResponse<CreateMessageResp> =
-@@ -43,7 +43,7 @@ impl MessageService {
-     pub async fn delete(&self, message_id: &str, option: Option<RequestOption>) -> SDKResult<()> {
-         let api_req = crate::core::api_req::ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/im/v1/messages/{}", message_id),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DELETE_MESSAGE, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             ..Default::default()
-         };
-@@ -67,7 +67,7 @@ impl MessageService {
-     ) -> SDKResult<Message> {
-         let mut api_req = update_message_request.api_req;
-         api_req.http_method = Method::PATCH;
--        api_req.api_path = format!("/open-apis/im/v1/messages/{}", message_id);
-+        api_req.api_path = EndpointBuilder::replace_param(Endpoints::IM_V1_UPDATE_MESSAGE, "message_id", message_id);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         let api_resp: BaseResponse<CreateMessageResp> =
-@@ -89,7 +89,7 @@ impl MessageService {
-     ) -> SDKResult<Message> {
-         let mut api_req = reply_message_request.api_req;
-         api_req.http_method = Method::POST;
--        api_req.api_path = format!("/open-apis/im/v1/messages/{}/reply", message_id);
-+        api_req.api_path = EndpointBuilder::replace_param(Endpoints::IM_V1_REPLY_MESSAGE, "message_id", message_id);
-         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
- 
-         let api_resp: BaseResponse<CreateMessageResp> =
-diff --git a/src/service/im/v1/message_card/mod.rs b/src/service/im/v1/message_card/mod.rs
-index 61b2ccb..3a67e72 100644
---- a/src/service/im/v1/message_card/mod.rs
-+++ b/src/service/im/v1/message_card/mod.rs
-@@ -7,6 +7,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -75,7 +76,7 @@ impl MessageCardService {
-     ) -> SDKResult<BaseResponse<EmptyResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_UPDATE_MESSAGE, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-@@ -93,7 +94,7 @@ impl MessageCardService {
-     ) -> SDKResult<BaseResponse<EmptyResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/delay_update"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_DELAY_UPDATE, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-@@ -111,7 +112,7 @@ impl MessageCardService {
-     ) -> SDKResult<BaseResponse<SendVisibleMessageCardResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_app"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_APP, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-@@ -133,7 +134,7 @@ impl MessageCardService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_app"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URGENT_APP, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-diff --git a/src/service/im/v1/message_reaction/mod.rs b/src/service/im/v1/message_reaction/mod.rs
-index bcc81ac..21a49ac 100644
---- a/src/service/im/v1/message_reaction/mod.rs
-+++ b/src/service/im/v1/message_reaction/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         standard_response::StandardResponse,
-@@ -64,7 +65,7 @@ impl MessageReactionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/reactions"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_REACTIONS, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&CreateReactionRequest {
-@@ -100,7 +101,7 @@ impl MessageReactionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/reactions"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_REACTIONS, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -126,7 +127,7 @@ impl MessageReactionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/reactions/{reaction_id}"),
-+            api_path: EndpointBuilder::replace_params_from_array(Endpoints::IM_V1_DELETE_MESSAGE_REACTION, &[("message_id", message_id), ("reaction_id", reaction_id)]),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/im/v1/pin/mod.rs b/src/service/im/v1/pin/mod.rs
-index af13a79..863ee9b 100644
---- a/src/service/im/v1/pin/mod.rs
-+++ b/src/service/im/v1/pin/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         standard_response::StandardResponse,
-@@ -86,7 +87,7 @@ impl PinService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/im/v1/pins".to_string(),
-+            api_path: Endpoints::IM_V1_PINS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -112,7 +113,7 @@ impl PinService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/im/v1/pins/{pin_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_DELETE_PIN, "pin_id", pin_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -146,7 +147,7 @@ impl PinService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: "/open-apis/im/v1/pins".to_string(),
-+            api_path: Endpoints::IM_V1_PINS.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/im/v1/url_preview/mod.rs b/src/service/im/v1/url_preview/mod.rs
-index 97355a3..5b8c8f5 100644
---- a/src/service/im/v1/url_preview/mod.rs
-+++ b/src/service/im/v1/url_preview/mod.rs
-@@ -7,6 +7,7 @@ use crate::core::{
-     api_resp::{BaseResponse, EmptyResponse},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     standard_response::StandardResponse,
-@@ -58,7 +59,7 @@ impl UrlPreviewService {
-     ) -> SDKResult<EmptyResponse> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/im/v1/messages/{message_id}/url_preview/batch_update"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V1_MESSAGE_URL_PREVIEW_BATCH_UPDATE, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-diff --git a/src/service/im/v2/app_feed_card/mod.rs b/src/service/im/v2/app_feed_card/mod.rs
-index bb2696d..c509d05 100644
---- a/src/service/im/v2/app_feed_card/mod.rs
-+++ b/src/service/im/v2/app_feed_card/mod.rs
-@@ -7,6 +7,7 @@ use crate::core::{
-     api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-     config::Config,
-     constants::AccessTokenType,
-+    endpoints::{EndpointBuilder, Endpoints},
-     http::Transport,
-     req_option::RequestOption,
-     SDKResult,
-@@ -88,7 +89,7 @@ impl AppFeedCardService {
-     ) -> SDKResult<BaseResponse<CreateAppFeedCardResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/im/v2/app_feed_card".to_string(),
-+            api_path: Endpoints::IM_V2_APP_FEED_CARD.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-@@ -106,7 +107,7 @@ impl AppFeedCardService {
-     ) -> SDKResult<BaseResponse<UpdateAppFeedCardResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::PUT,
--            api_path: format!("/open-apis/im/v2/app_feed_card/{card_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V2_GET_APP_FEED_CARD, "card_id", card_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-@@ -123,7 +124,7 @@ impl AppFeedCardService {
-     ) -> SDKResult<BaseResponse<EmptyResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/im/v2/app_feed_card/{card_id}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V2_DELETE_APP_FEED_CARD, "card_id", card_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             ..Default::default()
-         };
-diff --git a/src/service/im/v2/groups_bots/mod.rs b/src/service/im/v2/groups_bots/mod.rs
-index d1bd891..f533692 100644
---- a/src/service/im/v2/groups_bots/mod.rs
-+++ b/src/service/im/v2/groups_bots/mod.rs
-@@ -9,6 +9,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -119,7 +120,7 @@ impl GroupsBotsService {
-     ) -> SDKResult<BaseResponse<BotTimeSentiveResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: "/open-apis/im/v2/groups-bots/bot_time_sentive".to_string(),
-+            api_path: Endpoints::IM_V2_GROUPS_BOTS_TIME_SENSITIVE.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([(
-                 "receive_id_type",
-@@ -141,7 +142,7 @@ impl GroupsBotsService {
-     ) -> SDKResult<BaseResponse<UpdateFeedCardButtonResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::PUT,
--            api_path: format!("/open-apis/im/v2/groups-bots/{message_id}/update"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::IM_V2_GROUPS_BOTS_UPDATE, "message_id", message_id),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             body: serde_json::to_vec(&request)?,
-             ..Default::default()
-@@ -159,7 +160,7 @@ impl GroupsBotsService {
-     ) -> SDKResult<BaseResponse<TimelyReminderResponse>> {
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: "/open-apis/im/v2/groups-bots/patch".to_string(),
-+            api_path: Endpoints::IM_V2_GROUPS_BOTS_PATCH.to_string(),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params: HashMap::from([(
-                 "receive_id_type",
-diff --git a/src/service/task/v2/attachment/mod.rs b/src/service/task/v2/attachment/mod.rs
-index cb2ab36..4ac4734 100644
---- a/src/service/task/v2/attachment/mod.rs
-+++ b/src/service/task/v2/attachment/mod.rs
-@@ -8,7 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
--        endpoints::Endpoints,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -156,7 +156,7 @@ impl AttachmentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/attachments/{attachment_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_ATTACHMENT_GET, "attachment_guid", attachment_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -179,7 +179,7 @@ impl AttachmentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/task/v2/attachments/{attachment_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_ATTACHMENT_GET, "attachment_guid", attachment_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/task/v2/comment/mod.rs b/src/service/task/v2/comment/mod.rs
-index fd840ae..3aa7d65 100644
---- a/src/service/task/v2/comment/mod.rs
-+++ b/src/service/task/v2/comment/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -115,7 +116,7 @@ impl CommentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/comments"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENTS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -140,7 +141,10 @@ impl CommentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/comments/{comment_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENT_GET, "task_guid", task_guid),
-+                "comment_id", comment_id
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -165,7 +169,10 @@ impl CommentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/comments/{comment_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENT_GET, "task_guid", task_guid),
-+                "comment_id", comment_id
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -190,7 +197,10 @@ impl CommentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/comments/{comment_id}"),
-+            api_path: EndpointBuilder::replace_param(
-+                EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENT_GET, "task_guid", task_guid),
-+                "comment_id", comment_id
-+            ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -221,7 +231,7 @@ impl CommentService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/comments"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_COMMENTS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/task/v2/custom_field/mod.rs b/src/service/task/v2/custom_field/mod.rs
-index ee0532f..0860fce 100644
---- a/src/service/task/v2/custom_field/mod.rs
-+++ b/src/service/task/v2/custom_field/mod.rs
-@@ -8,7 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
--        endpoints::Endpoints,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -161,7 +161,7 @@ impl CustomFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/custom_fields/{custom_field_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_GET, "custom_field_guid", custom_field_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -185,7 +185,7 @@ impl CustomFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/task/v2/custom_fields/{custom_field_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_GET, "custom_field_guid", custom_field_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -248,7 +248,7 @@ impl CustomFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/custom_fields/{custom_field_guid}/add"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_ADD, "custom_field_guid", custom_field_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -273,7 +273,7 @@ impl CustomFieldService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/custom_fields/{custom_field_guid}/remove"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_REMOVE, "custom_field_guid", custom_field_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-diff --git a/src/service/task/v2/custom_field_option/mod.rs b/src/service/task/v2/custom_field_option/mod.rs
-index 32aee14..3d8924e 100644
---- a/src/service/task/v2/custom_field_option/mod.rs
-+++ b/src/service/task/v2/custom_field_option/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -87,7 +88,7 @@ impl CustomFieldOptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/custom_fields/{custom_field_guid}/options"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_OPTIONS, "custom_field_guid", custom_field_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -113,8 +114,9 @@ impl CustomFieldOptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!(
--                "/open-apis/task/v2/custom_fields/{custom_field_guid}/options/{option_guid}"
-+            api_path: EndpointBuilder::replace_param(
-+                EndpointBuilder::replace_param(Endpoints::TASK_V2_CUSTOM_FIELD_OPTION_GET, "custom_field_guid", custom_field_guid),
-+                "option_guid", option_guid
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-diff --git a/src/service/task/v2/section/mod.rs b/src/service/task/v2/section/mod.rs
-index 891a814..e605a18 100644
---- a/src/service/task/v2/section/mod.rs
-+++ b/src/service/task/v2/section/mod.rs
-@@ -8,7 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
--        endpoints::Endpoints,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -157,7 +157,7 @@ impl SectionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/sections/{section_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_GET, "section_guid", section_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -181,7 +181,7 @@ impl SectionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/task/v2/sections/{section_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_GET, "section_guid", section_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -205,7 +205,7 @@ impl SectionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/task/v2/sections/{section_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_GET, "section_guid", section_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -297,7 +297,7 @@ impl SectionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/sections/{section_guid}/tasks"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_SECTION_TASKS, "section_guid", section_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/task/v2/task/mod.rs b/src/service/task/v2/task/mod.rs
-index 9c8c399..4c8d50a 100644
---- a/src/service/task/v2/task/mod.rs
-+++ b/src/service/task/v2/task/mod.rs
-@@ -8,7 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
--        endpoints::Endpoints,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -342,7 +342,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_GET, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -366,7 +366,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_GET, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -389,7 +389,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_GET, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -472,7 +472,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/add_members"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_ADD_MEMBERS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -497,7 +497,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/remove_members"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_REMOVE_MEMBERS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -522,7 +522,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/add_reminders"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_ADD_REMINDERS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -547,7 +547,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/remove_reminders"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_REMOVE_REMINDERS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -572,7 +572,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/add_dependencies"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_ADD_DEPENDENCIES, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -597,7 +597,7 @@ impl TaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/remove_dependencies"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_REMOVE_DEPENDENCIES, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-diff --git a/src/service/task/v2/task_subtask/mod.rs b/src/service/task/v2/task_subtask/mod.rs
-index 3d984ad..2ed714e 100644
---- a/src/service/task/v2/task_subtask/mod.rs
-+++ b/src/service/task/v2/task_subtask/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -82,7 +83,7 @@ impl TaskSubtaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/subtasks"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_SUBTASKS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -114,7 +115,7 @@ impl TaskSubtaskService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/tasks/{task_guid}/subtasks"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASK_SUBTASKS, "task_guid", task_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/task/v2/tasklist/mod.rs b/src/service/task/v2/tasklist/mod.rs
-index 0b932fe..26a1659 100644
---- a/src/service/task/v2/tasklist/mod.rs
-+++ b/src/service/task/v2/tasklist/mod.rs
-@@ -8,7 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
--        endpoints::Endpoints,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -199,7 +199,7 @@ impl TasklistService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/tasklists/{tasklist_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_GET, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -223,7 +223,7 @@ impl TasklistService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!("/open-apis/task/v2/tasklists/{tasklist_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_GET, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -247,7 +247,7 @@ impl TasklistService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!("/open-apis/task/v2/tasklists/{tasklist_guid}"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_GET, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -271,7 +271,7 @@ impl TasklistService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasklists/{tasklist_guid}/add_members"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ADD_MEMBERS, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -296,7 +296,7 @@ impl TasklistService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!("/open-apis/task/v2/tasklists/{tasklist_guid}/remove_members"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_REMOVE_MEMBERS, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -357,7 +357,7 @@ impl TasklistService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!("/open-apis/task/v2/tasklists/{tasklist_guid}/tasks"),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_TASKS, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-diff --git a/src/service/task/v2/tasklist_activity_subscription/mod.rs b/src/service/task/v2/tasklist_activity_subscription/mod.rs
-index d0968ad..ab7d952 100644
---- a/src/service/task/v2/tasklist_activity_subscription/mod.rs
-+++ b/src/service/task/v2/tasklist_activity_subscription/mod.rs
-@@ -8,6 +8,7 @@ use crate::{
-         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
-         config::Config,
-         constants::AccessTokenType,
-+        endpoints::{EndpointBuilder, Endpoints},
-         http::Transport,
-         req_option::RequestOption,
-         SDKResult,
-@@ -125,9 +126,7 @@ impl TasklistActivitySubscriptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::POST,
--            api_path: format!(
--                "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions"
--            ),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             body: serde_json::to_vec(&request)?,
-@@ -152,8 +151,10 @@ impl TasklistActivitySubscriptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions/{activity_subscription_guid}"
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET, "tasklist_guid", tasklist_guid),
-+                "activity_subscription_guid", 
-+                activity_subscription_guid
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -185,9 +186,7 @@ impl TasklistActivitySubscriptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::GET,
--            api_path: format!(
--                "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions"
--            ),
-+            api_path: EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTIONS, "tasklist_guid", tasklist_guid),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-             ..Default::default()
-@@ -212,8 +211,10 @@ impl TasklistActivitySubscriptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::PATCH,
--            api_path: format!(
--                "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions/{activity_subscription_guid}"
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET, "tasklist_guid", tasklist_guid),
-+                "activity_subscription_guid", 
-+                activity_subscription_guid
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-@@ -239,8 +240,10 @@ impl TasklistActivitySubscriptionService {
- 
-         let api_req = ApiRequest {
-             http_method: Method::DELETE,
--            api_path: format!(
--                "/open-apis/task/v2/tasklists/{tasklist_guid}/activity_subscriptions/{activity_subscription_guid}"
-+            api_path: EndpointBuilder::replace_param(
-+                &EndpointBuilder::replace_param(Endpoints::TASK_V2_TASKLIST_ACTIVITY_SUBSCRIPTION_GET, "tasklist_guid", tasklist_guid),
-+                "activity_subscription_guid", 
-+                activity_subscription_guid
-             ),
-             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
-             query_params,
-diff --git a/zen_precommit.changeset b/zen_precommit.changeset
-index 7ffd021..88fd94a 100644
---- a/zen_precommit.changeset
-+++ b/zen_precommit.changeset
-@@ -1,17636 +0,0 @@
--diff --git a/src/core/endpoints.rs b/src/core/endpoints.rs
--index 899191f..e262650 100644
----- a/src/core/endpoints.rs
--+++ b/src/core/endpoints.rs
--@@ -581,11 +581,394 @@ impl Endpoints {
--     /// 功能角色管理
--     pub const CONTACT_V3_FUNCTIONAL_ROLES: &'static str = "/open-apis/contact/v3/functional_roles";
-- 
--+    // ==================== 考勤服务端点 ====================
--+
--+    // 考勤组管理
--+    /// 考勤组列表查询
--+    pub const ATTENDANCE_V1_GROUPS: &'static str = "/open-apis/attendance/v1/groups";
--+
--+    /// 考勤组详情查询 (需要使用 EndpointBuilder::replace_param 替换 {group_id})
--+    pub const ATTENDANCE_V1_GROUP_GET: &'static str = "/open-apis/attendance/v1/groups/{group_id}";
--+
--+    /// 考勤组删除 (需要使用 EndpointBuilder::replace_param 替换 {group_id})
--+    pub const ATTENDANCE_V1_GROUP_DELETE: &'static str =
--+        "/open-apis/attendance/v1/groups/{group_id}";
--+
--+    /// 考勤组搜索
--+    pub const ATTENDANCE_V1_GROUPS_SEARCH: &'static str = "/open-apis/attendance/v1/groups/search";
--+
--+    /// 考勤组用户列表 (需要使用 EndpointBuilder::replace_param 替换 {group_id})
--+    pub const ATTENDANCE_V1_GROUP_USERS: &'static str =
--+        "/open-apis/attendance/v1/groups/{group_id}/users";
--+
--+    // 班次管理
--+    /// 班次列表查询
--+    pub const ATTENDANCE_V1_SHIFTS: &'static str = "/open-apis/attendance/v1/shifts";
--+
--+    /// 班次详情查询 (需要使用 EndpointBuilder::replace_param 替换 {shift_id})
--+    pub const ATTENDANCE_V1_SHIFT_GET: &'static str = "/open-apis/attendance/v1/shifts/{shift_id}";
--+
--+    /// 班次删除 (需要使用 EndpointBuilder::replace_param 替换 {shift_id})
--+    pub const ATTENDANCE_V1_SHIFT_DELETE: &'static str =
--+        "/open-apis/attendance/v1/shifts/{shift_id}";
--+
--+    /// 班次查询
--+    pub const ATTENDANCE_V1_SHIFTS_QUERY: &'static str = "/open-apis/attendance/v1/shifts/query";
--+
--+    // 用户任务管理
--+    /// 用户任务批量创建
--+    pub const ATTENDANCE_V1_USER_TASKS_BATCH_CREATE: &'static str =
--+        "/open-apis/attendance/v1/user_tasks/batch_create";
--+
--+    /// 用户任务查询
--+    pub const ATTENDANCE_V1_USER_TASKS_QUERY: &'static str =
--+        "/open-apis/attendance/v1/user_tasks/query";
--+
--+    /// 用户任务批量删除
--+    pub const ATTENDANCE_V1_USER_TASKS_BATCH_DELETE: &'static str =
--+        "/open-apis/attendance/v1/user_tasks/batch_del";
--+
--+    /// 用户任务结果查询
--+    pub const ATTENDANCE_V1_USER_TASK_RESULTS_QUERY: &'static str =
--+        "/open-apis/attendance/v1/user_task_results/query";
--+
--+    // 用户班表管理
--+    /// 用户班表批量创建
--+    pub const ATTENDANCE_V1_USER_DAILY_SHIFTS_BATCH_CREATE: &'static str =
--+        "/open-apis/attendance/v1/user_daily_shifts/batch_create";
--+
--+    /// 用户班表查询
--+    pub const ATTENDANCE_V1_USER_DAILY_SHIFTS_QUERY: &'static str =
--+        "/open-apis/attendance/v1/user_daily_shifts/query";
--+
--+    // 用户统计数据管理
--+    /// 用户统计数据查询
--+    pub const ATTENDANCE_V1_USER_STATS_DATAS_QUERY: &'static str =
--+        "/open-apis/attendance/v1/user_stats_datas/query";
--+
--+    /// 用户统计数据字段查询
--+    pub const ATTENDANCE_V1_USER_STATS_DATAS_QUERY_FIELDS: &'static str =
--+        "/open-apis/attendance/v1/user_stats_datas/query_fields";
--+
--+    /// 用户统计数据数据查询
--+    pub const ATTENDANCE_V1_USER_STATS_DATAS_QUERY_DATA: &'static str =
--+        "/open-apis/attendance/v1/user_stats_datas/query_data";
--+
--+    /// 用户统计数据更新
--+    pub const ATTENDANCE_V1_USER_STATS_DATAS_UPDATE: &'static str =
--+        "/open-apis/attendance/v1/user_stats_datas/update";
--+
--+    // 用户设置管理
--+    /// 用户设置查询
--+    pub const ATTENDANCE_V1_USER_SETTINGS_QUERY: &'static str =
--+        "/open-apis/attendance/v1/user_settings/query";
--+
--+    // 用户审批管理
--+    /// 用户审批列表
--+    pub const ATTENDANCE_V1_USER_APPROVALS: &'static str =
--+        "/open-apis/attendance/v1/user_approvals";
--+
--+    // 用户任务补救管理
--+    /// 用户任务补救列表
--+    pub const ATTENDANCE_V1_USER_TASK_REMEDYS: &'static str =
--+        "/open-apis/attendance/v1/user_task_remedys";
--+
--+    // 假期管理
--+    /// 离职假期过期记录
--+    pub const ATTENDANCE_V1_LEAVE_EMPLOY_EXPIRE_RECORDS: &'static str =
--+        "/open-apis/attendance/v1/leave_employ_expire_records";
--+
--+    // 归档规则管理
--+    /// 归档规则
--+    pub const ATTENDANCE_V1_ARCHIVE_RULES: &'static str = "/open-apis/attendance/v1/archive_rules";
--+
--+    // ==================== 客服工具服务端点 ====================
--+
--+    // 工单管理
--+    /// 开始服务
--+    pub const HELPDESK_V1_START_SERVICE: &'static str = "/open-apis/helpdesk/v1/start_service";
--+
--+    /// 工单列表
--+    pub const HELPDESK_V1_TICKETS: &'static str = "/open-apis/helpdesk/v1/tickets";
--+
--+    /// 工单详情
--+    pub const HELPDESK_V1_TICKET_GET: &'static str = "/open-apis/helpdesk/v1/tickets/{ticket_id}";
--+
--+    /// 工单更新
--+    pub const HELPDESK_V1_TICKET_UPDATE: &'static str =
--+        "/open-apis/helpdesk/v1/tickets/{ticket_id}";
--+
--+    // 工单消息管理
--+    /// 工单消息列表
--+    pub const HELPDESK_V1_TICKET_MESSAGES: &'static str =
--+        "/open-apis/helpdesk/v1/tickets/{ticket_id}/messages";
--+
--+    /// 工单消息创建
--+    pub const HELPDESK_V1_TICKET_MESSAGE_CREATE: &'static str =
--+        "/open-apis/helpdesk/v1/tickets/{ticket_id}/messages";
--+
--+    /// 工单机器人消息
--+    pub const HELPDESK_V1_TICKET_BOT_MESSAGES: &'static str =
--+        "/open-apis/helpdesk/v1/tickets/{ticket_id}/bot_messages";
--+
--+    // FAQ管理
--+    /// FAQ列表
--+    pub const HELPDESK_V1_FAQS: &'static str = "/open-apis/helpdesk/v1/faqs";
--+
--+    /// FAQ详情
--+    pub const HELPDESK_V1_FAQ_GET: &'static str = "/open-apis/helpdesk/v1/faqs/{faq_id}";
--+
--+    /// FAQ创建
--+    pub const HELPDESK_V1_FAQ_CREATE: &'static str = "/open-apis/helpdesk/v1/faqs";
--+
--+    /// FAQ更新
--+    pub const HELPDESK_V1_FAQ_UPDATE: &'static str = "/open-apis/helpdesk/v1/faqs/{faq_id}";
--+
--+    /// FAQ删除
--+    pub const HELPDESK_V1_FAQ_DELETE: &'static str = "/open-apis/helpdesk/v1/faqs/{faq_id}";
--+
--+    /// FAQ图片
--+    pub const HELPDESK_V1_FAQ_IMAGE: &'static str =
--+        "/open-apis/helpdesk/v1/faqs/{faq_id}/image/{image_key}";
--+
--+    /// FAQ搜索
--+    pub const HELPDESK_V1_FAQS_SEARCH: &'static str = "/open-apis/helpdesk/v1/faqs/search";
--+
--+    // 事件管理
--+    /// 事件订阅
--+    pub const HELPDESK_V1_EVENTS_SUBSCRIBE: &'static str =
--+        "/open-apis/helpdesk/v1/events/subscribe";
--+
--+    /// 事件取消订阅
--+    pub const HELPDESK_V1_EVENTS_UNSUBSCRIBE: &'static str =
--+        "/open-apis/helpdesk/v1/events/unsubscribe";
--+
--+    // 自定义字段管理
--+    /// 工单自定义字段列表
--+    pub const HELPDESK_V1_TICKET_CUSTOMIZED_FIELDS: &'static str =
--+        "/open-apis/helpdesk/v1/ticket_customized_fields";
--+
--+    /// 工单自定义字段详情
--+    pub const HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_GET: &'static str =
--+        "/open-apis/helpdesk/v1/ticket_customized_fields/{field_id}";
--+
--+    /// 工单自定义字段创建
--+    pub const HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_CREATE: &'static str =
--+        "/open-apis/helpdesk/v1/ticket_customized_fields";
--+
--+    /// 工单自定义字段更新
--+    pub const HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_UPDATE: &'static str =
--+        "/open-apis/helpdesk/v1/ticket_customized_fields/{field_id}";
--+
--+    /// 工单自定义字段删除
--+    pub const HELPDESK_V1_TICKET_CUSTOMIZED_FIELD_DELETE: &'static str =
--+        "/open-apis/helpdesk/v1/ticket_customized_fields/{field_id}";
--+
--+    // 客服管理
--+    /// 客服详情
--+    pub const HELPDESK_V1_AGENT_GET: &'static str = "/open-apis/helpdesk/v1/agents/{agent_id}";
--+
--+    /// 客服邮箱
--+    pub const HELPDESK_V1_AGENT_EMAIL: &'static str =
--+        "/open-apis/helpdesk/v1/agents/{agent_id}/agent_email";
--+
--+    // 客服排班管理
--+    /// 客服排班列表
--+    pub const HELPDESK_V1_AGENT_SCHEDULES: &'static str =
--+        "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules";
--+
--+    /// 客服排班详情
--+    pub const HELPDESK_V1_AGENT_SCHEDULE_GET: &'static str =
--+        "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules/{schedule_id}";
--+
--+    /// 客服排班创建
--+    pub const HELPDESK_V1_AGENT_SCHEDULE_CREATE: &'static str =
--+        "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules";
--+
--+    /// 客服排班更新
--+    pub const HELPDESK_V1_AGENT_SCHEDULE_UPDATE: &'static str =
--+        "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules/{schedule_id}";
--+
--+    /// 客服排班删除
--+    pub const HELPDESK_V1_AGENT_SCHEDULE_DELETE: &'static str =
--+        "/open-apis/helpdesk/v1/agents/{agent_id}/agent_schedules/{schedule_id}";
--+
--+    // 客服技能管理
--+    /// 客服技能列表
--+    pub const HELPDESK_V1_AGENT_SKILLS: &'static str = "/open-apis/helpdesk/v1/agent_skills";
--+
--+    /// 客服技能详情
--+    pub const HELPDESK_V1_AGENT_SKILL_GET: &'static str =
--+        "/open-apis/helpdesk/v1/agent_skills/{skill_id}";
--+
--+    /// 客服技能创建
--+    pub const HELPDESK_V1_AGENT_SKILL_CREATE: &'static str = "/open-apis/helpdesk/v1/agent_skills";
--+
--+    /// 客服技能更新
--+    pub const HELPDESK_V1_AGENT_SKILL_UPDATE: &'static str =
--+        "/open-apis/helpdesk/v1/agent_skills/{skill_id}";
--+
--+    /// 客服技能删除
--+    pub const HELPDESK_V1_AGENT_SKILL_DELETE: &'static str =
--+        "/open-apis/helpdesk/v1/agent_skills/{skill_id}";
--+
--+    // 客服技能规则管理
--+    /// 客服技能规则列表
--+    pub const HELPDESK_V1_AGENT_SKILL_RULES: &'static str =
--+        "/open-apis/helpdesk/v1/agent_skill_rules";
--+
--+    /// 客服技能规则操作选项
--+    pub const HELPDESK_V1_AGENT_SKILL_RULES_OPERATOR_OPTIONS: &'static str =
--+        "/open-apis/helpdesk/v1/agent_skill_rules/operator-options";
--+
--+    // 分类管理
--+    /// 分类列表
--+    pub const HELPDESK_V1_CATEGORIES: &'static str = "/open-apis/helpdesk/v1/categories";
--+
--+    /// 分类详情
--+    pub const HELPDESK_V1_CATEGORY_GET: &'static str =
--+        "/open-apis/helpdesk/v1/categories/{category_id}";
--+
--+    /// 分类创建
--+    pub const HELPDESK_V1_CATEGORY_CREATE: &'static str = "/open-apis/helpdesk/v1/categories";
--+
--+    /// 分类更新
--+    pub const HELPDESK_V1_CATEGORY_UPDATE: &'static str =
--+        "/open-apis/helpdesk/v1/categories/{category_id}";
--+
--+    /// 分类删除
--+    pub const HELPDESK_V1_CATEGORY_DELETE: &'static str =
--+        "/open-apis/helpdesk/v1/categories/{category_id}";
--+
--+    // 通知管理
--+    /// 通知列表
--+    pub const HELPDESK_V1_NOTIFICATIONS: &'static str = "/open-apis/helpdesk/v1/notifications";
--+
--+    /// 通知详情
--+    pub const HELPDESK_V1_NOTIFICATION_GET: &'static str =
--+        "/open-apis/helpdesk/v1/notifications/{notification_id}";
--+
--+    /// 通知预览
--+    pub const HELPDESK_V1_NOTIFICATION_PREVIEW: &'static str =
--+        "/open-apis/helpdesk/v1/notifications/{notification_id}/preview";
--+
--+    /// 通知创建
--+    pub const HELPDESK_V1_NOTIFICATION_CREATE: &'static str =
--+        "/open-apis/helpdesk/v1/notifications";
--+
--+    /// 通知更新
--+    pub const HELPDESK_V1_NOTIFICATION_UPDATE: &'static str =
--+        "/open-apis/helpdesk/v1/notifications/{notification_id}";
--+
--+    /// 通知取消发送
--+    pub const HELPDESK_V1_NOTIFICATION_CANCEL_SEND: &'static str =
--+        "/open-apis/helpdesk/v1/notifications/{notification_id}/cancel_send";
--+
--+    // ==================== 应用管理服务端点 ====================
--+
--+    // 应用管理
--+    /// 应用详情
--+    pub const APPLICATION_V6_APP_GET: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}";
--+
--+    /// 应用转移所有者
--+    pub const APPLICATION_V6_APP_TRANSFER_OWNER: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/transfer_owner";
--+
--+    /// 应用协作者管理
--+    pub const APPLICATION_V6_APP_COLLABORATORS: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/collaborators";
--+
--+    /// 应用协作者删除
--+    pub const APPLICATION_V6_APP_COLLABORATOR_DELETE: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/collaborators";
--+
--+    /// 应用版本管理
--+    pub const APPLICATION_V6_APP_VERSIONS: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/versions";
--+
--+    /// 应用版本详情
--+    pub const APPLICATION_V6_APP_VERSION_GET: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/versions/{version_id}";
--+
--+    /// 待审核应用列表
--+    pub const APPLICATION_V6_APPS_UNDERAUDITLIST: &'static str =
--+        "/open-apis/application/v6/applications/underauditlist";
--+
--+    /// 应用审核
--+    pub const APPLICATION_V6_APP_AUDIT: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/audit";
--+
--+    /// 应用组管理
--+    pub const APPLICATION_V6_APP_GROUP: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/group";
--+
--+    // 应用使用情况
--+    /// 应用使用概览
--+    pub const APPLICATION_V6_APP_USAGE_OVERVIEW: &'static str =
--+        "/open-apis/application/v6/app_usage/{app_id}/overview";
--+
--+    /// 应用消息推送概览
--+    pub const APPLICATION_V6_APP_USAGE_MESSAGE_PUSH_OVERVIEW: &'static str =
--+        "/open-apis/application/v6/app_usage/{app_id}/message_push_overview";
--+
--+    /// 应用部门使用概览
--+    pub const APPLICATION_V6_APP_USAGE_DEPARTMENT_OVERVIEW: &'static str =
--+        "/open-apis/application/v6/app_usage/{app_id}/department_overview";
--+
--+    // 应用权限范围
--+    /// 应用权限范围申请
--+    pub const APPLICATION_V6_APP_SCOPE_APPLY: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/scope/apply";
--+
--+    /// 应用权限范围查询
--+    pub const APPLICATION_V6_APP_SCOPE_GET: &'static str =
--+        "/open-apis/application/v6/applications/{app_id}/scope";
--+
--+    // 应用徽章管理
--+    /// 应用徽章设置
--+    pub const APPLICATION_V6_APP_BADGE_SET: &'static str =
--+        "/open-apis/application/v6/app_badge/{app_id}/users/{user_id}/set";
--+
--+    // 应用反馈管理
--+    /// 应用反馈列表
--+    pub const APPLICATION_V6_APPLICATION_FEEDBACK: &'static str =
--+        "/open-apis/application/v6/application_feedback";
--+
--+    /// 应用反馈详情
--+    pub const APPLICATION_V6_APPLICATION_FEEDBACK_GET: &'static str =
--+        "/open-apis/application/v6/application_feedback/{feedback_id}";
--+
--+    // 管理员应用管理
--+    /// 管理员应用列表
--+    pub const APPLICATION_V6_ADMIN_APPS: &'static str = "/open-apis/application/v6/admin/apps";
--+
--+    /// 管理员应用启用
--+    pub const APPLICATION_V6_ADMIN_APP_ENABLE: &'static str =
--+        "/open-apis/application/v6/admin/apps/{app_id}/enable";
--+
--+    /// 管理员应用管理员列表
--+    pub const APPLICATION_V6_ADMIN_APP_ADMINS: &'static str =
--+        "/open-apis/application/v6/admin/apps/{app_id}/admins";
--+
--+    /// 应用可见性管理
--+    pub const APPLICATION_V6_ADMIN_APP_VISIBILITY: &'static str =
--+        "/open-apis/application/v6/admin/apps/{app_id}/visibility";
--+
--+    /// 应用可见性创建
--+    pub const APPLICATION_V6_ADMIN_APP_VISIBILITY_CREATE: &'static str =
--+        "/open-apis/application/v6/admin/apps/{app_id}/visibility";
--+
--+    /// 用户可用应用
--+    pub const APPLICATION_V6_ADMIN_USER_AVAILABLE_APPS: &'static str =
--+        "/open-apis/application/v6/admin/user_available_apps/{user_id}";
--+
--     // ==================== CloudDocs 云文档相关端点 ====================
---    
--+
--     // Assistant 助手服务
--     /// 文档订阅
---    pub const ASSISTANT_V1_FILE_SUBSCRIPTION: &'static str = "/open-apis/assistant/v1/file/{}/{}/subscription";
--+    pub const ASSISTANT_V1_FILE_SUBSCRIPTION: &'static str =
--+        "/open-apis/assistant/v1/file/{}/{}/subscription";
-- 
--     // Bitable 多维表格服务
--     /// 多维表格应用管理
--@@ -601,66 +984,103 @@ impl Endpoints {
--     pub const BITABLE_V1_TABLE_CREATE: &'static str = "/open-apis/bitable/v1/apps/{}/tables";
--     pub const BITABLE_V1_TABLE_PATCH: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}";
--     pub const BITABLE_V1_TABLE_DELETE: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}";
---    pub const BITABLE_V1_TABLES_BATCH_CREATE: &'static str = "/open-apis/bitable/v1/apps/{}/tables/batch_create";
---    pub const BITABLE_V1_TABLES_BATCH_DELETE: &'static str = "/open-apis/bitable/v1/apps/{}/tables/batch_delete";
--+    pub const BITABLE_V1_TABLES_BATCH_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{}/tables/batch_create";
--+    pub const BITABLE_V1_TABLES_BATCH_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{}/tables/batch_delete";
-- 
--     /// 多维表格记录管理
---    pub const BITABLE_V1_RECORDS: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records";
---    pub const BITABLE_V1_RECORD_GET: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/{record_id}";
---    pub const BITABLE_V1_RECORD_CREATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records";
---    pub const BITABLE_V1_RECORD_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/{record_id}";
---    pub const BITABLE_V1_RECORD_DELETE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/{record_id}";
---    pub const BITABLE_V1_RECORDS_BATCH_CREATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_create";
---    pub const BITABLE_V1_RECORDS_BATCH_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_update";
---    pub const BITABLE_V1_RECORDS_BATCH_GET: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_get";
---    pub const BITABLE_V1_RECORDS_BATCH_DELETE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_delete";
---    pub const BITABLE_V1_RECORDS_SEARCH: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/search";
--+    pub const BITABLE_V1_RECORDS: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records";
--+    pub const BITABLE_V1_RECORD_GET: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/{record_id}";
--+    pub const BITABLE_V1_RECORD_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records";
--+    pub const BITABLE_V1_RECORD_UPDATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/{record_id}";
--+    pub const BITABLE_V1_RECORD_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/{record_id}";
--+    pub const BITABLE_V1_RECORDS_BATCH_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_create";
--+    pub const BITABLE_V1_RECORDS_BATCH_UPDATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_update";
--+    pub const BITABLE_V1_RECORDS_BATCH_GET: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_get";
--+    pub const BITABLE_V1_RECORDS_BATCH_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/batch_delete";
--+    pub const BITABLE_V1_RECORDS_SEARCH: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/records/search";
-- 
--     /// 多维表格字段管理
---    pub const BITABLE_V1_FIELDS: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields";
---    pub const BITABLE_V1_FIELD_GET: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
---    pub const BITABLE_V1_FIELD_CREATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields";
---    pub const BITABLE_V1_FIELD_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
---    pub const BITABLE_V1_FIELD_DELETE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
--+    pub const BITABLE_V1_FIELDS: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields";
--+    pub const BITABLE_V1_FIELD_GET: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
--+    pub const BITABLE_V1_FIELD_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields";
--+    pub const BITABLE_V1_FIELD_UPDATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
--+    pub const BITABLE_V1_FIELD_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/tables/{table_id}/fields/{field_id}";
-- 
--     /// 多维表格视图管理
--     pub const BITABLE_V1_VIEWS: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}/views";
---    pub const BITABLE_V1_VIEW_GET: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
---    pub const BITABLE_V1_VIEW_CREATE: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}/views";
---    pub const BITABLE_V1_VIEW_PATCH: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
---    pub const BITABLE_V1_VIEW_DELETE: &'static str = "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
--+    pub const BITABLE_V1_VIEW_GET: &'static str =
--+        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
--+    pub const BITABLE_V1_VIEW_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{}/tables/{}/views";
--+    pub const BITABLE_V1_VIEW_PATCH: &'static str =
--+        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
--+    pub const BITABLE_V1_VIEW_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{}/tables/{}/views/{}";
-- 
--     /// 多维表格仪表板管理
---    pub const BITABLE_V1_DASHBOARDS: &'static str = "/open-apis/bitable/v1/apps/{app_token}/dashboards";
---    pub const BITABLE_V1_DASHBOARD_COPY: &'static str = "/open-apis/bitable/v1/apps/{app_token}/dashboards/{block_id}/copy";
--+    pub const BITABLE_V1_DASHBOARDS: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/dashboards";
--+    pub const BITABLE_V1_DASHBOARD_COPY: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/dashboards/{block_id}/copy";
-- 
--     /// 多维表格角色管理
--     pub const BITABLE_V1_ROLES: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles";
---    pub const BITABLE_V1_ROLE_GET: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}";
--+    pub const BITABLE_V1_ROLE_GET: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}";
--     pub const BITABLE_V1_ROLE_CREATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles";
---    pub const BITABLE_V1_ROLE_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}";
---    pub const BITABLE_V1_ROLE_DELETE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}";
--+    pub const BITABLE_V1_ROLE_UPDATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}";
--+    pub const BITABLE_V1_ROLE_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}";
-- 
--     /// 多维表格角色成员管理
---    pub const BITABLE_V1_ROLE_MEMBERS: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members";
---    pub const BITABLE_V1_ROLE_MEMBER_CREATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members";
---    pub const BITABLE_V1_ROLE_MEMBER_DELETE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members/{member_id}";
---    pub const BITABLE_V1_ROLE_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members/batch_create";
---    pub const BITABLE_V1_ROLE_MEMBERS_BATCH_DELETE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members/batch_delete";
--+    pub const BITABLE_V1_ROLE_MEMBERS: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members";
--+    pub const BITABLE_V1_ROLE_MEMBER_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members";
--+    pub const BITABLE_V1_ROLE_MEMBER_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members/{member_id}";
--+    pub const BITABLE_V1_ROLE_MEMBERS_BATCH_CREATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members/batch_create";
--+    pub const BITABLE_V1_ROLE_MEMBERS_BATCH_DELETE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/roles/{role_id}/members/batch_delete";
-- 
--     /// 多维表格表单管理
--     pub const BITABLE_V1_FORMS: &'static str = "/open-apis/bitable/v1/apps/{app_token}/forms";
---    pub const BITABLE_V1_FORM_GET: &'static str = "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}";
---    pub const BITABLE_V1_FORM_PATCH: &'static str = "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}";
---    pub const BITABLE_V1_FORM_PATCH_META: &'static str = "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}/questions";
--+    pub const BITABLE_V1_FORM_GET: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}";
--+    pub const BITABLE_V1_FORM_PATCH: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}";
--+    pub const BITABLE_V1_FORM_PATCH_META: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/forms/{form_id}/questions";
-- 
--     /// 多维表格工作流管理
---    pub const BITABLE_V1_WORKFLOWS: &'static str = "/open-apis/bitable/v1/apps/{app_token}/workflows";
---    pub const BITABLE_V1_WORKFLOW_UPDATE: &'static str = "/open-apis/bitable/v1/apps/{app_token}/workflows/{workflow_id}";
--+    pub const BITABLE_V1_WORKFLOWS: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/workflows";
--+    pub const BITABLE_V1_WORKFLOW_UPDATE: &'static str =
--+        "/open-apis/bitable/v1/apps/{app_token}/workflows/{workflow_id}";
-- 
--     // Board 白板服务
--     /// 白板管理
---    pub const BOARD_V1_WHITEBOARD_THUMBNAIL: &'static str = "/open-apis/whiteboard/v1/whiteboards/{}/thumbnail";
--+    pub const BOARD_V1_WHITEBOARD_THUMBNAIL: &'static str =
--+        "/open-apis/whiteboard/v1/whiteboards/{}/thumbnail";
--     pub const BOARD_V1_WHITEBOARD_NODES: &'static str = "/open-apis/board/v1/whiteboards/{}/nodes";
-- 
--     // Comments 评论服务
--@@ -669,26 +1089,35 @@ impl Endpoints {
--     pub const COMMENT_V1_COMMENT_GET: &'static str = "/open-apis/comment/v1/comments/{}";
--     pub const COMMENT_V1_COMMENT_CREATE: &'static str = "/open-apis/comment/v1/comments";
--     pub const COMMENT_V1_COMMENT_PATCH: &'static str = "/open-apis/comment/v1/comments/{}";
---    pub const COMMENT_V1_COMMENTS_BATCH_QUERY: &'static str = "/open-apis/comment/v1/comments/batch_query";
--+    pub const COMMENT_V1_COMMENTS_BATCH_QUERY: &'static str =
--+        "/open-apis/comment/v1/comments/batch_query";
-- 
--     /// 评论回复管理
---    pub const COMMENT_V1_COMMENT_REPLIES: &'static str = "/open-apis/comment/v1/comments/{}/replies";
---    pub const COMMENT_V1_COMMENT_REPLY_UPDATE: &'static str = "/open-apis/comment/v1/comments/{}/replies/{}";
---    pub const COMMENT_V1_COMMENT_REPLY_DELETE: &'static str = "/open-apis/comment/v1/comments/{}/replies/{}";
--+    pub const COMMENT_V1_COMMENT_REPLIES: &'static str =
--+        "/open-apis/comment/v1/comments/{}/replies";
--+    pub const COMMENT_V1_COMMENT_REPLY_UPDATE: &'static str =
--+        "/open-apis/comment/v1/comments/{}/replies/{}";
--+    pub const COMMENT_V1_COMMENT_REPLY_DELETE: &'static str =
--+        "/open-apis/comment/v1/comments/{}/replies/{}";
-- 
--     // Docx 文档服务
--     /// 文档管理
--     pub const DOCX_V1_DOCUMENTS: &'static str = "/open-apis/docx/v1/documents";
--     pub const DOCX_V1_DOCUMENT_GET: &'static str = "/open-apis/docx/v1/documents/{}";
---    pub const DOCX_V1_DOCUMENT_RAW_CONTENT: &'static str = "/open-apis/docx/v1/documents/{}/raw_content";
--+    pub const DOCX_V1_DOCUMENT_RAW_CONTENT: &'static str =
--+        "/open-apis/docx/v1/documents/{}/raw_content";
--     pub const DOCX_V1_DOCUMENT_CONVERT: &'static str = "/open-apis/docx/v1/documents/{}/convert";
-- 
--     /// 文档块管理
--     pub const DOCX_V1_DOCUMENT_BLOCKS: &'static str = "/open-apis/docx/v1/documents/{}/blocks";
---    pub const DOCX_V1_DOCUMENT_BLOCK_GET: &'static str = "/open-apis/docx/v1/documents/{}/blocks/{}";
---    pub const DOCX_V1_DOCUMENT_BLOCK_CHILDREN: &'static str = "/open-apis/docx/v1/documents/{}/blocks/{}/children";
---    pub const DOCX_V1_DOCUMENT_BLOCKS_BATCH_UPDATE: &'static str = "/open-apis/docx/v1/documents/{}/blocks/batch_update";
---    pub const DOCX_V1_DOCUMENT_BLOCKS_BATCH_DELETE: &'static str = "/open-apis/docx/v1/documents/{}/blocks/batch_delete";
--+    pub const DOCX_V1_DOCUMENT_BLOCK_GET: &'static str =
--+        "/open-apis/docx/v1/documents/{}/blocks/{}";
--+    pub const DOCX_V1_DOCUMENT_BLOCK_CHILDREN: &'static str =
--+        "/open-apis/docx/v1/documents/{}/blocks/{}/children";
--+    pub const DOCX_V1_DOCUMENT_BLOCKS_BATCH_UPDATE: &'static str =
--+        "/open-apis/docx/v1/documents/{}/blocks/batch_update";
--+    pub const DOCX_V1_DOCUMENT_BLOCKS_BATCH_DELETE: &'static str =
--+        "/open-apis/docx/v1/documents/{}/blocks/batch_delete";
-- 
--     // Drive 云盘服务
--     /// 文件管理
--@@ -697,10 +1126,14 @@ impl Endpoints {
--     pub const DRIVE_V1_FILE_COPY: &'static str = "/open-apis/drive/v1/files/{}/copy";
--     pub const DRIVE_V1_FILE_DOWNLOAD: &'static str = "/open-apis/drive/v1/files/{}/download";
--     pub const DRIVE_V1_FILE_STATISTICS: &'static str = "/open-apis/drive/v1/files/{}/statistics";
---    pub const DRIVE_V1_FILE_VIEW_RECORDS: &'static str = "/open-apis/drive/v1/files/{}/view_records";
---    pub const DRIVE_V1_FILE_LIKE_RECORDS: &'static str = "/open-apis/drive/v1/files/{}/like_records";
---    pub const DRIVE_V1_FILES_CREATE_FOLDER: &'static str = "/open-apis/drive/v1/files/create_folder";
---    pub const DRIVE_V1_FILES_CREATE_SHORTCUT: &'static str = "/open-apis/drive/v1/files/create_shortcut";
--+    pub const DRIVE_V1_FILE_VIEW_RECORDS: &'static str =
--+        "/open-apis/drive/v1/files/{}/view_records";
--+    pub const DRIVE_V1_FILE_LIKE_RECORDS: &'static str =
--+        "/open-apis/drive/v1/files/{}/like_records";
--+    pub const DRIVE_V1_FILES_CREATE_FOLDER: &'static str =
--+        "/open-apis/drive/v1/files/create_folder";
--+    pub const DRIVE_V1_FILES_CREATE_SHORTCUT: &'static str =
--+        "/open-apis/drive/v1/files/create_shortcut";
--     pub const DRIVE_V1_FILES_SEARCH: &'static str = "/open-apis/drive/v1/files/search";
--     pub const DRIVE_V1_FILES_SUBSCRIBE: &'static str = "/open-apis/drive/v1/files/subscribe";
-- 
--@@ -709,28 +1142,35 @@ impl Endpoints {
--     pub const DRIVE_V1_FILE_VERSION_GET: &'static str = "/open-apis/drive/v1/files/{}/versions/{}";
-- 
--     /// 文件订阅管理
---    pub const DRIVE_V1_FILE_SUBSCRIPTIONS: &'static str = "/open-apis/drive/v1/files/{}/subscriptions/{}";
--+    pub const DRIVE_V1_FILE_SUBSCRIPTIONS: &'static str =
--+        "/open-apis/drive/v1/files/{}/subscriptions/{}";
-- 
--     /// 文件夹管理
--     pub const DRIVE_V1_FOLDERS: &'static str = "/open-apis/drive/v1/folders";
--     pub const DRIVE_V1_FOLDER_GET: &'static str = "/open-apis/drive/v1/folders/{}";
--     pub const DRIVE_V1_FOLDER_CHILDREN: &'static str = "/open-apis/drive/v1/folders/{}/children";
--     pub const DRIVE_V1_FOLDER_MOVE: &'static str = "/open-apis/drive/v1/folders/{}/move";
---    pub const DRIVE_V1_FOLDERS_ROOT_FOLDER_META: &'static str = "/open-apis/drive/v1/folders/root_folder_meta";
--+    pub const DRIVE_V1_FOLDERS_ROOT_FOLDER_META: &'static str =
--+        "/open-apis/drive/v1/folders/root_folder_meta";
-- 
--     /// 文件上传管理
--     pub const DRIVE_V1_FILES_UPLOAD_ALL: &'static str = "/open-apis/drive/v1/files/upload_all";
---    pub const DRIVE_V1_FILES_UPLOAD_PREPARE: &'static str = "/open-apis/drive/v1/files/upload_prepare";
--+    pub const DRIVE_V1_FILES_UPLOAD_PREPARE: &'static str =
--+        "/open-apis/drive/v1/files/upload_prepare";
--     pub const DRIVE_V1_FILES_UPLOAD_PART: &'static str = "/open-apis/drive/v1/files/upload_part";
---    pub const DRIVE_V1_FILES_UPLOAD_FINISH: &'static str = "/open-apis/drive/v1/files/upload_finish";
--+    pub const DRIVE_V1_FILES_UPLOAD_FINISH: &'static str =
--+        "/open-apis/drive/v1/files/upload_finish";
-- 
--     /// 媒体文件管理
--     pub const DRIVE_V1_MEDIAS_UPLOAD_ALL: &'static str = "/open-apis/drive/v1/medias/upload_all";
---    pub const DRIVE_V1_MEDIAS_UPLOAD_PREPARE: &'static str = "/open-apis/drive/v1/medias/upload_prepare";
--+    pub const DRIVE_V1_MEDIAS_UPLOAD_PREPARE: &'static str =
--+        "/open-apis/drive/v1/medias/upload_prepare";
--     pub const DRIVE_V1_MEDIAS_UPLOAD_PART: &'static str = "/open-apis/drive/v1/medias/upload_part";
---    pub const DRIVE_V1_MEDIAS_UPLOAD_FINISH: &'static str = "/open-apis/drive/v1/medias/upload_finish";
--+    pub const DRIVE_V1_MEDIAS_UPLOAD_FINISH: &'static str =
--+        "/open-apis/drive/v1/medias/upload_finish";
--     pub const DRIVE_V1_MEDIAS_DOWNLOAD: &'static str = "/open-apis/drive/v1/medias/{}/download";
---    pub const DRIVE_V1_MEDIAS_BATCH_GET_TMP_DOWNLOAD_URL: &'static str = "/open-apis/drive/v1/medias/batch_get_tmp_download_url";
--+    pub const DRIVE_V1_MEDIAS_BATCH_GET_TMP_DOWNLOAD_URL: &'static str =
--+        "/open-apis/drive/v1/medias/batch_get_tmp_download_url";
-- 
--     /// 导入任务管理
--     pub const DRIVE_V1_IMPORT_TASKS: &'static str = "/open-apis/drive/v1/import_tasks";
--@@ -743,20 +1183,30 @@ impl Endpoints {
--     pub const DRIVE_V1_TASK_GET: &'static str = "/open-apis/drive/v1/tasks/{}";
-- 
--     /// 权限管理
---    pub const DRIVE_V1_PERMISSIONS_MEMBERS: &'static str = "/open-apis/drive/v1/permissions/{}/members";
---    pub const DRIVE_V1_PERMISSIONS_MEMBER_GET: &'static str = "/open-apis/drive/v1/permissions/{}/members/{}";
---    pub const DRIVE_V1_PERMISSIONS_MEMBERS_BATCH_CREATE: &'static str = "/open-apis/drive/v1/permissions/{}/members/batch_create";
---    pub const DRIVE_V1_PERMISSIONS_MEMBERS_AUTH: &'static str = "/open-apis/drive/v1/permissions/{}/members/auth";
---    pub const DRIVE_V1_PERMISSIONS_MEMBERS_TRANSFER_OWNER: &'static str = "/open-apis/drive/v1/permissions/{}/members/transfer_owner";
---    pub const DRIVE_V1_PERMISSIONS_PUBLIC: &'static str = "/open-apis/drive/v1/permissions/{}/public";
---    pub const DRIVE_V1_PERMISSIONS_PUBLIC_PASSWORD: &'static str = "/open-apis/drive/v1/permissions/{}/public/password";
--+    pub const DRIVE_V1_PERMISSIONS_MEMBERS: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/members";
--+    pub const DRIVE_V1_PERMISSIONS_MEMBER_GET: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/members/{}";
--+    pub const DRIVE_V1_PERMISSIONS_MEMBERS_BATCH_CREATE: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/members/batch_create";
--+    pub const DRIVE_V1_PERMISSIONS_MEMBERS_AUTH: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/members/auth";
--+    pub const DRIVE_V1_PERMISSIONS_MEMBERS_TRANSFER_OWNER: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/members/transfer_owner";
--+    pub const DRIVE_V1_PERMISSIONS_PUBLIC: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/public";
--+    pub const DRIVE_V1_PERMISSIONS_PUBLIC_PASSWORD: &'static str =
--+        "/open-apis/drive/v1/permissions/{}/public/password";
-- 
--     /// Drive v2 权限管理
---    pub const DRIVE_V2_PERMISSIONS_PUBLIC: &'static str = "/open-apis/drive/v2/permissions/{}/public";
--+    pub const DRIVE_V2_PERMISSIONS_PUBLIC: &'static str =
--+        "/open-apis/drive/v2/permissions/{}/public";
-- 
--     /// Drive Explorer
---    pub const DRIVE_EXPLORER_V2_ROOT_FOLDER_META: &'static str = "/open-apis/drive/explorer/v2/root_folder/meta";
---    pub const DRIVE_EXPLORER_V2_FOLDER_META: &'static str = "/open-apis/drive/explorer/v2/folder/{folder_token}/meta";
--+    pub const DRIVE_EXPLORER_V2_ROOT_FOLDER_META: &'static str =
--+        "/open-apis/drive/explorer/v2/root_folder/meta";
--+    pub const DRIVE_EXPLORER_V2_FOLDER_META: &'static str =
--+        "/open-apis/drive/explorer/v2/folder/{folder_token}/meta";
-- 
--     // Sheets 电子表格服务
--     /// 电子表格管理 - v3
--@@ -766,83 +1216,126 @@ impl Endpoints {
--     pub const SHEETS_V3_SPREADSHEET_PATCH: &'static str = "/open-apis/sheets/v3/spreadsheets/{}";
-- 
--     /// 电子表格工作表管理 - v3
---    pub const SHEETS_V3_SPREADSHEET_SHEETS_QUERY: &'static str = "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/query";
---    pub const SHEETS_V3_SPREADSHEET_SHEET_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}";
--+    pub const SHEETS_V3_SPREADSHEET_SHEETS_QUERY: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/query";
--+    pub const SHEETS_V3_SPREADSHEET_SHEET_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}";
-- 
--     /// 电子表格数据操作 - v3
---    pub const SHEETS_V3_SPREADSHEET_VALUES_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/values/{}";
---    pub const SHEETS_V3_SPREADSHEET_VALUES_BATCH_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/values/batch_get";
---    pub const SHEETS_V3_SPREADSHEET_VALUES_BATCH_UPDATE: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/values/batch_update";
---    pub const SHEETS_V3_SPREADSHEET_VALUES_APPEND: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/values/{}/append";
---    pub const SHEETS_V3_SPREADSHEET_VALUES_PREPEND: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/values/{}/prepend";
---    pub const SHEETS_V3_SPREADSHEET_VALUES_IMAGE: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/values_image";
--+    pub const SHEETS_V3_SPREADSHEET_VALUES_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/values/{}";
--+    pub const SHEETS_V3_SPREADSHEET_VALUES_BATCH_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/values/batch_get";
--+    pub const SHEETS_V3_SPREADSHEET_VALUES_BATCH_UPDATE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/values/batch_update";
--+    pub const SHEETS_V3_SPREADSHEET_VALUES_APPEND: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/values/{}/append";
--+    pub const SHEETS_V3_SPREADSHEET_VALUES_PREPEND: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/values/{}/prepend";
--+    pub const SHEETS_V3_SPREADSHEET_VALUES_IMAGE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/values_image";
-- 
--     /// 电子表格查找替换 - v3
---    pub const SHEETS_V3_SPREADSHEET_SHEET_FIND: &'static str = "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/find";
---    pub const SHEETS_V3_SPREADSHEET_SHEET_REPLACE: &'static str = "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/replace";
--+    pub const SHEETS_V3_SPREADSHEET_SHEET_FIND: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/find";
--+    pub const SHEETS_V3_SPREADSHEET_SHEET_REPLACE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/replace";
-- 
--     /// 电子表格合并拆分单元格 - v3
---    pub const SHEETS_V3_SPREADSHEET_MERGE_CELLS: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/merge_cells";
---    pub const SHEETS_V3_SPREADSHEET_UNMERGE_CELLS: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/unmerge_cells";
--+    pub const SHEETS_V3_SPREADSHEET_MERGE_CELLS: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/merge_cells";
--+    pub const SHEETS_V3_SPREADSHEET_UNMERGE_CELLS: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/unmerge_cells";
-- 
--     /// 电子表格样式管理 - v3
---    pub const SHEETS_V3_SPREADSHEET_STYLE: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/style";
---    pub const SHEETS_V3_SPREADSHEET_STYLES_BATCH_UPDATE: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/styles/batch_update";
--+    pub const SHEETS_V3_SPREADSHEET_STYLE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/style";
--+    pub const SHEETS_V3_SPREADSHEET_STYLES_BATCH_UPDATE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/styles/batch_update";
-- 
--     /// 电子表格行列管理 - v3
---    pub const SHEETS_V3_SPREADSHEET_DIMENSION_RANGE: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range";
---    pub const SHEETS_V3_SPREADSHEET_DIMENSION_RANGE_INSERT: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range:insert";
---    pub const SHEETS_V3_SPREADSHEET_MOVE_DIMENSION: &'static str = "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/move_dimension";
--+    pub const SHEETS_V3_SPREADSHEET_DIMENSION_RANGE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range";
--+    pub const SHEETS_V3_SPREADSHEET_DIMENSION_RANGE_INSERT: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range:insert";
--+    pub const SHEETS_V3_SPREADSHEET_MOVE_DIMENSION: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/move_dimension";
-- 
--     /// 电子表格条件格式 - v3
---    pub const SHEETS_V3_SPREADSHEET_CONDITION_FORMAT: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/conditionFormat";
--+    pub const SHEETS_V3_SPREADSHEET_CONDITION_FORMAT: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/conditionFormat";
-- 
--     /// 电子表格数据验证 - v3
---    pub const SHEETS_V3_SPREADSHEET_DATA_VALIDATION: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation";
---    pub const SHEETS_V3_SPREADSHEET_DATA_VALIDATION_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation/{}";
--+    pub const SHEETS_V3_SPREADSHEET_DATA_VALIDATION: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation";
--+    pub const SHEETS_V3_SPREADSHEET_DATA_VALIDATION_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation/{}";
-- 
--     /// 电子表格保护范围 - v3
---    pub const SHEETS_V3_SPREADSHEET_PROTECT_RANGE: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/protect_range";
---    pub const SHEETS_V3_SPREADSHEET_PROTECT_RANGE_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/protect_range/{}";
--+    pub const SHEETS_V3_SPREADSHEET_PROTECT_RANGE: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/protect_range";
--+    pub const SHEETS_V3_SPREADSHEET_PROTECT_RANGE_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/protect_range/{}";
-- 
--     /// 电子表格筛选器 - v3
---    pub const SHEETS_V3_SPREADSHEET_FILTER: &'static str = "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/filter";
--+    pub const SHEETS_V3_SPREADSHEET_FILTER: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/filter";
-- 
--     /// 电子表格筛选视图 - v3
---    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEWS: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views";
---    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEW_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}";
--+    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEWS: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views";
--+    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEW_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}";
-- 
--     /// 电子表格筛选视图条件 - v3
---    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITIONS: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions";
---    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITION_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions/{}";
--+    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITIONS: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions";
--+    pub const SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITION_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions/{}";
-- 
--     /// 电子表格浮动图片 - v3
---    pub const SHEETS_V3_SPREADSHEET_FLOAT_IMAGES: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images";
---    pub const SHEETS_V3_SPREADSHEET_FLOAT_IMAGE_GET: &'static str = "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images/{}";
--+    pub const SHEETS_V3_SPREADSHEET_FLOAT_IMAGES: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images";
--+    pub const SHEETS_V3_SPREADSHEET_FLOAT_IMAGE_GET: &'static str =
--+        "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images/{}";
-- 
--     /// 电子表格管理 - v2
---    pub const SHEETS_V2_SPREADSHEET_VALUES: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values";
---    pub const SHEETS_V2_SPREADSHEET_VALUES_RANGE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values/{range}";
---    pub const SHEETS_V2_SPREADSHEET_VALUES_APPEND: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_append";
---    pub const SHEETS_V2_SPREADSHEET_VALUES_PREPEND: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_prepend";
---    pub const SHEETS_V2_SPREADSHEET_VALUES_BATCH_GET: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_batch_get";
---    pub const SHEETS_V2_SPREADSHEET_VALUES_BATCH_UPDATE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_batch_update";
---    pub const SHEETS_V2_SPREADSHEET_VALUES_IMAGE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_image";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES_RANGE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values/{range}";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES_APPEND: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_append";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES_PREPEND: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_prepend";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES_BATCH_GET: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_batch_get";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES_BATCH_UPDATE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_batch_update";
--+    pub const SHEETS_V2_SPREADSHEET_VALUES_IMAGE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_image";
-- 
--     /// 电子表格样式管理 - v2
---    pub const SHEETS_V2_SPREADSHEET_STYLE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/style";
---    pub const SHEETS_V2_SPREADSHEET_STYLES_BATCH_UPDATE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/styles_batch_update";
--+    pub const SHEETS_V2_SPREADSHEET_STYLE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/style";
--+    pub const SHEETS_V2_SPREADSHEET_STYLES_BATCH_UPDATE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/styles_batch_update";
-- 
--     /// 电子表格合并拆分单元格 - v2
---    pub const SHEETS_V2_SPREADSHEET_MERGE_CELLS: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/merge_cells";
---    pub const SHEETS_V2_SPREADSHEET_UNMERGE_CELLS: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/unmerge_cells";
--+    pub const SHEETS_V2_SPREADSHEET_MERGE_CELLS: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/merge_cells";
--+    pub const SHEETS_V2_SPREADSHEET_UNMERGE_CELLS: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/unmerge_cells";
-- 
--     /// 电子表格行列管理 - v2
---    pub const SHEETS_V2_SPREADSHEET_DIMENSION_RANGE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/dimension_range";
---    pub const SHEETS_V2_SPREADSHEET_INSERT_DIMENSION_RANGE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/insert_dimension_range";
--+    pub const SHEETS_V2_SPREADSHEET_DIMENSION_RANGE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/dimension_range";
--+    pub const SHEETS_V2_SPREADSHEET_INSERT_DIMENSION_RANGE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/insert_dimension_range";
-- 
--     /// 电子表格工作表管理 - v2
---    pub const SHEETS_V2_SPREADSHEET_SHEETS_BATCH_UPDATE: &'static str = "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/sheets_batch_update";
--+    pub const SHEETS_V2_SPREADSHEET_SHEETS_BATCH_UPDATE: &'static str =
--+        "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/sheets_batch_update";
-- 
--     // Wiki 知识库服务
--     /// 知识库空间管理
--@@ -861,7 +1354,8 @@ impl Endpoints {
--     pub const WIKI_V2_SPACE_NODE_CREATE: &'static str = "/open-apis/wiki/v2/spaces/{}/nodes";
--     pub const WIKI_V2_SPACE_NODE_COPY: &'static str = "/open-apis/wiki/v2/spaces/{}/nodes/{}/copy";
--     pub const WIKI_V2_SPACE_NODE_MOVE: &'static str = "/open-apis/wiki/v2/spaces/{}/nodes/{}/move";
---    pub const WIKI_V2_SPACE_NODE_UPDATE_TITLE: &'static str = "/open-apis/wiki/v2/spaces/{}/nodes/{}/update_title";
--+    pub const WIKI_V2_SPACE_NODE_UPDATE_TITLE: &'static str =
--+        "/open-apis/wiki/v2/spaces/{}/nodes/{}/update_title";
-- 
--     /// 知识库设置管理
--     pub const WIKI_V2_SPACE_SETTING_UPDATE: &'static str = "/open-apis/wiki/v2/spaces/{}/setting";
--@@ -870,7 +1364,8 @@ impl Endpoints {
--     pub const WIKI_V2_SEARCH: &'static str = "/open-apis/wiki/v2/search";
-- 
--     /// 知识库任务管理
---    pub const WIKI_V2_TASKS_MOVE_DOCS_TO_WIKI: &'static str = "/open-apis/wiki/v2/tasks/move_docs_to_wiki";
--+    pub const WIKI_V2_TASKS_MOVE_DOCS_TO_WIKI: &'static str =
--+        "/open-apis/wiki/v2/tasks/move_docs_to_wiki";
--     pub const WIKI_V2_TASK_GET: &'static str = "/open-apis/wiki/v2/tasks/{}";
-- }
-- 
--diff --git a/src/service/acs/access_record/mod.rs b/src/service/acs/access_record/mod.rs
--index 06e15ad..3118e26 100644
----- a/src/service/acs/access_record/mod.rs
--+++ b/src/service/acs/access_record/mod.rs
--@@ -68,23 +68,19 @@ impl AccessRecordService {
--         }
-- 
--         if let Some(device_id) = request.device_id {
---            api_req
---                .query_params
---                .insert("device_id", device_id);
--+            api_req.query_params.insert("device_id", device_id);
--         }
-- 
--         if let Some(access_type) = request.access_type {
---            api_req.query_params.insert(
---                "access_type",
---                serde_json::to_string(&access_type)?,
---            );
--+            api_req
--+                .query_params
--+                .insert("access_type", serde_json::to_string(&access_type)?);
--         }
-- 
--         if let Some(access_method) = request.access_method {
---            api_req.query_params.insert(
---                "access_method",
---                serde_json::to_string(&access_method)?,
---            );
--+            api_req
--+                .query_params
--+                .insert("access_method", serde_json::to_string(&access_method)?);
--         }
-- 
--         if let Some(result) = request.result {
--diff --git a/src/service/acs/device/mod.rs b/src/service/acs/device/mod.rs
--index 34a01ab..badcf33 100644
----- a/src/service/acs/device/mod.rs
--+++ b/src/service/acs/device/mod.rs
--@@ -62,10 +62,9 @@ impl DeviceService {
--         }
-- 
--         if let Some(device_type) = request.device_type {
---            api_req.query_params.insert(
---                "device_type",
---                serde_json::to_string(&device_type)?,
---            );
--+            api_req
--+                .query_params
--+                .insert("device_type", serde_json::to_string(&device_type)?);
--         }
-- 
--         if let Some(status) = request.status {
--@@ -75,9 +74,7 @@ impl DeviceService {
--         }
-- 
--         if let Some(location) = request.location {
---            api_req
---                .query_params
---                .insert("location", location);
--+            api_req.query_params.insert("location", location);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/acs/user/mod.rs b/src/service/acs/user/mod.rs
--index 6cabbe9..ddb2cd5 100644
----- a/src/service/acs/user/mod.rs
--+++ b/src/service/acs/user/mod.rs
--@@ -132,9 +132,7 @@ impl UserService {
--         }
-- 
--         if let Some(department) = request.department {
---            api_req
---                .query_params
---                .insert("department", department);
--+            api_req.query_params.insert("department", department);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/admin/badge_grant/mod.rs b/src/service/admin/badge_grant/mod.rs
--index 9a40d61..00a5d37 100644
----- a/src/service/admin/badge_grant/mod.rs
--+++ b/src/service/admin/badge_grant/mod.rs
--@@ -202,9 +202,7 @@ impl BadgeGrantService {
-- 
--         // 添加查询参数
--         if let Some(badge_id) = request.badge_id {
---            api_req
---                .query_params
---                .insert("badge_id", badge_id);
--+            api_req.query_params.insert("badge_id", badge_id);
--         }
--         if let Some(page_size) = request.page_size {
--             api_req
--diff --git a/src/service/application/v6/application/mod.rs b/src/service/application/v6/application/mod.rs
--index 15b2b8a..8255308 100644
----- a/src/service/application/v6/application/mod.rs
--+++ b/src/service/application/v6/application/mod.rs
--@@ -8,6 +8,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -34,7 +35,11 @@ impl ApplicationService {
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let api_req = ApiRequest {
--             http_method: Method::PATCH,
---            api_path: format!("/open-apis/application/v6/applications/{app_id}/transfer_owner"),
--+            api_path: EndpointBuilder::replace_param(
--+                Endpoints::APPLICATION_V6_APP_TRANSFER_OWNER,
--+                "app_id",
--+                app_id,
--+            ),
--             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
--             body: serde_json::to_vec(&request)?,
--             ..Default::default()
--diff --git a/src/service/application/v6/application_feedback/mod.rs b/src/service/application/v6/application_feedback/mod.rs
--index 19d0234..47a4723 100644
----- a/src/service/application/v6/application_feedback/mod.rs
--+++ b/src/service/application/v6/application_feedback/mod.rs
--@@ -74,10 +74,7 @@ impl ApplicationFeedbackService {
--             );
--         }
--         if let Some(status) = status {
---            query_params.insert(
---                "status",
---                serde_json::to_string(&status).unwrap_or_default(),
---            );
--+            query_params.insert("status", serde_json::to_string(&status).unwrap_or_default());
--         }
--         if let Some(page_size) = page_size {
--             query_params.insert("page_size", page_size.to_string());
--diff --git a/src/service/attendance/v1/group.rs b/src/service/attendance/v1/group.rs
--index 05d540d..98da09c 100644
----- a/src/service/attendance/v1/group.rs
--+++ b/src/service/attendance/v1/group.rs
--@@ -2,8 +2,13 @@ use reqwest::Method;
-- use serde_json::json;
-- 
-- use crate::core::{
---    api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
---    req_option::RequestOption, SDKResult,
--+    api_resp::BaseResponse,
--+    config::Config,
--+    constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--+    http::Transport,
--+    req_option::RequestOption,
--+    SDKResult,
-- };
-- 
-- use super::models::{
--@@ -39,9 +44,7 @@ impl GroupService {
--             .insert("employee_type", request.employee_type.clone());
-- 
--         if let Some(dept_type) = &request.dept_type {
---            api_req
---                .query_params
---                .insert("dept_type", dept_type.clone());
--+            api_req.query_params.insert("dept_type", dept_type.clone());
--         }
-- 
--         if let Some(page_size) = &request.page_size {
--@@ -81,9 +84,7 @@ impl GroupService {
--             .insert("employee_type", request.employee_type.clone());
-- 
--         if let Some(dept_type) = &request.dept_type {
---            api_req
---                .query_params
---                .insert("dept_type", dept_type.clone());
--+            api_req.query_params.insert("dept_type", dept_type.clone());
--         }
-- 
--         // 构建请求体
--@@ -168,9 +169,7 @@ impl GroupService {
--             .insert("employee_type", request.employee_type);
-- 
--         if let Some(dept_type) = request.dept_type {
---            api_req
---                .query_params
---                .insert("dept_type", dept_type);
--+            api_req.query_params.insert("dept_type", dept_type);
--         }
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--@@ -198,9 +197,7 @@ impl GroupService {
--             .insert("employee_type", request.employee_type);
-- 
--         if let Some(dept_type) = request.dept_type {
---            api_req
---                .query_params
---                .insert("dept_type", dept_type);
--+            api_req.query_params.insert("dept_type", dept_type);
--         }
-- 
--         // 构建请求体
--@@ -235,9 +232,7 @@ impl GroupService {
--             .insert("employee_type", request.employee_type);
-- 
--         if let Some(dept_type) = request.dept_type {
---            api_req
---                .query_params
---                .insert("dept_type", dept_type);
--+            api_req.query_params.insert("dept_type", dept_type);
--         }
-- 
--         if let Some(page_size) = request.page_size {
--diff --git a/src/service/attendance/v1/shift.rs b/src/service/attendance/v1/shift.rs
--index 7142a06..8412a43 100644
----- a/src/service/attendance/v1/shift.rs
--+++ b/src/service/attendance/v1/shift.rs
--@@ -3,8 +3,14 @@ use serde_json::json;
-- 
-- use crate::{
--     core::{
---        api_req::ApiRequest, api_resp::BaseResponse, config::Config, constants::AccessTokenType,
---        http::Transport, req_option::RequestOption, SDKResult,
--+        api_req::ApiRequest,
--+        api_resp::BaseResponse,
--+        config::Config,
--+        constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--+        http::Transport,
--+        req_option::RequestOption,
--+        SDKResult,
--     },
--     impl_executable_builder_owned,
-- };
--@@ -31,7 +37,7 @@ impl ShiftService {
--     ) -> SDKResult<BaseResponse<CreateShiftRespData>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/attendance/v1/shifts".to_string();
--+        api_req.api_path = Endpoints::ATTENDANCE_V1_SHIFTS.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         // 添加必需的查询参数
--@@ -113,7 +119,11 @@ impl ShiftService {
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!("/open-apis/attendance/v1/shifts/{}", request.shift_id);
--+        api_req.api_path = EndpointBuilder::replace_param(
--+            Endpoints::ATTENDANCE_V1_SHIFT_DELETE,
--+            "shift_id",
--+            &request.shift_id,
--+        );
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--@@ -132,7 +142,11 @@ impl ShiftService {
--     ) -> SDKResult<BaseResponse<Shift>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!("/open-apis/attendance/v1/shifts/{}", request.shift_id);
--+        api_req.api_path = EndpointBuilder::replace_param(
--+            Endpoints::ATTENDANCE_V1_SHIFT_GET,
--+            "shift_id",
--+            &request.shift_id,
--+        );
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--@@ -151,7 +165,7 @@ impl ShiftService {
--     ) -> SDKResult<BaseResponse<Shift>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/attendance/v1/shifts/query".to_string();
--+        api_req.api_path = Endpoints::ATTENDANCE_V1_SHIFTS_QUERY.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         // 添加必需的查询参数
--@@ -197,7 +211,7 @@ impl ShiftService {
--     ) -> SDKResult<BaseResponse<ShiftListData>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::GET;
---        api_req.api_path = "/open-apis/attendance/v1/shifts".to_string();
--+        api_req.api_path = Endpoints::ATTENDANCE_V1_SHIFTS.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         // 添加查询参数
--diff --git a/src/service/attendance/v1/user_approval.rs b/src/service/attendance/v1/user_approval.rs
--index 9526c44..8a4dfb6 100644
----- a/src/service/attendance/v1/user_approval.rs
--+++ b/src/service/attendance/v1/user_approval.rs
--@@ -42,9 +42,7 @@ impl UserApprovalService {
--         }
-- 
--         if let Some(date_from) = request.date_from {
---            api_req
---                .query_params
---                .insert("date_from", date_from);
--+            api_req.query_params.insert("date_from", date_from);
--         }
-- 
--         if let Some(date_to) = request.date_to {
--diff --git a/src/service/attendance/v1/user_setting.rs b/src/service/attendance/v1/user_setting.rs
--index 440424b..975277e 100644
----- a/src/service/attendance/v1/user_setting.rs
--+++ b/src/service/attendance/v1/user_setting.rs
--@@ -166,9 +166,7 @@ impl UserSettingService {
--         api_req
--             .query_params
--             .insert("employee_type", request.employee_type);
---        api_req
---            .query_params
---            .insert("face_key", request.face_key);
--+        api_req.query_params.insert("face_key", request.face_key);
-- 
--         // 对于文件下载，我们需要直接获取响应体字节数据
--         // 这里暂时返回一个模拟的照片数据，实际实现时需要从 HTTP 响应中获取
--diff --git a/src/service/attendance/v1/user_task_remedy.rs b/src/service/attendance/v1/user_task_remedy.rs
--index 7bd0242..0be84e9 100644
----- a/src/service/attendance/v1/user_task_remedy.rs
--+++ b/src/service/attendance/v1/user_task_remedy.rs
--@@ -3,8 +3,8 @@ use serde_json::json;
-- 
-- use crate::{
--     core::{
---        api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
---        req_option::RequestOption, SDKResult,
--+        api_resp::BaseResponse, config::Config, constants::AccessTokenType, endpoints::Endpoints,
--+        http::Transport, req_option::RequestOption, SDKResult,
--     },
--     impl_executable_builder_owned,
-- };
--@@ -32,7 +32,7 @@ impl UserTaskRemedyService {
--     ) -> SDKResult<BaseResponse<CreateUserTaskRemedyRespData>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/attendance/v1/user_task_remedys".to_string();
--+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_TASK_REMEDYS.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         // 添加查询参数
--@@ -79,9 +79,7 @@ impl UserTaskRemedyService {
--         api_req.query_params.insert("user_id", request.user_id);
-- 
--         if let Some(date_from) = request.date_from {
---            api_req
---                .query_params
---                .insert("date_from", date_from);
--+            api_req.query_params.insert("date_from", date_from);
--         }
-- 
--         if let Some(date_to) = request.date_to {
--@@ -104,7 +102,7 @@ impl UserTaskRemedyService {
--     ) -> SDKResult<BaseResponse<QueryUserTaskRemedyRespData>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::GET;
---        api_req.api_path = "/open-apis/attendance/v1/user_task_remedys".to_string();
--+        api_req.api_path = Endpoints::ATTENDANCE_V1_USER_TASK_REMEDYS.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant];
-- 
--         // 添加查询参数
--@@ -117,9 +115,7 @@ impl UserTaskRemedyService {
--         }
-- 
--         if let Some(date_from) = request.date_from {
---            api_req
---                .query_params
---                .insert("date_from", date_from);
--+            api_req.query_params.insert("date_from", date_from);
--         }
-- 
--         if let Some(date_to) = request.date_to {
--diff --git a/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs b/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs
--index cab2e12..e05ceb9 100644
----- a/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs
--@@ -131,8 +131,8 @@ impl DashboardService {
--     ) -> SDKResult<BaseResponse<ListDashboardResponse>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = Endpoints::BITABLE_V1_DASHBOARDS
---        .replace("{app_token}", &request.app_token);
--+        api_req.api_path =
--+            Endpoints::BITABLE_V1_DASHBOARDS.replace("{app_token}", &request.app_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/bitable/v1/app_role/create.rs b/src/service/cloud_docs/bitable/v1/app_role/create.rs
--index 87bae51..37cee80 100644
----- a/src/service/cloud_docs/bitable/v1/app_role/create.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_role/create.rs
--@@ -25,8 +25,7 @@ impl AppRoleService {
--     ) -> SDKResult<BaseResponse<CreateAppRoleResponse>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = Endpoints::BITABLE_V1_ROLES
---        .replace("{app_token}", &request.app_token);
--+        api_req.api_path = Endpoints::BITABLE_V1_ROLES.replace("{app_token}", &request.app_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/bitable/v1/app_role/list.rs b/src/service/cloud_docs/bitable/v1/app_role/list.rs
--index cb6a494..d49acee 100644
----- a/src/service/cloud_docs/bitable/v1/app_role/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_role/list.rs
--@@ -121,8 +121,7 @@ pub async fn list_app_roles(
-- ) -> SDKResult<BaseResponse<ListAppRoleResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = Endpoints::BITABLE_V1_ROLES
---        .replace("{app_token}", &request.app_token);
--+    api_req.api_path = Endpoints::BITABLE_V1_ROLES.replace("{app_token}", &request.app_token);
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/create.rs b/src/service/cloud_docs/bitable/v1/app_role_member/create.rs
--index 6fb4ed2..e3d5fe7 100644
----- a/src/service/cloud_docs/bitable/v1/app_role_member/create.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_role_member/create.rs
--@@ -26,8 +26,8 @@ impl AppRoleMemberService {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
--         api_req.api_path = Endpoints::BITABLE_V1_ROLE_MEMBERS
---        .replace("{app_token}", &request.app_token)
---        .replace("{role_id}", &request.role_id);
--+            .replace("{app_token}", &request.app_token)
--+            .replace("{role_id}", &request.role_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/list.rs b/src/service/cloud_docs/bitable/v1/app_role_member/list.rs
--index 85b8d81..908122c 100644
----- a/src/service/cloud_docs/bitable/v1/app_role_member/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_role_member/list.rs
--@@ -26,8 +26,8 @@ impl AppRoleMemberService {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
--         api_req.api_path = Endpoints::BITABLE_V1_ROLE_MEMBERS
---        .replace("{app_token}", &request.app_token)
---        .replace("{role_id}", &request.role_id);
--+            .replace("{app_token}", &request.app_token)
--+            .replace("{role_id}", &request.role_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/bitable/v1/app_table/list.rs b/src/service/cloud_docs/bitable/v1/app_table/list.rs
--index aafa04c..87d5e3d 100644
----- a/src/service/cloud_docs/bitable/v1/app_table/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_table/list.rs
--@@ -5,7 +5,7 @@ use crate::core::{
--     api_req::ApiRequest,
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     constants::AccessTokenType,
---        endpoints::Endpoints,
--+    endpoints::Endpoints,
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
--index d66ea14..aab1729 100644
----- a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
--@@ -5,7 +5,7 @@ use crate::core::{
--     api_req::ApiRequest,
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     constants::AccessTokenType,
---        endpoints::Endpoints,
--+    endpoints::Endpoints,
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--diff --git a/src/service/cloud_docs/bitable/v1/app_workflow/list.rs b/src/service/cloud_docs/bitable/v1/app_workflow/list.rs
--index bf94972..2a449bb 100644
----- a/src/service/cloud_docs/bitable/v1/app_workflow/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/app_workflow/list.rs
--@@ -6,7 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
---        endpoints::Endpoints,
--+    endpoints::Endpoints,
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -143,8 +143,7 @@ pub async fn list_workflows(
-- ) -> SDKResult<BaseResponse<ListWorkflowResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = Endpoints::BITABLE_V1_WORKFLOWS
---        .replace("{app_token}", &request.app_token);
--+    api_req.api_path = Endpoints::BITABLE_V1_WORKFLOWS.replace("{app_token}", &request.app_token);
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/bitable/v1/form/list.rs b/src/service/cloud_docs/bitable/v1/form/list.rs
--index cf7eea3..5d31bab 100644
----- a/src/service/cloud_docs/bitable/v1/form/list.rs
--+++ b/src/service/cloud_docs/bitable/v1/form/list.rs
--@@ -6,7 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
---        endpoints::Endpoints,
--+    endpoints::Endpoints,
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--diff --git a/src/service/cloud_docs/docx/v1/document.rs b/src/service/cloud_docs/docx/v1/document.rs
--index 79cc0f9..4826249 100644
----- a/src/service/cloud_docs/docx/v1/document.rs
--+++ b/src/service/cloud_docs/docx/v1/document.rs
--@@ -80,8 +80,7 @@ impl DocumentService {
--     ) -> SDKResult<BaseResponse<GetRawContentRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: Endpoints::DOCX_V1_DOCUMENT_RAW_CONTENT
---                .replace("{}", &document_id.into()),
--+            api_path: Endpoints::DOCX_V1_DOCUMENT_RAW_CONTENT.replace("{}", &document_id.into()),
--             ..Default::default()
--         };
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
--@@ -102,8 +101,7 @@ impl DocumentService {
--     ) -> SDKResult<BaseResponse<ListDocumentBlocksRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: Endpoints::DOCX_V1_DOCUMENT_BLOCKS
---                .replace("{}", &request.document_id),
--+            api_path: Endpoints::DOCX_V1_DOCUMENT_BLOCKS.replace("{}", &request.document_id),
--             ..Default::default()
--         };
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
--@@ -134,8 +132,7 @@ impl DocumentService {
--     ) -> SDKResult<BaseResponse<ConvertToDocxRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::POST,
---            api_path: Endpoints::DOCX_V1_DOCUMENT_CONVERT
---                .replace("{}", &document_id.into()),
--+            api_path: Endpoints::DOCX_V1_DOCUMENT_CONVERT.replace("{}", &document_id.into()),
--             ..Default::default()
--         };
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
--diff --git a/src/service/cloud_docs/drive/v1/event.rs b/src/service/cloud_docs/drive/v1/event.rs
--index 06c55d7..902f3d2 100644
----- a/src/service/cloud_docs/drive/v1/event.rs
--+++ b/src/service/cloud_docs/drive/v1/event.rs
--@@ -59,10 +59,9 @@ impl EventService {
--     ) -> SDKResult<BaseResponse<GetFileSubscriptionRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: format!(
---                "/open-apis/drive/v1/files/{}/subscriptions/{}",
---                request.file_token, request.subscription_id
---            ),
--+            api_path: Endpoints::DRIVE_V1_FILE_SUBSCRIPTIONS
--+                .replace("{}", &request.file_token)
--+                .replace("{}", &request.subscription_id),
--             ..Default::default()
--         };
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
--@@ -83,10 +82,9 @@ impl EventService {
--     ) -> SDKResult<BaseResponse<UnsubscribeFileEventsRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::DELETE,
---            api_path: format!(
---                "/open-apis/drive/v1/files/{}/subscriptions/{}",
---                request.file_token, request.subscription_id
---            ),
--+            api_path: Endpoints::DRIVE_V1_FILE_SUBSCRIPTIONS
--+                .replace("{}", &request.file_token)
--+                .replace("{}", &request.subscription_id),
--             ..Default::default()
--         };
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
--diff --git a/src/service/cloud_docs/drive/v1/file.rs b/src/service/cloud_docs/drive/v1/file.rs
--index 9c2b7b0..1800ea1 100644
----- a/src/service/cloud_docs/drive/v1/file.rs
--+++ b/src/service/cloud_docs/drive/v1/file.rs
--@@ -62,8 +62,7 @@ impl FileService {
--     ) -> SDKResult<GetFileStatisticsRespData> {
--         let api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: Endpoints::DRIVE_V1_FILE_STATISTICS
---                .replace("{}", &request.file_token),
--+            api_path: Endpoints::DRIVE_V1_FILE_STATISTICS.replace("{}", &request.file_token),
--             supported_access_token_types: vec![AccessTokenType::User, AccessTokenType::Tenant],
--             ..Default::default()
--         };
--@@ -85,8 +84,7 @@ impl FileService {
--     ) -> SDKResult<ListFileViewRecordsRespData> {
--         let mut api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: Endpoints::DRIVE_V1_FILE_VIEW_RECORDS
---                .replace("{}", &request.file_token),
--+            api_path: Endpoints::DRIVE_V1_FILE_VIEW_RECORDS.replace("{}", &request.file_token),
--             supported_access_token_types: vec![AccessTokenType::User, AccessTokenType::Tenant],
--             ..Default::default()
--         };
--@@ -277,7 +275,7 @@ impl FileService {
--     ) -> SDKResult<FileUploadPartRespData> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/drive/v1/files/upload_part".to_string();
--+        api_req.api_path = Endpoints::DRIVE_V1_FILES_UPLOAD_PART.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
-- 
--         let api_resp: BaseResponse<FileUploadPartRespData> =
--diff --git a/src/service/cloud_docs/drive/v1/files.rs b/src/service/cloud_docs/drive/v1/files.rs
--index 63e6527..cd46a27 100644
----- a/src/service/cloud_docs/drive/v1/files.rs
--+++ b/src/service/cloud_docs/drive/v1/files.rs
--@@ -8,6 +8,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, BinaryResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -263,7 +264,7 @@ impl FilesService {
--     ) -> SDKResult<UploadAllResponse> {
--         let mut api_req = upload_all_request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/drive/v1/files/upload_all".to_string();
--+        api_req.api_path = Endpoints::DRIVE_V1_FILES_UPLOAD_ALL.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<UploadAllResponse> =
--@@ -280,7 +281,7 @@ impl FilesService {
--     ) -> SDKResult<BinaryResponse> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!("/open-apis/drive/v1/files/{}/download", request.file_token);
--+        api_req.api_path = Endpoints::DRIVE_V1_FILE_DOWNLOAD.replace("{}", &request.file_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<BinaryResponse> =
--diff --git a/src/service/cloud_docs/drive/v1/folder.rs b/src/service/cloud_docs/drive/v1/folder.rs
--index e7caf3f..e0bba1e 100644
----- a/src/service/cloud_docs/drive/v1/folder.rs
--+++ b/src/service/cloud_docs/drive/v1/folder.rs
--@@ -57,8 +57,7 @@ impl FolderService {
--     ) -> SDKResult<BaseResponse<ListFilesRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: Endpoints::DRIVE_V1_FOLDER_CHILDREN
---                .replace("{}", &request.folder_token),
--+            api_path: Endpoints::DRIVE_V1_FOLDER_CHILDREN.replace("{}", &request.folder_token),
--             ..Default::default()
--         };
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
--diff --git a/src/service/cloud_docs/drive/v1/like.rs b/src/service/cloud_docs/drive/v1/like.rs
--index 051e41a..1cc9e96 100644
----- a/src/service/cloud_docs/drive/v1/like.rs
--+++ b/src/service/cloud_docs/drive/v1/like.rs
--@@ -37,8 +37,7 @@ impl LikeService {
--     ) -> SDKResult<BaseResponse<ListFileLikesRespData>> {
--         let mut api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: Endpoints::DRIVE_V1_FILE_LIKE_RECORDS
---                .replace("{}", &request.file_token),
--+            api_path: Endpoints::DRIVE_V1_FILE_LIKE_RECORDS.replace("{}", &request.file_token),
--             supported_access_token_types: vec![AccessTokenType::User, AccessTokenType::Tenant],
--             ..Default::default()
--         };
--diff --git a/src/service/cloud_docs/drive/v1/media.rs b/src/service/cloud_docs/drive/v1/media.rs
--index 72735c3..de05e2d 100644
----- a/src/service/cloud_docs/drive/v1/media.rs
--+++ b/src/service/cloud_docs/drive/v1/media.rs
--@@ -54,7 +54,7 @@ impl MediaService {
--     ) -> SDKResult<BaseResponse<UploadMediaRespData>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/drive/v1/medias/upload_all".to_string();
--+        api_req.api_path = Endpoints::DRIVE_V1_MEDIAS_UPLOAD_ALL.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--@@ -95,7 +95,7 @@ impl MediaService {
--     ) -> SDKResult<BaseResponse<UploadPartRespData>> {
--         let mut api_req = request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/drive/v1/medias/upload_part".to_string();
--+        api_req.api_path = Endpoints::DRIVE_V1_MEDIAS_UPLOAD_PART.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::User, AccessTokenType::Tenant];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/drive/v1/permissions.rs b/src/service/cloud_docs/drive/v1/permissions.rs
--index 53852c3..cfd4fc3 100644
----- a/src/service/cloud_docs/drive/v1/permissions.rs
--+++ b/src/service/cloud_docs/drive/v1/permissions.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -31,7 +32,7 @@ impl PermissionsService {
--     ) -> SDKResult<BaseResponse<GetPermissionResponse>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!("/open-apis/drive/v2/permissions/{}/public", request.token);
--+        api_req.api_path = Endpoints::DRIVE_V2_PERMISSIONS_PUBLIC.replace("{}", &request.token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--@@ -47,7 +48,7 @@ impl PermissionsService {
--     ) -> SDKResult<BaseResponse<GetPermissionResponse>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PATCH;
---        api_req.api_path = format!("/open-apis/drive/v2/permissions/{}/public", request.token);
--+        api_req.api_path = Endpoints::DRIVE_V2_PERMISSIONS_PUBLIC.replace("{}", &request.token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/drive/v2/explorer.rs b/src/service/cloud_docs/drive/v2/explorer.rs
--index b305c76..6addcfe 100644
----- a/src/service/cloud_docs/drive/v2/explorer.rs
--+++ b/src/service/cloud_docs/drive/v2/explorer.rs
--@@ -56,7 +56,8 @@ impl ExplorerService {
--     ) -> SDKResult<BaseResponse<ExplorerFolderMeta>> {
--         let api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: format!("/open-apis/drive/explorer/v2/folder/{folder_token}/meta"),
--+            api_path: Endpoints::DRIVE_EXPLORER_V2_FOLDER_META
--+                .replace("{folder_token}", folder_token),
--             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
--             ..Default::default()
--         };
--@@ -75,7 +76,7 @@ impl ExplorerService {
--     ) -> SDKResult<BaseResponse<CreateFolderResponse>> {
--         let mut api_req = create_folder_request.api_req;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/drive/v1/files/create_folder".to_string();
--+        api_req.api_path = Endpoints::DRIVE_V1_FILES_CREATE_FOLDER.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--@@ -93,7 +94,7 @@ impl ExplorerService {
--     ) -> SDKResult<BaseResponse<ListFolderResponse>> {
--         let mut api_req = list_folder_request.api_req;
--         api_req.http_method = Method::GET;
---        api_req.api_path = "/open-apis/drive/v1/files".to_string();
--+        api_req.api_path = Endpoints::DRIVE_V1_FILES.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/append_data.rs b/src/service/cloud_docs/sheets/v2/data_operation/append_data.rs
--index 5e7773c..47c50d9 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/append_data.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/append_data.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- use serde_json::Value;
-- 
--@@ -84,10 +85,8 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<AppendDataResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_append",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_VALUES_APPEND
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/batch_set_cell_style.rs b/src/service/cloud_docs/sheets/v2/data_operation/batch_set_cell_style.rs
--index 358c85c..d59ea98 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/batch_set_cell_style.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/batch_set_cell_style.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -92,10 +93,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<BatchSetCellStyleResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/styles_batch_update",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_STYLES_BATCH_UPDATE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::PUT;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/merge_cells.rs b/src/service/cloud_docs/sheets/v2/data_operation/merge_cells.rs
--index d675134..2bc7a2d 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/merge_cells.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/merge_cells.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -82,10 +83,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<MergeCellsResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/merge_cells",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V2_SPREADSHEET_MERGE_CELLS.replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/prepend_data.rs b/src/service/cloud_docs/sheets/v2/data_operation/prepend_data.rs
--index 102fb6b..a8c2a6b 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/prepend_data.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/prepend_data.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- use serde_json::Value;
-- 
--@@ -71,10 +72,8 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<PrependDataResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_prepend",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_VALUES_PREPEND
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs b/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs
--index d978b5e..4e01538 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Deserialize;
-- 
-- use crate::{
--@@ -160,11 +161,9 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<ReadingSingleRangeResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values/{range}",
---            spreadsheet_token = request.spreadsheet_token,
---            range = request.range,
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_VALUES_RANGE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.range);
--         api_req.http_method = reqwest::Method::GET;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs b/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs
--index 6bb3532..7f373d6 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Deserialize;
-- 
-- use crate::{
--@@ -159,10 +160,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<ReadingMultiRangesResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_batch_get",
---            spreadsheet_token = request.spreadsheet_token,
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_VALUES_BATCH_GET
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::GET;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/set_cell_style.rs b/src/service/cloud_docs/sheets/v2/data_operation/set_cell_style.rs
--index d29f148..dc60d3d 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/set_cell_style.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/set_cell_style.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -129,10 +130,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<SetCellStyleResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/style",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V2_SPREADSHEET_STYLE.replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::PUT;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/share.rs b/src/service/cloud_docs/sheets/v2/data_operation/share.rs
--index 4f6f012..8b300ad 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/share.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/share.rs
--@@ -2,7 +2,6 @@ use serde::{Deserialize, Serialize};
-- use serde_json::Value;
-- 
-- use crate::core::api_resp::{ApiResponseTrait, ResponseFormat};
---
-- #[derive(Serialize, Debug, Default)]
-- pub(crate) struct ValueRangeRequest {
--     /// 插入范围，包含 sheetId 与单元格范围两部分，目前支持四种索引方式，详见
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/split_cells.rs b/src/service/cloud_docs/sheets/v2/data_operation/split_cells.rs
--index 3b3b5bb..ed09896 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/split_cells.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/split_cells.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -71,10 +72,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<SplitCellsResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/unmerge_cells",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_UNMERGE_CELLS
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_a_single_range.rs b/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_a_single_range.rs
--index 2a5358b..518f5de 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_a_single_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_a_single_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- 
-- use crate::{
--@@ -76,10 +77,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<WriteDataToSingleRangeResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V2_SPREADSHEET_VALUES.replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::PUT;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_multi_ranges.rs b/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_multi_ranges.rs
--index 7d03321..4ee6745 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_multi_ranges.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/write_data_to_multi_ranges.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -106,10 +107,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<WriteDataToMultiRangesResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_batch_update",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_VALUES_BATCH_UPDATE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/data_operation/write_image.rs b/src/service/cloud_docs/sheets/v2/data_operation/write_image.rs
--index a1ebf1b..3393ab8 100644
----- a/src/service/cloud_docs/sheets/v2/data_operation/write_image.rs
--+++ b/src/service/cloud_docs/sheets/v2/data_operation/write_image.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -92,10 +93,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<WriteImageResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/values_image",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V2_SPREADSHEET_VALUES_IMAGE.replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/sheet_row_col/add_dimension_range.rs b/src/service/cloud_docs/sheets/v2/sheet_row_col/add_dimension_range.rs
--index a7e5764..62ee4b4 100644
----- a/src/service/cloud_docs/sheets/v2/sheet_row_col/add_dimension_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/sheet_row_col/add_dimension_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -86,10 +87,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<DimensionRangeResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/dimension_range",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/sheet_row_col/delete_dimension_range.rs b/src/service/cloud_docs/sheets/v2/sheet_row_col/delete_dimension_range.rs
--index d2309fb..25983cf 100644
----- a/src/service/cloud_docs/sheets/v2/sheet_row_col/delete_dimension_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/sheet_row_col/delete_dimension_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -90,10 +91,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<DeleteDimensionRangeResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/dimension_range",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::DELETE;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/sheet_row_col/insert_dimension_range.rs b/src/service/cloud_docs/sheets/v2/sheet_row_col/insert_dimension_range.rs
--index 184d553..c73767a 100644
----- a/src/service/cloud_docs/sheets/v2/sheet_row_col/insert_dimension_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/sheet_row_col/insert_dimension_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- 
-- use crate::{
--@@ -106,10 +107,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/insert_dimension_range",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_INSERT_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/sheet_row_col/update_dimension_range.rs b/src/service/cloud_docs/sheets/v2/sheet_row_col/update_dimension_range.rs
--index b2149e6..4d14104 100644
----- a/src/service/cloud_docs/sheets/v2/sheet_row_col/update_dimension_range.rs
--+++ b/src/service/cloud_docs/sheets/v2/sheet_row_col/update_dimension_range.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- 
-- use crate::{
--@@ -115,10 +116,8 @@ impl SpreadsheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/dimension_range",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::PUT;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/operate_sheets.rs b/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/operate_sheets.rs
--index 2a5214f..e9b6527 100644
----- a/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/operate_sheets.rs
--+++ b/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/operate_sheets.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option, SDKResult,
--     },
--     impl_executable_builder_owned,
--@@ -155,10 +156,8 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<OperateSheetResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/sheets_batch_update",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_SHEETS_BATCH_UPDATE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--diff --git a/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/update_sheet_properties.rs b/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/update_sheet_properties.rs
--index d85d0f6..19426e7 100644
----- a/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/update_sheet_properties.rs
--+++ b/src/service/cloud_docs/sheets/v2/spreadsheet_sheet/update_sheet_properties.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::{Deserialize, Serialize};
-- 
-- use crate::{
--@@ -124,10 +125,8 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<OperateSheetResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v2/spreadsheets/{spreadsheet_token}/sheets_batch_update",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V2_SPREADSHEET_SHEETS_BATCH_UPDATE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/condition_format/create.rs b/src/service/cloud_docs/sheets/v3/condition_format/create.rs
--index cad793c..9aec7c5 100644
----- a/src/service/cloud_docs/sheets/v3/condition_format/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/condition_format/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<CreateConditionFormatsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/conditionFormat",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_CONDITION_FORMAT
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/condition_format/delete.rs b/src/service/cloud_docs/sheets/v3/condition_format/delete.rs
--index ddc38bc..40dbe56 100644
----- a/src/service/cloud_docs/sheets/v3/condition_format/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/condition_format/delete.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<DeleteConditionFormatsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/conditionFormat",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_CONDITION_FORMAT
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/condition_format/get.rs b/src/service/cloud_docs/sheets/v3/condition_format/get.rs
--index 7b19daf..e362cdd 100644
----- a/src/service/cloud_docs/sheets/v3/condition_format/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/condition_format/get.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<GetConditionFormatsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/conditionFormat",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_CONDITION_FORMAT
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         // 添加查询参数
--diff --git a/src/service/cloud_docs/sheets/v3/condition_format/update.rs b/src/service/cloud_docs/sheets/v3/condition_format/update.rs
--index c7aa1ca..7879295 100644
----- a/src/service/cloud_docs/sheets/v3/condition_format/update.rs
--+++ b/src/service/cloud_docs/sheets/v3/condition_format/update.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<UpdateConditionFormatsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/conditionFormat",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_CONDITION_FORMAT
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs b/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs
--index a74e006..b604482 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -26,10 +27,9 @@ impl DataOperationService {
--     ) -> SDKResult<AppendDataResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/values/{}/append",
---            request.spreadsheet_token, request.range
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_VALUES_APPEND
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.range);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<AppendDataResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs b/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs
--index 7e43ab7..97b0024 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -26,10 +27,9 @@ impl DataOperationService {
--     ) -> SDKResult<BatchSetCellStyleResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/styles/batch_update",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_STYLES_BATCH_UPDATE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<BatchSetCellStyleResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs
--index e0f0410..f4539c4 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option,
--         standard_response::StandardResponse,
--         validation::{self, ValidationResult},
--@@ -238,11 +239,9 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<FindCellsResponse> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/find",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_SHEET_FIND
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs
--index 4d0a708..365c3ae 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -25,10 +26,9 @@ impl DataOperationService {
--     ) -> SDKResult<MergeCellsResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/merge_cells",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_MERGE_CELLS
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<MergeCellsResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs b/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs
--index 106bcb9..0775b7e 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -26,10 +27,9 @@ impl DataOperationService {
--     ) -> SDKResult<PrependDataResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/values/{}/prepend",
---            request.spreadsheet_token, request.range
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_VALUES_PREPEND
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.range);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<PrependDataResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs b/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs
--index 583d012..3ca48e8 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -27,10 +28,8 @@ impl DataOperationService {
--     ) -> SDKResult<ReadingMultipleRangesResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/values/batch_get",
---            request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_VALUES_BATCH_GET
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<ReadingMultipleRangesResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs b/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs
--index 0e4b26f..7c532f9 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -27,10 +28,9 @@ impl DataOperationService {
--     ) -> SDKResult<ReadingSingleRangeResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/values/{}",
---            request.spreadsheet_token, request.range
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_VALUES_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.range);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<ReadingSingleRangeResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs
--index 27cd37f..22a3f96 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option,
--         standard_response::StandardResponse,
--         SDKResult,
--@@ -135,11 +136,9 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<ReplaceCellsResponse> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/replace",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_SHEET_REPLACE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs b/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs
--index 6e8bf02..8940303 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -24,10 +25,9 @@ impl DataOperationService {
--     ) -> SDKResult<SetCellStyleResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/style",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_STYLE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<SetCellStyleResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs
--index b2eb854..81172ba 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -24,10 +25,9 @@ impl DataOperationService {
--     ) -> SDKResult<SplitCellsResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/unmerge_cells",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_UNMERGE_CELLS
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<SplitCellsResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs b/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs
--index 15b5ab6..2e0268a 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -25,10 +26,8 @@ impl DataOperationService {
--     ) -> SDKResult<WriteDataToMultipleRangesResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/values/batch_update",
---            request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_VALUES_BATCH_UPDATE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<WriteDataToMultipleRangesResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs b/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs
--index 06a8d71..c17e79f 100644
----- a/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         standard_response::StandardResponse,
--@@ -24,10 +25,8 @@ impl DataOperationService {
--     ) -> SDKResult<WriteImagesResponseData> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/values_image",
---            request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V3_SPREADSHEET_VALUES_IMAGE.replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp: BaseResponse<WriteImagesResponseData> =
--diff --git a/src/service/cloud_docs/sheets/v3/data_validation/create.rs b/src/service/cloud_docs/sheets/v3/data_validation/create.rs
--index a65b603..56ac4a6 100644
----- a/src/service/cloud_docs/sheets/v3/data_validation/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_validation/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<SetDataValidationResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DATA_VALIDATION
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/data_validation/delete.rs b/src/service/cloud_docs/sheets/v3/data_validation/delete.rs
--index 2cace2a..a28e538 100644
----- a/src/service/cloud_docs/sheets/v3/data_validation/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_validation/delete.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,10 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<DeleteDataValidationResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation/{}",
---            request.spreadsheet_token, request.sheet_id, request.data_validation_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DATA_VALIDATION_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.data_validation_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/data_validation/query.rs b/src/service/cloud_docs/sheets/v3/data_validation/query.rs
--index 2631503..4f83347 100644
----- a/src/service/cloud_docs/sheets/v3/data_validation/query.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_validation/query.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<QueryDataValidationsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DATA_VALIDATION
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         // 添加查询参数
--diff --git a/src/service/cloud_docs/sheets/v3/data_validation/update.rs b/src/service/cloud_docs/sheets/v3/data_validation/update.rs
--index 4795451..c20252c 100644
----- a/src/service/cloud_docs/sheets/v3/data_validation/update.rs
--+++ b/src/service/cloud_docs/sheets/v3/data_validation/update.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,10 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<UpdateDataValidationResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dataValidation/{}",
---            request.spreadsheet_token, request.sheet_id, request.data_validation_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DATA_VALIDATION_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.data_validation_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/float_image/create.rs b/src/service/cloud_docs/sheets/v3/float_image/create.rs
--index 9e7245a..0269a8a 100644
----- a/src/service/cloud_docs/sheets/v3/float_image/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/float_image/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<CreateFloatImageResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FLOAT_IMAGES
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/float_image/delete.rs b/src/service/cloud_docs/sheets/v3/float_image/delete.rs
--index ab8ab35..4efe5a7 100644
----- a/src/service/cloud_docs/sheets/v3/float_image/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/float_image/delete.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,10 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<DeleteFloatImageResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images/{}",
---            request.spreadsheet_token, request.sheet_id, request.float_image_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FLOAT_IMAGE_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.float_image_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/float_image/get.rs b/src/service/cloud_docs/sheets/v3/float_image/get.rs
--index f942503..27b1840 100644
----- a/src/service/cloud_docs/sheets/v3/float_image/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/float_image/get.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -25,10 +26,10 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<GetFloatImageResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images/{}",
---            request.spreadsheet_token, request.sheet_id, request.float_image_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FLOAT_IMAGE_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.float_image_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/float_image/patch.rs b/src/service/cloud_docs/sheets/v3/float_image/patch.rs
--index a34b6f6..059b9d3 100644
----- a/src/service/cloud_docs/sheets/v3/float_image/patch.rs
--+++ b/src/service/cloud_docs/sheets/v3/float_image/patch.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -25,10 +26,10 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<UpdateFloatImageResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PATCH;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images/{}",
---            request.spreadsheet_token, request.sheet_id, request.float_image_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FLOAT_IMAGE_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.float_image_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/float_image/query.rs b/src/service/cloud_docs/sheets/v3/float_image/query.rs
--index 183d489..5669d11 100644
----- a/src/service/cloud_docs/sheets/v3/float_image/query.rs
--+++ b/src/service/cloud_docs/sheets/v3/float_image/query.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -25,10 +26,9 @@ impl SpreadsheetSheetService {
--     ) -> SDKResult<BaseResponse<QueryFloatImagesResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/float_images",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FLOAT_IMAGES
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/protect_range/create.rs b/src/service/cloud_docs/sheets/v3/protect_range/create.rs
--index 49868c6..1723248 100644
----- a/src/service/cloud_docs/sheets/v3/protect_range/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/protect_range/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,8 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<AddProtectRangeResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/protect_range",
---            request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_PROTECT_RANGE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/protect_range/delete.rs b/src/service/cloud_docs/sheets/v3/protect_range/delete.rs
--index f8870fa..f149453 100644
----- a/src/service/cloud_docs/sheets/v3/protect_range/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/protect_range/delete.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,9 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<DeleteProtectRangeResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/protect_range/{}",
---            request.spreadsheet_token, request.protect_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_PROTECT_RANGE_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.protect_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/protect_range/get.rs b/src/service/cloud_docs/sheets/v3/protect_range/get.rs
--index 10284fc..95f6484 100644
----- a/src/service/cloud_docs/sheets/v3/protect_range/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/protect_range/get.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,8 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<GetProtectRangesResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/protect_range",
---            request.spreadsheet_token
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_PROTECT_RANGE
--+            .replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         // 添加查询参数
--diff --git a/src/service/cloud_docs/sheets/v3/protect_range/update.rs b/src/service/cloud_docs/sheets/v3/protect_range/update.rs
--index d169b90..82c9104 100644
----- a/src/service/cloud_docs/sheets/v3/protect_range/update.rs
--+++ b/src/service/cloud_docs/sheets/v3/protect_range/update.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,9 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<UpdateProtectRangeResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/protect_range/{}",
---            request.spreadsheet_token, request.protect_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_PROTECT_RANGE_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.protect_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/sheet_row_col/add_rows_or_columns.rs b/src/service/cloud_docs/sheets/v3/sheet_row_col/add_rows_or_columns.rs
--index ced1fac..36d4100 100644
----- a/src/service/cloud_docs/sheets/v3/sheet_row_col/add_rows_or_columns.rs
--+++ b/src/service/cloud_docs/sheets/v3/sheet_row_col/add_rows_or_columns.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,9 @@ impl SheetRowColService {
--     ) -> SDKResult<BaseResponse<AddRowsOrColumnsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/sheet_row_col/delete_rows_or_columns.rs b/src/service/cloud_docs/sheets/v3/sheet_row_col/delete_rows_or_columns.rs
--index ad584ac..acfc4e9 100644
----- a/src/service/cloud_docs/sheets/v3/sheet_row_col/delete_rows_or_columns.rs
--+++ b/src/service/cloud_docs/sheets/v3/sheet_row_col/delete_rows_or_columns.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -25,10 +26,9 @@ impl SheetRowColService {
--     ) -> SDKResult<BaseResponse<DeleteRowsOrColumnsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/sheet_row_col/insert_rows_or_columns.rs b/src/service/cloud_docs/sheets/v3/sheet_row_col/insert_rows_or_columns.rs
--index 70d5445..f76dde7 100644
----- a/src/service/cloud_docs/sheets/v3/sheet_row_col/insert_rows_or_columns.rs
--+++ b/src/service/cloud_docs/sheets/v3/sheet_row_col/insert_rows_or_columns.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,9 @@ impl SheetRowColService {
--     ) -> SDKResult<BaseResponse<InsertRowsOrColumnsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range:insert",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DIMENSION_RANGE_INSERT
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/sheet_row_col/move_dimension.rs b/src/service/cloud_docs/sheets/v3/sheet_row_col/move_dimension.rs
--index 87ee206..93c77ac 100644
----- a/src/service/cloud_docs/sheets/v3/sheet_row_col/move_dimension.rs
--+++ b/src/service/cloud_docs/sheets/v3/sheet_row_col/move_dimension.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{BaseResponse, EmptyResponse},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option, SDKResult,
--     },
--     service::sheets::v3::SpreadsheetSheetService,
--@@ -115,11 +116,9 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/move_dimension",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_MOVE_DIMENSION
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/sheet_row_col/update_rows_or_columns.rs b/src/service/cloud_docs/sheets/v3/sheet_row_col/update_rows_or_columns.rs
--index cfa821b..5adbd6c 100644
----- a/src/service/cloud_docs/sheets/v3/sheet_row_col/update_rows_or_columns.rs
--+++ b/src/service/cloud_docs/sheets/v3/sheet_row_col/update_rows_or_columns.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,9 @@ impl SheetRowColService {
--     ) -> SDKResult<BaseResponse<UpdateRowsOrColumnsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/dimension_range",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_DIMENSION_RANGE
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet/create.rs b/src/service/cloud_docs/sheets/v3/spreadsheet/create.rs
--index b0a7870..ecb938c 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -25,7 +26,7 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<CreateSpreedSheetResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = "/open-apis/sheets/v3/spreadsheets".to_string();
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEETS.to_string();
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet/get.rs b/src/service/cloud_docs/sheets/v3/spreadsheet/get.rs
--index 5e424a0..fbe26ce 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet/get.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -25,10 +26,8 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<GetSpreadsheetResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}",
---            request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V3_SPREADSHEET_GET.replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet/patch.rs b/src/service/cloud_docs/sheets/v3/spreadsheet/patch.rs
--index 775f16f..f8a856e 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet/patch.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet/patch.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use reqwest::Method;
-- use serde::Serialize;
-- 
--@@ -23,10 +24,8 @@ impl SpreadsheetService {
--     ) -> SDKResult<BaseResponse<RawResponse>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PATCH;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}",
---            request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V3_SPREADSHEET_GET.replace("{}", &request.spreadsheet_token);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/get.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/get.rs
--index 3fd5290..03f164b 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/get.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option, SDKResult,
--     },
--     service::sheets::v3::{spreadsheet_sheet::Sheet, SpreadsheetSheetService},
--@@ -57,11 +58,9 @@ impl SpreadsheetSheetService {
--         option: Option<req_option::RequestOption>,
--     ) -> SDKResult<BaseResponse<GetSpreadsheetSheetResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_SHEET_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::GET;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/query.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/query.rs
--index d4c92de..d7ecc61 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/query.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet/query.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option::RequestOption,
--         SDKResult,
--     },
--@@ -30,10 +31,8 @@ impl SpreadsheetSheetService {
--         option: Option<RequestOption>,
--     ) -> SDKResult<BaseResponse<QuerySpreadsheetSheetResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/query",
---            spreadsheet_token = request.spreadsheet_token
---        );
--+        api_req.api_path =
--+            Endpoints::SHEETS_V3_SPREADSHEET_SHEETS_QUERY.replace("{}", &request.spreadsheet_token);
--         api_req.http_method = reqwest::Method::GET;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/create.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/create.rs
--index a5fdda2..330de4a 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/create.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- 
-- use crate::{
--@@ -87,11 +88,9 @@ impl SpreadsheetSheetFilterService {
--         option: Option<RequestOption>,
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/filter",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::POST;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/delete.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/delete.rs
--index f4401b7..2f0a20d 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/delete.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use crate::{
--     core::{
--         api_req::ApiRequest,
--@@ -54,11 +55,9 @@ impl SpreadsheetSheetFilterService {
--         option: Option<RequestOption>,
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/filter",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::DELETE;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/get.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/get.rs
--index 654bfbd..7fc0a33 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/get.rs
--@@ -5,6 +5,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         req_option::RequestOption,
--         SDKResult,
--     },
--@@ -89,11 +90,9 @@ impl SpreadsheetSheetFilterService {
--         option: Option<RequestOption>,
--     ) -> SDKResult<BaseResponse<SheetFilterResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/filter",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::GET;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/update.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/update.rs
--index 9357da2..851a508 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/update.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter/update.rs
--@@ -1,3 +1,4 @@
--+use crate::core::endpoints::Endpoints;
-- use serde::Serialize;
-- 
-- use crate::{
--@@ -78,11 +79,9 @@ impl SpreadsheetSheetFilterService {
--         option: Option<RequestOption>,
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut api_req = request.api_request;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{spreadsheet_token}/sheets/{sheet_id}/filter",
---            spreadsheet_token = request.spreadsheet_token,
---            sheet_id = request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.http_method = reqwest::Method::PUT;
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
-- 
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/create.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/create.rs
--index 4663dd0..1683286 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -23,10 +24,9 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<CreateFilterViewResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEWS
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/delete.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/delete.rs
--index 26062e9..7f2c31d 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/delete.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,10 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<DeleteFilterViewResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}",
---            request.spreadsheet_token, request.sheet_id, request.filter_view_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/get.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/get.rs
--index 1050787..ec90aed 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/get.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,10 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<GetFilterViewResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}",
---            request.spreadsheet_token, request.sheet_id, request.filter_view_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/patch.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/patch.rs
--index 85fc9bb..4ee0eba 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/patch.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/patch.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,10 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<PatchFilterViewResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PATCH;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}",
---            request.spreadsheet_token, request.sheet_id, request.filter_view_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/query.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/query.rs
--index 5460daa..31b69b9 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/query.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view/query.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,9 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<QueryFilterViewResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views",
---            request.spreadsheet_token, request.sheet_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEWS
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/create.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/create.rs
--index 3cbcdb0..5a6bc94 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/create.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/create.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,10 +23,10 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<CreateFilterViewConditionResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::POST;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions",
---            request.spreadsheet_token, request.sheet_id, request.filter_view_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITIONS
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/delete.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/delete.rs
--index 2f1b609..7a41024 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/delete.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/delete.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -22,13 +23,11 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<DeleteFilterViewConditionResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::DELETE;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions/{}",
---            request.spreadsheet_token,
---            request.sheet_id,
---            request.filter_view_id,
---            request.condition_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITION_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id)
--+            .replace("{}", &request.condition_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/get.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/get.rs
--index 7c7136f..c9bcb9d 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/get.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/get.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,13 +25,11 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<GetFilterViewConditionResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions/{}",
---            request.spreadsheet_token,
---            request.sheet_id,
---            request.filter_view_id,
---            request.condition_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITION_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id)
--+            .replace("{}", &request.condition_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/query.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/query.rs
--index a33ea6a..5edd093 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/query.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/query.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,10 +25,10 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<QueryFilterViewConditionsResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::GET;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions",
---            request.spreadsheet_token, request.sheet_id, request.filter_view_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITIONS
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/update.rs b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/update.rs
--index 210a9f7..0022882 100644
----- a/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/update.rs
--+++ b/src/service/cloud_docs/sheets/v3/spreadsheet_sheet_filter_view_condition/update.rs
--@@ -6,6 +6,7 @@ use crate::{
--         api_req::ApiRequest,
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -24,13 +25,11 @@ impl SpreadsheetSheetFilterViewService {
--     ) -> SDKResult<BaseResponse<UpdateFilterViewConditionResponseData>> {
--         let mut api_req = request.api_request;
--         api_req.http_method = Method::PUT;
---        api_req.api_path = format!(
---            "/open-apis/sheets/v3/spreadsheets/{}/sheets/{}/filter_views/{}/conditions/{}",
---            request.spreadsheet_token,
---            request.sheet_id,
---            request.filter_view_id,
---            request.condition_id
---        );
--+        api_req.api_path = Endpoints::SHEETS_V3_SPREADSHEET_FILTER_VIEW_CONDITION_GET
--+            .replace("{}", &request.spreadsheet_token)
--+            .replace("{}", &request.sheet_id)
--+            .replace("{}", &request.filter_view_id)
--+            .replace("{}", &request.condition_id);
--         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--         let api_resp = Transport::request(api_req, &self.config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/search_wiki.rs b/src/service/cloud_docs/wiki/v2/search_wiki.rs
--index 18306cd..cdb450e 100644
----- a/src/service/cloud_docs/wiki/v2/search_wiki.rs
--+++ b/src/service/cloud_docs/wiki/v2/search_wiki.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -156,7 +157,7 @@ pub async fn search_wiki(
-- ) -> SDKResult<BaseResponse<SearchWikiResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = "/open-apis/wiki/v2/search".to_string();
--+    api_req.api_path = Endpoints::WIKI_V2_SEARCH.to_string();
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space/create.rs b/src/service/cloud_docs/wiki/v2/space/create.rs
--index cf57dc3..ac484c6 100644
----- a/src/service/cloud_docs/wiki/v2/space/create.rs
--+++ b/src/service/cloud_docs/wiki/v2/space/create.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::Endpoints,
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -108,7 +109,7 @@ pub async fn create_space(
-- ) -> SDKResult<BaseResponse<CreateSpaceResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = "/open-apis/wiki/v2/spaces".to_string();
--+    api_req.api_path = Endpoints::WIKI_V2_SPACES.to_string();
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space/get.rs b/src/service/cloud_docs/wiki/v2/space/get.rs
--index 1edf2ef..353f08b 100644
----- a/src/service/cloud_docs/wiki/v2/space/get.rs
--+++ b/src/service/cloud_docs/wiki/v2/space/get.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -92,7 +93,8 @@ pub async fn get_space(
-- ) -> SDKResult<BaseResponse<GetSpaceResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = format!("/open-apis/wiki/v2/spaces/{}", request.space_id);
--+    api_req.api_path =
--+        EndpointBuilder::replace_param(Endpoints::WIKI_V2_SPACE_GET, "space_id", &request.space_id);
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space/list.rs b/src/service/cloud_docs/wiki/v2/space/list.rs
--index 0b37b3c..487f980 100644
----- a/src/service/cloud_docs/wiki/v2/space/list.rs
--+++ b/src/service/cloud_docs/wiki/v2/space/list.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::Endpoints,
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -111,7 +112,7 @@ pub async fn list_spaces(
-- ) -> SDKResult<BaseResponse<ListSpaceResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = "/open-apis/wiki/v2/spaces".to_string();
--+    api_req.api_path = Endpoints::WIKI_V2_SPACES.to_string();
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_member/create.rs b/src/service/cloud_docs/wiki/v2/space_member/create.rs
--index 4b567e6..490f86b 100644
----- a/src/service/cloud_docs/wiki/v2/space_member/create.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_member/create.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -145,7 +146,11 @@ pub async fn create_space_member(
-- ) -> SDKResult<BaseResponse<CreateSpaceMemberResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = format!("/open-apis/wiki/v2/spaces/{}/members", request.space_id);
--+    api_req.api_path = EndpointBuilder::replace_param(
--+        Endpoints::WIKI_V2_SPACE_MEMBER_CREATE,
--+        "space_id",
--+        &request.space_id,
--+    );
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_member/delete.rs b/src/service/cloud_docs/wiki/v2/space_member/delete.rs
--index 68837d2..6238af0 100644
----- a/src/service/cloud_docs/wiki/v2/space_member/delete.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_member/delete.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -99,10 +100,15 @@ pub async fn delete_space_member(
-- ) -> SDKResult<BaseResponse<DeleteSpaceMemberResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::DELETE;
---    api_req.api_path = format!(
---        "/open-apis/wiki/v2/spaces/{}/members/{}",
---        request.space_id, request.member_id
---    );
--+    api_req.api_path = {
--+        let mut path = EndpointBuilder::replace_param(
--+            Endpoints::WIKI_V2_SPACE_MEMBER_DELETE,
--+            "space_id",
--+            &request.space_id,
--+        );
--+        path = EndpointBuilder::replace_param(&path, "member_id", &request.member_id);
--+        path
--+    };
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_member/list.rs b/src/service/cloud_docs/wiki/v2/space_member/list.rs
--index f868841..383c3bd 100644
----- a/src/service/cloud_docs/wiki/v2/space_member/list.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_member/list.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -120,7 +121,11 @@ pub async fn list_space_members(
-- ) -> SDKResult<BaseResponse<ListSpaceMemberResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = format!("/open-apis/wiki/v2/spaces/{}/members", request.space_id);
--+    api_req.api_path = EndpointBuilder::replace_param(
--+        Endpoints::WIKI_V2_SPACE_MEMBERS,
--+        "space_id",
--+        &request.space_id,
--+    );
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_node/copy.rs b/src/service/cloud_docs/wiki/v2/space_node/copy.rs
--index 8035a74..36924f2 100644
----- a/src/service/cloud_docs/wiki/v2/space_node/copy.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_node/copy.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -158,10 +159,15 @@ pub async fn copy_space_node(
-- ) -> SDKResult<BaseResponse<CopySpaceNodeResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = format!(
---        "/open-apis/wiki/v2/spaces/{}/nodes/{}/copy",
---        request.space_id, request.node_token
---    );
--+    api_req.api_path = {
--+        let mut path = EndpointBuilder::replace_param(
--+            Endpoints::WIKI_V2_SPACE_NODE_COPY,
--+            "space_id",
--+            &request.space_id,
--+        );
--+        path = EndpointBuilder::replace_param(&path, "node_token", &request.node_token);
--+        path
--+    };
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_node/create.rs b/src/service/cloud_docs/wiki/v2/space_node/create.rs
--index a1fe133..502b3bc 100644
----- a/src/service/cloud_docs/wiki/v2/space_node/create.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_node/create.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -175,7 +176,11 @@ pub async fn create_space_node(
-- ) -> SDKResult<BaseResponse<CreateSpaceNodeResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = format!("/open-apis/wiki/v2/spaces/{}/nodes", request.space_id);
--+    api_req.api_path = EndpointBuilder::replace_param(
--+        Endpoints::WIKI_V2_SPACE_NODES,
--+        "space_id",
--+        &request.space_id,
--+    );
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_node/get.rs b/src/service/cloud_docs/wiki/v2/space_node/get.rs
--index 2a96cde..651e9ea 100644
----- a/src/service/cloud_docs/wiki/v2/space_node/get.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_node/get.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -112,10 +113,15 @@ pub async fn get_space_node(
-- ) -> SDKResult<BaseResponse<GetSpaceNodeResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = format!(
---        "/open-apis/wiki/v2/spaces/{}/nodes/{}",
---        request.space_id, request.node_token
---    );
--+    api_req.api_path = {
--+        let mut path = EndpointBuilder::replace_param(
--+            Endpoints::WIKI_V2_SPACE_NODE_GET,
--+            "space_id",
--+            &request.space_id,
--+        );
--+        path = EndpointBuilder::replace_param(&path, "node_token", &request.node_token);
--+        path
--+    };
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_node/list.rs b/src/service/cloud_docs/wiki/v2/space_node/list.rs
--index 6764cc4..4256733 100644
----- a/src/service/cloud_docs/wiki/v2/space_node/list.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_node/list.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -150,7 +151,11 @@ pub async fn list_space_node(
-- ) -> SDKResult<BaseResponse<ListSpaceNodeResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = format!("/open-apis/wiki/v2/spaces/{}/nodes", request.space_id);
--+    api_req.api_path = EndpointBuilder::replace_param(
--+        Endpoints::WIKI_V2_SPACE_NODES,
--+        "space_id",
--+        &request.space_id,
--+    );
-- 
--     // 构建查询参数
--     let mut query_params = Vec::new();
--diff --git a/src/service/cloud_docs/wiki/v2/space_node/move.rs b/src/service/cloud_docs/wiki/v2/space_node/move.rs
--index 4e9cc19..ef98436 100644
----- a/src/service/cloud_docs/wiki/v2/space_node/move.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_node/move.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -132,10 +133,15 @@ pub async fn move_space_node(
-- ) -> SDKResult<BaseResponse<MoveSpaceNodeResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = format!(
---        "/open-apis/wiki/v2/spaces/{}/nodes/{}/move",
---        request.space_id, request.node_token
---    );
--+    api_req.api_path = {
--+        let mut path = EndpointBuilder::replace_param(
--+            Endpoints::WIKI_V2_SPACE_NODE_MOVE,
--+            "space_id",
--+            &request.space_id,
--+        );
--+        path = EndpointBuilder::replace_param(&path, "node_token", &request.node_token);
--+        path
--+    };
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_node/update_title.rs b/src/service/cloud_docs/wiki/v2/space_node/update_title.rs
--index 9e065e2..639c8c0 100644
----- a/src/service/cloud_docs/wiki/v2/space_node/update_title.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_node/update_title.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -111,10 +112,15 @@ pub async fn update_space_node_title(
-- ) -> SDKResult<BaseResponse<UpdateSpaceNodeTitleResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::PUT;
---    api_req.api_path = format!(
---        "/open-apis/wiki/v2/spaces/{}/nodes/{}/update_title",
---        request.space_id, request.node_token
---    );
--+    api_req.api_path = {
--+        let mut path = EndpointBuilder::replace_param(
--+            Endpoints::WIKI_V2_SPACE_NODE_UPDATE_TITLE,
--+            "space_id",
--+            &request.space_id,
--+        );
--+        path = EndpointBuilder::replace_param(&path, "node_token", &request.node_token);
--+        path
--+    };
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/space_setting/update.rs b/src/service/cloud_docs/wiki/v2/space_setting/update.rs
--index 442bfff..8300485 100644
----- a/src/service/cloud_docs/wiki/v2/space_setting/update.rs
--+++ b/src/service/cloud_docs/wiki/v2/space_setting/update.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::{EndpointBuilder, Endpoints},
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -126,7 +127,11 @@ pub async fn update_space_setting(
-- ) -> SDKResult<BaseResponse<UpdateSpaceSettingResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::PUT;
---    api_req.api_path = format!("/open-apis/wiki/v2/spaces/{}/setting", request.space_id);
--+    api_req.api_path = EndpointBuilder::replace_param(
--+        Endpoints::WIKI_V2_SPACE_SETTING_UPDATE,
--+        "space_id",
--+        &request.space_id,
--+    );
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/task/get.rs b/src/service/cloud_docs/wiki/v2/task/get.rs
--index ef12e59..12b8915 100644
----- a/src/service/cloud_docs/wiki/v2/task/get.rs
--+++ b/src/service/cloud_docs/wiki/v2/task/get.rs
--@@ -7,6 +7,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -132,7 +133,8 @@ pub async fn get_task(
-- ) -> SDKResult<BaseResponse<GetTaskResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::GET;
---    api_req.api_path = format!("/open-apis/wiki/v2/tasks/{}", request.task_id);
--+    api_req.api_path =
--+        EndpointBuilder::replace_param(Endpoints::WIKI_V2_TASK_GET, "task_id", &request.task_id);
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/cloud_docs/wiki/v2/task/move_docs_to_wiki.rs b/src/service/cloud_docs/wiki/v2/task/move_docs_to_wiki.rs
--index ac3bb8f..8a4b3db 100644
----- a/src/service/cloud_docs/wiki/v2/task/move_docs_to_wiki.rs
--+++ b/src/service/cloud_docs/wiki/v2/task/move_docs_to_wiki.rs
--@@ -6,6 +6,7 @@ use crate::core::{
--     api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--     config::Config,
--     constants::AccessTokenType,
--+    endpoints::Endpoints,
--     http::Transport,
--     req_option::RequestOption,
--     SDKResult,
--@@ -117,7 +118,7 @@ pub async fn move_docs_to_wiki(
-- ) -> SDKResult<BaseResponse<MoveDocsToWikiResponse>> {
--     let mut api_req = request.api_request;
--     api_req.http_method = Method::POST;
---    api_req.api_path = "/open-apis/wiki/v2/tasks/move_docs_to_wiki".to_string();
--+    api_req.api_path = Endpoints::WIKI_V2_TASKS_MOVE_DOCS_TO_WIKI.to_string();
--     api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
-- 
--     let api_resp = Transport::request(api_req, config, option).await?;
--diff --git a/src/service/corehr/job_management/mod.rs b/src/service/corehr/job_management/mod.rs
--index 6fb61c6..28de473 100644
----- a/src/service/corehr/job_management/mod.rs
--+++ b/src/service/corehr/job_management/mod.rs
--@@ -446,9 +446,7 @@ impl JobManagementService {
-- 
--         // 添加查询参数
--         if let Some(family_id) = job_family_id {
---            api_req
---                .query_params
---                .insert("job_family_id", family_id);
--+            api_req.query_params.insert("job_family_id", family_id);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/corehr/organization/mod.rs b/src/service/corehr/organization/mod.rs
--index c973522..02ec7e9 100644
----- a/src/service/corehr/organization/mod.rs
--+++ b/src/service/corehr/organization/mod.rs
--@@ -242,9 +242,7 @@ impl OrganizationService {
-- 
--         // 添加查询参数
--         if let Some(date) = effective_date {
---            api_req
---                .query_params
---                .insert("effective_date", date);
--+            api_req.query_params.insert("effective_date", date);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/directory/v1/department/filter.rs b/src/service/directory/v1/department/filter.rs
--index f21dfb2..44d1bef 100644
----- a/src/service/directory/v1/department/filter.rs
--+++ b/src/service/directory/v1/department/filter.rs
--@@ -102,10 +102,10 @@ impl FilterDepartmentRequestBuilder {
--         }
-- 
--         if let Some(ref parent_department_id) = self.request.parent_department_id {
---            self.request.api_req.query_params.insert(
---                "parent_department_id",
---                parent_department_id.clone(),
---            );
--+            self.request
--+                .api_req
--+                .query_params
--+                .insert("parent_department_id", parent_department_id.clone());
--         }
-- 
--         if let Some(fetch_deleted) = self.request.fetch_deleted {
--diff --git a/src/service/elearning/course_registration/mod.rs b/src/service/elearning/course_registration/mod.rs
--index 2d6894f..06179fe 100644
----- a/src/service/elearning/course_registration/mod.rs
--+++ b/src/service/elearning/course_registration/mod.rs
--@@ -90,9 +90,7 @@ impl CourseRegistrationService {
--         }
-- 
--         if let Some(course_id) = request.course_id {
---            api_req
---                .query_params
---                .insert("course_id", course_id);
--+            api_req.query_params.insert("course_id", course_id);
--         }
-- 
--         if let Some(user_id) = request.user_id {
--@@ -241,9 +239,7 @@ impl CourseRegistrationService {
--         }
-- 
--         if let Some(course_id) = request.course_id {
---            api_req
---                .query_params
---                .insert("course_id", course_id);
--+            api_req.query_params.insert("course_id", course_id);
--         }
-- 
--         if let Some(department_id) = request.department_id {
--diff --git a/src/service/helpdesk/v1/ticket/mod.rs b/src/service/helpdesk/v1/ticket/mod.rs
--index e18b5cd..6923e3e 100644
----- a/src/service/helpdesk/v1/ticket/mod.rs
--+++ b/src/service/helpdesk/v1/ticket/mod.rs
--@@ -8,6 +8,7 @@ use crate::{
--         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
--         config::Config,
--         constants::AccessTokenType,
--+        endpoints::{EndpointBuilder, Endpoints},
--         http::Transport,
--         req_option::RequestOption,
--         SDKResult,
--@@ -126,7 +127,7 @@ impl TicketService {
-- 
--         let api_req = ApiRequest {
--             http_method: Method::POST,
---            api_path: "/open-apis/helpdesk/v1/start_service".to_string(),
--+            api_path: Endpoints::HELPDESK_V1_START_SERVICE.to_string(),
--             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
--             query_params,
--             body: serde_json::to_vec(&request)?,
--@@ -205,7 +206,7 @@ impl TicketService {
-- 
--         let api_req = ApiRequest {
--             http_method: Method::GET,
---            api_path: "/open-apis/helpdesk/v1/tickets".to_string(),
--+            api_path: Endpoints::HELPDESK_V1_TICKETS.to_string(),
--             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
--             query_params,
--             ..Default::default()
--diff --git a/src/service/hire/attachment/mod.rs b/src/service/hire/attachment/mod.rs
--index c510256..dc5df67 100644
----- a/src/service/hire/attachment/mod.rs
--+++ b/src/service/hire/attachment/mod.rs
--@@ -390,15 +390,11 @@ impl AttachmentService {
--         }
-- 
--         if let Some(object_type) = request.object_type {
---            api_req
---                .query_params
---                .insert("object_type", object_type);
--+            api_req.query_params.insert("object_type", object_type);
--         }
-- 
--         if let Some(object_id) = request.object_id {
---            api_req
---                .query_params
---                .insert("object_id", object_id);
--+            api_req.query_params.insert("object_id", object_id);
--         }
-- 
--         if let Some(attachment_type) = request.attachment_type {
--@@ -408,9 +404,7 @@ impl AttachmentService {
--         }
-- 
--         if let Some(uploader_id) = request.uploader_id {
---            api_req
---                .query_params
---                .insert("uploader_id", uploader_id);
--+            api_req.query_params.insert("uploader_id", uploader_id);
--         }
-- 
--         if let Some(created_start_time) = request.created_start_time {
--@@ -708,9 +702,7 @@ impl AttachmentService {
-- 
--         // 添加查询参数
--         if let Some(object_type) = object_type {
---            api_req
---                .query_params
---                .insert("object_type", object_type);
--+            api_req.query_params.insert("object_type", object_type);
--         }
-- 
--         if let Some(start_date) = start_date {
--diff --git a/src/service/hire/candidate_management/application/mod.rs b/src/service/hire/candidate_management/application/mod.rs
--index c29f0ed..d6aed19 100644
----- a/src/service/hire/candidate_management/application/mod.rs
--+++ b/src/service/hire/candidate_management/application/mod.rs
--@@ -309,9 +309,7 @@ impl ApplicationService {
--         }
-- 
--         if let Some(stage_id) = request.stage_id {
---            api_req
---                .query_params
---                .insert("stage_id", stage_id);
--+            api_req.query_params.insert("stage_id", stage_id);
--         }
-- 
--         if let Some(source) = request.source {
--diff --git a/src/service/hire/candidate_management/interview/mod.rs b/src/service/hire/candidate_management/interview/mod.rs
--index 50c2e11..3aa4e6e 100644
----- a/src/service/hire/candidate_management/interview/mod.rs
--+++ b/src/service/hire/candidate_management/interview/mod.rs
--@@ -463,9 +463,7 @@ impl InterviewService {
--         }
-- 
--         if let Some(start_time_to) = request.start_time_to {
---            api_req
---                .query_params
---                .insert("start_time_to", start_time_to);
--+            api_req.query_params.insert("start_time_to", start_time_to);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/hire/candidate_management/offer/mod.rs b/src/service/hire/candidate_management/offer/mod.rs
--index 9babe8c..b84906c 100644
----- a/src/service/hire/candidate_management/offer/mod.rs
--+++ b/src/service/hire/candidate_management/offer/mod.rs
--@@ -470,9 +470,7 @@ impl OfferService {
--         }
-- 
--         if let Some(talent_id) = request.talent_id {
---            api_req
---                .query_params
---                .insert("talent_id", talent_id);
--+            api_req.query_params.insert("talent_id", talent_id);
--         }
-- 
--         if let Some(job_id) = request.job_id {
--@@ -754,9 +752,7 @@ impl OfferService {
--         }
-- 
--         if let Some(department) = department {
---            api_req
---                .query_params
---                .insert("department", department);
--+            api_req.query_params.insert("department", department);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/hire/candidate_management/talent/mod.rs b/src/service/hire/candidate_management/talent/mod.rs
--index 1be7cca..8053991 100644
----- a/src/service/hire/candidate_management/talent/mod.rs
--+++ b/src/service/hire/candidate_management/talent/mod.rs
--@@ -310,21 +310,15 @@ impl TalentService {
--         }
-- 
--         if let Some(name_keyword) = request.name_keyword {
---            api_req
---                .query_params
---                .insert("name_keyword", name_keyword);
--+            api_req.query_params.insert("name_keyword", name_keyword);
--         }
-- 
--         if let Some(email_keyword) = request.email_keyword {
---            api_req
---                .query_params
---                .insert("email_keyword", email_keyword);
--+            api_req.query_params.insert("email_keyword", email_keyword);
--         }
-- 
--         if let Some(phone_keyword) = request.phone_keyword {
---            api_req
---                .query_params
---                .insert("phone_keyword", phone_keyword);
--+            api_req.query_params.insert("phone_keyword", phone_keyword);
--         }
-- 
--         if let Some(work_experience) = request.work_experience {
--@@ -334,15 +328,11 @@ impl TalentService {
--         }
-- 
--         if let Some(education) = request.education {
---            api_req
---                .query_params
---                .insert("education", education);
--+            api_req.query_params.insert("education", education);
--         }
-- 
--         if !request.tags.is_empty() {
---            api_req
---                .query_params
---                .insert("tags", request.tags.join(","));
--+            api_req.query_params.insert("tags", request.tags.join(","));
--         }
-- 
--         if let Some(created_start_time) = request.created_start_time {
--diff --git a/src/service/hire/candidate_management/talent_pool/mod.rs b/src/service/hire/candidate_management/talent_pool/mod.rs
--index 0964074..4025083 100644
----- a/src/service/hire/candidate_management/talent_pool/mod.rs
--+++ b/src/service/hire/candidate_management/talent_pool/mod.rs
--@@ -355,9 +355,7 @@ impl TalentPoolService {
--         }
-- 
--         if let Some(pool_type) = request.pool_type {
---            api_req
---                .query_params
---                .insert("pool_type", pool_type);
--+            api_req.query_params.insert("pool_type", pool_type);
--         }
-- 
--         if let Some(status) = request.status {
--@@ -365,9 +363,7 @@ impl TalentPoolService {
--         }
-- 
--         if let Some(owner_id) = request.owner_id {
---            api_req
---                .query_params
---                .insert("owner_id", owner_id);
--+            api_req.query_params.insert("owner_id", owner_id);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--@@ -445,9 +441,7 @@ impl TalentPoolService {
--         }
-- 
--         if !request.tags.is_empty() {
---            api_req
---                .query_params
---                .insert("tags", request.tags.join(","));
--+            api_req.query_params.insert("tags", request.tags.join(","));
--         }
-- 
--         if let Some(work_experience) = request.work_experience {
--@@ -457,9 +451,7 @@ impl TalentPoolService {
--         }
-- 
--         if let Some(education) = request.education {
---            api_req
---                .query_params
---                .insert("education", education);
--+            api_req.query_params.insert("education", education);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/hire/ecological_docking/background_check/mod.rs b/src/service/hire/ecological_docking/background_check/mod.rs
--index 5f07311..334865a 100644
----- a/src/service/hire/ecological_docking/background_check/mod.rs
--+++ b/src/service/hire/ecological_docking/background_check/mod.rs
--@@ -363,9 +363,7 @@ impl BackgroundCheckService {
--         }
-- 
--         if let Some(enabled) = request.enabled {
---            api_req
---                .query_params
---                .insert("enabled", enabled.to_string());
--+            api_req.query_params.insert("enabled", enabled.to_string());
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--@@ -568,9 +566,7 @@ impl BackgroundCheckService {
--         }
-- 
--         if let Some(talent_id) = request.talent_id {
---            api_req
---                .query_params
---                .insert("talent_id", talent_id);
--+            api_req.query_params.insert("talent_id", talent_id);
--         }
-- 
--         if let Some(status) = request.status {
--diff --git a/src/service/hire/ecological_docking/exam/mod.rs b/src/service/hire/ecological_docking/exam/mod.rs
--index a791a00..9d50b16 100644
----- a/src/service/hire/ecological_docking/exam/mod.rs
--+++ b/src/service/hire/ecological_docking/exam/mod.rs
--@@ -366,9 +366,7 @@ impl ExamService {
--         }
-- 
--         if let Some(paper_type) = request.paper_type {
---            api_req
---                .query_params
---                .insert("paper_type", paper_type);
--+            api_req.query_params.insert("paper_type", paper_type);
--         }
-- 
--         if let Some(difficulty_level) = request.difficulty_level {
--@@ -378,15 +376,11 @@ impl ExamService {
--         }
-- 
--         if let Some(skill_tag) = request.skill_tag {
---            api_req
---                .query_params
---                .insert("skill_tag", skill_tag);
--+            api_req.query_params.insert("skill_tag", skill_tag);
--         }
-- 
--         if let Some(enabled) = request.enabled {
---            api_req
---                .query_params
---                .insert("enabled", enabled.to_string());
--+            api_req.query_params.insert("enabled", enabled.to_string());
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--@@ -571,15 +565,11 @@ impl ExamService {
--         }
-- 
--         if let Some(talent_id) = request.talent_id {
---            api_req
---                .query_params
---                .insert("talent_id", talent_id);
--+            api_req.query_params.insert("talent_id", talent_id);
--         }
-- 
--         if let Some(paper_id) = request.paper_id {
---            api_req
---                .query_params
---                .insert("paper_id", paper_id);
--+            api_req.query_params.insert("paper_id", paper_id);
--         }
-- 
--         if let Some(status) = request.status {
--@@ -593,9 +583,7 @@ impl ExamService {
--         }
-- 
--         if let Some(start_time_to) = request.start_time_to {
---            api_req
---                .query_params
---                .insert("start_time_to", start_time_to);
--+            api_req.query_params.insert("start_time_to", start_time_to);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--@@ -794,9 +782,7 @@ impl ExamService {
-- 
--         // 添加查询参数
--         if let Some(paper_id) = paper_id {
---            api_req
---                .query_params
---                .insert("paper_id", paper_id);
--+            api_req.query_params.insert("paper_id", paper_id);
--         }
-- 
--         if let Some(start_date) = start_date {
--diff --git a/src/service/hire/get_candidates/agency/mod.rs b/src/service/hire/get_candidates/agency/mod.rs
--index 8157196..ccd13c8 100644
----- a/src/service/hire/get_candidates/agency/mod.rs
--+++ b/src/service/hire/get_candidates/agency/mod.rs
--@@ -447,15 +447,11 @@ impl AgencyService {
--         }
-- 
--         if let Some(specialty) = request.specialty {
---            api_req
---                .query_params
---                .insert("specialty", specialty);
--+            api_req.query_params.insert("specialty", specialty);
--         }
-- 
--         if let Some(service_area) = request.service_area {
---            api_req
---                .query_params
---                .insert("service_area", service_area);
--+            api_req.query_params.insert("service_area", service_area);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--@@ -562,9 +558,7 @@ impl AgencyService {
--         }
-- 
--         if let Some(agency_id) = request.agency_id {
---            api_req
---                .query_params
---                .insert("agency_id", agency_id);
--+            api_req.query_params.insert("agency_id", agency_id);
--         }
-- 
--         if let Some(job_id) = request.job_id {
--@@ -576,17 +570,15 @@ impl AgencyService {
--         }
-- 
--         if let Some(recommendation_start_time) = request.recommendation_start_time {
---            api_req.query_params.insert(
---                "recommendation_start_time",
---                recommendation_start_time,
---            );
--+            api_req
--+                .query_params
--+                .insert("recommendation_start_time", recommendation_start_time);
--         }
-- 
--         if let Some(recommendation_end_time) = request.recommendation_end_time {
---            api_req.query_params.insert(
---                "recommendation_end_time",
---                recommendation_end_time,
---            );
--+            api_req
--+                .query_params
--+                .insert("recommendation_end_time", recommendation_end_time);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/hire/get_candidates/external_system/mod.rs b/src/service/hire/get_candidates/external_system/mod.rs
--index 5561aef..e4dc936 100644
----- a/src/service/hire/get_candidates/external_system/mod.rs
--+++ b/src/service/hire/get_candidates/external_system/mod.rs
--@@ -395,15 +395,11 @@ impl ExternalSystemService {
--         }
-- 
--         if let Some(system_type) = system_type {
---            api_req
---                .query_params
---                .insert("system_type", system_type);
--+            api_req.query_params.insert("system_type", system_type);
--         }
-- 
--         if let Some(enabled) = enabled {
---            api_req
---                .query_params
---                .insert("enabled", enabled.to_string());
--+            api_req.query_params.insert("enabled", enabled.to_string());
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--@@ -522,9 +518,7 @@ impl ExternalSystemService {
--         }
-- 
--         if let Some(sync_type) = sync_type {
---            api_req
---                .query_params
---                .insert("sync_type", sync_type);
--+            api_req.query_params.insert("sync_type", sync_type);
--         }
-- 
--         if let Some(status) = status {
--@@ -666,9 +660,7 @@ impl ExternalSystemService {
--         }
-- 
--         if let Some(sync_status) = sync_status {
---            api_req
---                .query_params
---                .insert("sync_status", sync_status);
--+            api_req.query_params.insert("sync_status", sync_status);
--         }
-- 
--         if let Some(skills) = skills {
--diff --git a/src/service/hire/get_candidates/referral/mod.rs b/src/service/hire/get_candidates/referral/mod.rs
--index 0281d56..14a6bc5 100644
----- a/src/service/hire/get_candidates/referral/mod.rs
--+++ b/src/service/hire/get_candidates/referral/mod.rs
--@@ -379,9 +379,7 @@ impl ReferralService {
--         }
-- 
--         if let Some(referrer_id) = request.referrer_id {
---            api_req
---                .query_params
---                .insert("referrer_id", referrer_id);
--+            api_req.query_params.insert("referrer_id", referrer_id);
--         }
-- 
--         if let Some(job_id) = request.job_id {
--@@ -393,9 +391,7 @@ impl ReferralService {
--         }
-- 
--         if let Some(reward_status) = request.reward_status {
---            api_req
---                .query_params
---                .insert("reward_status", reward_status);
--+            api_req.query_params.insert("reward_status", reward_status);
--         }
-- 
--         if let Some(referral_start_time) = request.referral_start_time {
--diff --git a/src/service/hire/get_candidates/website/mod.rs b/src/service/hire/get_candidates/website/mod.rs
--index b1edc69..628c176 100644
----- a/src/service/hire/get_candidates/website/mod.rs
--+++ b/src/service/hire/get_candidates/website/mod.rs
--@@ -322,15 +322,11 @@ impl WebsiteService {
--         }
-- 
--         if let Some(job_type) = job_type {
---            api_req
---                .query_params
---                .insert("job_type", job_type);
--+            api_req.query_params.insert("job_type", job_type);
--         }
-- 
--         if let Some(location) = location {
---            api_req
---                .query_params
---                .insert("location", location);
--+            api_req.query_params.insert("location", location);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/hire/recruitment_config/job/mod.rs b/src/service/hire/recruitment_config/job/mod.rs
--index f3b0f66..a42c9bd 100644
----- a/src/service/hire/recruitment_config/job/mod.rs
--+++ b/src/service/hire/recruitment_config/job/mod.rs
--@@ -307,9 +307,7 @@ impl JobService {
--         }
-- 
--         if let Some(job_type) = request.job_type {
---            api_req
---                .query_params
---                .insert("job_type", job_type);
--+            api_req.query_params.insert("job_type", job_type);
--         }
-- 
--         if let Some(created_start_time) = request.created_start_time {
--diff --git a/src/service/hire/recruitment_config/job_process/mod.rs b/src/service/hire/recruitment_config/job_process/mod.rs
--index 2eff467..2310e8f 100644
----- a/src/service/hire/recruitment_config/job_process/mod.rs
--+++ b/src/service/hire/recruitment_config/job_process/mod.rs
--@@ -371,9 +371,7 @@ impl JobProcessService {
--         }
-- 
--         if let Some(process_type) = request.process_type {
---            api_req
---                .query_params
---                .insert("process_type", process_type);
--+            api_req.query_params.insert("process_type", process_type);
--         }
-- 
--         if let Some(status) = request.status {
--diff --git a/src/service/hire/recruitment_config/location/mod.rs b/src/service/hire/recruitment_config/location/mod.rs
--index e2829b7..75ceac7 100644
----- a/src/service/hire/recruitment_config/location/mod.rs
--+++ b/src/service/hire/recruitment_config/location/mod.rs
--@@ -81,9 +81,7 @@ impl LocationService {
-- 
--         // 添加查询参数
--         if let Some(location_type) = request.location_type {
---            api_req
---                .query_params
---                .insert("location_type", location_type);
--+            api_req.query_params.insert("location_type", location_type);
--         }
-- 
--         if let Some(parent_id) = request.parent_id {
--diff --git a/src/service/hire/recruitment_config/offer_settings/mod.rs b/src/service/hire/recruitment_config/offer_settings/mod.rs
--index bfa067c..0dd18d7 100644
----- a/src/service/hire/recruitment_config/offer_settings/mod.rs
--+++ b/src/service/hire/recruitment_config/offer_settings/mod.rs
--@@ -426,9 +426,7 @@ impl OfferSettingsService {
--         }
-- 
--         if let Some(job_type) = request.job_type {
---            api_req
---                .query_params
---                .insert("job_type", job_type);
--+            api_req.query_params.insert("job_type", job_type);
--         }
-- 
--         if let Some(status) = request.status {
--diff --git a/src/service/hire/recruitment_config/subject/mod.rs b/src/service/hire/recruitment_config/subject/mod.rs
--index f4740a3..aae60e1 100644
----- a/src/service/hire/recruitment_config/subject/mod.rs
--+++ b/src/service/hire/recruitment_config/subject/mod.rs
--@@ -330,9 +330,7 @@ impl SubjectService {
--         }
-- 
--         if let Some(subject_type) = request.subject_type {
---            api_req
---                .query_params
---                .insert("subject_type", subject_type);
--+            api_req.query_params.insert("subject_type", subject_type);
--         }
-- 
--         if let Some(status) = request.status {
--@@ -340,9 +338,7 @@ impl SubjectService {
--         }
-- 
--         if let Some(owner_id) = request.owner_id {
---            api_req
---                .query_params
---                .insert("owner_id", owner_id);
--+            api_req.query_params.insert("owner_id", owner_id);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/mdm/country_region/mod.rs b/src/service/mdm/country_region/mod.rs
--index 0ed5b5e..1e9f42a 100644
----- a/src/service/mdm/country_region/mod.rs
--+++ b/src/service/mdm/country_region/mod.rs
--@@ -94,9 +94,7 @@ impl CountryRegionService {
--         }
-- 
--         if let Some(region_type) = request.region_type {
---            api_req
---                .query_params
---                .insert("region_type", region_type);
--+            api_req.query_params.insert("region_type", region_type);
--         }
-- 
--         if let Some(name) = request.name {
--diff --git a/src/service/okr/okr/mod.rs b/src/service/okr/okr/mod.rs
--index 127f99a..aadb960 100644
----- a/src/service/okr/okr/mod.rs
--+++ b/src/service/okr/okr/mod.rs
--@@ -118,9 +118,7 @@ impl OkrContentService {
--         }
-- 
--         if let Some(period_id) = request.period_id {
---            api_req
---                .query_params
---                .insert("period_id", period_id);
--+            api_req.query_params.insert("period_id", period_id);
--         }
-- 
--         if let Some(status) = request.status {
--diff --git a/src/service/okr/period_rule/mod.rs b/src/service/okr/period_rule/mod.rs
--index d6ccbab..3f187a7 100644
----- a/src/service/okr/period_rule/mod.rs
--+++ b/src/service/okr/period_rule/mod.rs
--@@ -94,9 +94,7 @@ impl PeriodRuleService {
-- 
--         // 添加查询参数
--         if let Some(period_id) = request.period_id {
---            api_req
---                .query_params
---                .insert("period_id", period_id);
--+            api_req.query_params.insert("period_id", period_id);
--         }
-- 
--         if let Some(rule_type) = request.rule_type {
--diff --git a/src/service/okr/review/mod.rs b/src/service/okr/review/mod.rs
--index a02b313..d41d6be 100644
----- a/src/service/okr/review/mod.rs
--+++ b/src/service/okr/review/mod.rs
--@@ -97,9 +97,7 @@ impl ReviewService {
-- 
--         // 添加查询参数
--         if let Some(period_id) = request.period_id {
---            api_req
---                .query_params
---                .insert("period_id", period_id);
--+            api_req.query_params.insert("period_id", period_id);
--         }
-- 
--         if let Some(user_id) = request.user_id {
--diff --git a/src/service/payroll/acct_item/mod.rs b/src/service/payroll/acct_item/mod.rs
--index 8c75679..319977c 100644
----- a/src/service/payroll/acct_item/mod.rs
--+++ b/src/service/payroll/acct_item/mod.rs
--@@ -104,15 +104,11 @@ impl AcctItemService {
--         }
-- 
--         if let Some(item_type) = request.item_type {
---            api_req
---                .query_params
---                .insert("item_type", item_type);
--+            api_req.query_params.insert("item_type", item_type);
--         }
-- 
--         if let Some(paygroup_id) = request.paygroup_id {
---            api_req
---                .query_params
---                .insert("paygroup_id", paygroup_id);
--+            api_req.query_params.insert("paygroup_id", paygroup_id);
--         }
-- 
--         if let Some(status) = request.status {
--diff --git a/src/service/payroll/cost_allocation_plan/mod.rs b/src/service/payroll/cost_allocation_plan/mod.rs
--index 985df44..bb15a54 100644
----- a/src/service/payroll/cost_allocation_plan/mod.rs
--+++ b/src/service/payroll/cost_allocation_plan/mod.rs
--@@ -107,9 +107,7 @@ impl CostAllocationPlanService {
--         }
-- 
--         if let Some(plan_type) = request.plan_type {
---            api_req
---                .query_params
---                .insert("plan_type", plan_type);
--+            api_req.query_params.insert("plan_type", plan_type);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/payroll/cost_allocation_report/mod.rs b/src/service/payroll/cost_allocation_report/mod.rs
--index 51b3747..1402d33 100644
----- a/src/service/payroll/cost_allocation_report/mod.rs
--+++ b/src/service/payroll/cost_allocation_report/mod.rs
--@@ -125,9 +125,7 @@ impl CostAllocationReportService {
--         }
-- 
--         if let Some(report_type) = request.report_type {
---            api_req
---                .query_params
---                .insert("report_type", report_type);
--+            api_req.query_params.insert("report_type", report_type);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/payroll/payment_activity/mod.rs b/src/service/payroll/payment_activity/mod.rs
--index e6b8441..65c0955 100644
----- a/src/service/payroll/payment_activity/mod.rs
--+++ b/src/service/payroll/payment_activity/mod.rs
--@@ -128,21 +128,15 @@ impl PaymentActivityService {
--         }
-- 
--         if let Some(paygroup_id) = request.paygroup_id {
---            api_req
---                .query_params
---                .insert("paygroup_id", paygroup_id);
--+            api_req.query_params.insert("paygroup_id", paygroup_id);
--         }
-- 
--         if let Some(period_start) = request.period_start {
---            api_req
---                .query_params
---                .insert("period_start", period_start);
--+            api_req.query_params.insert("period_start", period_start);
--         }
-- 
--         if let Some(period_end) = request.period_end {
---            api_req
---                .query_params
---                .insert("period_end", period_end);
--+            api_req.query_params.insert("period_end", period_end);
--         }
-- 
--         Transport::request(api_req, &self.config, option).await
--diff --git a/src/service/report/task/mod.rs b/src/service/report/task/mod.rs
--index d07aaa8..ec59313 100644
----- a/src/service/report/task/mod.rs
--+++ b/src/service/report/task/mod.rs
--@@ -70,15 +70,11 @@ impl TaskService {
--         }
-- 
--         if let Some(task_type) = request.task_type {
---            api_req
---                .query_params
---                .insert("task_type", task_type);
--+            api_req.query_params.insert("task_type", task_type);
--         }
-- 
--         if let Some(reporter_id) = request.reporter_id {
---            api_req
---                .query_params
---                .insert("reporter_id", reporter_id);
--+            api_req.query_params.insert("reporter_id", reporter_id);
--         }
-- 
--         if let Some(start_time) = request.start_time {
--diff --git a/src/service/vc/v1/room/mod.rs b/src/service/vc/v1/room/mod.rs
--index 2399432..cb87a74 100644
----- a/src/service/vc/v1/room/mod.rs
--+++ b/src/service/vc/v1/room/mod.rs
--@@ -177,10 +177,7 @@ impl RoomService {
--     ) -> SDKResult<BaseResponse<UpdateRoomResponse>> {
--         let mut query_params = HashMap::new();
--         if let Some(room_id_type) = room_id_type {
---            query_params.insert(
---                "room_id_type",
---                room_id_type.as_str().to_string(),
---            );
--+            query_params.insert("room_id_type", room_id_type.as_str().to_string());
--         }
--         if let Some(user_id_type) = user_id_type {
--             query_params.insert("user_id_type", user_id_type.as_str().to_string());
--@@ -208,10 +205,7 @@ impl RoomService {
--     ) -> SDKResult<BaseResponse<EmptyResponse>> {
--         let mut query_params = HashMap::new();
--         if let Some(room_id_type) = room_id_type {
---            query_params.insert(
---                "room_id_type",
---                room_id_type.as_str().to_string(),
---            );
--+            query_params.insert("room_id_type", room_id_type.as_str().to_string());
--         }
--         if let Some(user_id_type) = user_id_type {
--             query_params.insert("user_id_type", user_id_type.as_str().to_string());
--@@ -238,10 +232,7 @@ impl RoomService {
--     ) -> SDKResult<BaseResponse<GetRoomResponse>> {
--         let mut query_params = HashMap::new();
--         if let Some(room_id_type) = room_id_type {
---            query_params.insert(
---                "room_id_type",
---                room_id_type.as_str().to_string(),
---            );
--+            query_params.insert("room_id_type", room_id_type.as_str().to_string());
--         }
--         if let Some(user_id_type) = user_id_type {
--             query_params.insert("user_id_type", user_id_type.as_str().to_string());
--@@ -275,10 +266,7 @@ impl RoomService {
--             query_params.insert("page_token", page_token);
--         }
--         if let Some(room_id_type) = room_id_type {
---            query_params.insert(
---                "room_id_type",
---                room_id_type.as_str().to_string(),
---            );
--+            query_params.insert("room_id_type", room_id_type.as_str().to_string());
--         }
--         if let Some(user_id_type) = user_id_type {
--             query_params.insert("user_id_type", user_id_type.as_str().to_string());
--@@ -316,10 +304,7 @@ impl RoomService {
--                 query_params.insert("page_token", page_token);
--             }
--             if let Some(room_id_type) = params.room_id_type {
---                query_params.insert(
---                    "room_id_type",
---                    room_id_type.as_str().to_string(),
---                );
--+                query_params.insert("room_id_type", room_id_type.as_str().to_string());
--             }
--             if let Some(user_id_type) = params.user_id_type {
--                 query_params.insert("user_id_type", user_id_type.as_str().to_string());
--diff --git a/src/service/workplace/workplace_access_data/mod.rs b/src/service/workplace/workplace_access_data/mod.rs
--index 3241512..f7f61ef 100644
----- a/src/service/workplace/workplace_access_data/mod.rs
--+++ b/src/service/workplace/workplace_access_data/mod.rs
--@@ -157,10 +157,9 @@ impl WorkplaceAccessDataService {
--         }
-- 
--         if let Some(custom_workplace_id) = request.custom_workplace_id {
---            api_req.query_params.insert(
---                QueryParams::CUSTOM_WORKPLACE_ID,
---                custom_workplace_id,
---            );
--+            api_req
--+                .query_params
--+                .insert(QueryParams::CUSTOM_WORKPLACE_ID, custom_workplace_id);
--         }
-- 
--         let api_resp: BaseResponse<CustomAccessDataSearchResponse> =
--@@ -223,10 +222,9 @@ impl WorkplaceAccessDataService {
--         }
-- 
--         if let Some(custom_workplace_id) = request.custom_workplace_id {
---            api_req.query_params.insert(
---                QueryParams::CUSTOM_WORKPLACE_ID,
---                custom_workplace_id,
---            );
--+            api_req
--+                .query_params
--+                .insert(QueryParams::CUSTOM_WORKPLACE_ID, custom_workplace_id);
--         }
-- 
--         if let Some(widget_id) = request.widget_id {
--diff --git a/zen_precommit.changeset b/zen_precommit.changeset
--index 5ef2a51..51cbf86 100644
----- a/zen_precommit.changeset
--+++ b/zen_precommit.changeset
--@@ -1,12923 +0,0 @@
---diff --git a/src/client/mod.rs b/src/client/mod.rs
---index 6777d89..40e844d 100644
------ a/src/client/mod.rs
---+++ b/src/client/mod.rs
---@@ -1,11 +1,3 @@
----#[cfg(any(
----    feature = "attendance",
----    feature = "authentication",
----    feature = "im",
----    feature = "search",
----    feature = "cloud-docs"
----))]
----use std::sync::Arc;
--- use std::time::Duration;
--- 
--- use crate::core::{config::Config, constants::AppType};
---@@ -337,113 +329,116 @@ impl LarkClientBuilder {
---                 .expect("Failed to build HTTP client with timeout")
---         }
--- 
---+        // 创建共享的 Arc<Config> 实例
---+        let config = self.config.clone();
---+
---         LarkClient {
----            config: self.config.clone(),
---+            config: self.config,
---             // 核心服务 - 使用条件编译
---             #[cfg(feature = "acs")]
----            acs: AcsService::new(self.config.clone()),
---+            acs: AcsService::new(config.clone()),
---             #[cfg(feature = "admin")]
----            admin: AdminService::new(self.config.clone()),
---+            admin: AdminService::new(config.clone()),
---             #[cfg(feature = "ai")]
----            ai: AiService::new(self.config.clone()),
---+            ai: AiService::new(config.clone()),
---             #[cfg(feature = "aily")]
----            aily: AilyService::new(self.config.clone()),
---+            aily: AilyService::new(config.clone()),
---             #[cfg(feature = "apass")]
----            apass: ApassService::new(self.config.clone()),
---+            apass: ApassService::new(config.clone()),
---             #[cfg(feature = "application")]
----            application: ApplicationService::new(self.config.clone()),
---+            application: ApplicationService::new(config.clone()),
---             #[cfg(feature = "approval")]
----            approval: ApprovalService::new(self.config.clone()),
---+            approval: ApprovalService::new(config.clone()),
---             #[cfg(feature = "attendance")]
----            attendance: AttendanceService::new(Arc::new(self.config.clone())),
---+            attendance: AttendanceService::new(config.clone()),
---             #[cfg(feature = "authentication")]
----            auth: AuthenService::new(Arc::new(self.config.clone())),
---+            auth: AuthenService::new(config.clone()),
---             #[cfg(feature = "bot")]
----            bot: BotService::new(self.config.clone()),
---+            bot: BotService::new(config.clone()),
---             #[cfg(feature = "calendar")]
----            calendar: CalendarService::new(self.config.clone()),
---+            calendar: CalendarService::new(config.clone()),
---             #[cfg(feature = "cardkit")]
----            cardkit: CardkitService::new(self.config.clone()),
---+            cardkit: CardkitService::new(config.clone()),
---             #[cfg(feature = "contact")]
----            contact: ContactService::new(self.config.clone()),
---+            contact: ContactService::new(config.clone()),
---             #[cfg(feature = "corehr")]
----            corehr: CoreHRService::new(self.config.clone()),
---+            corehr: CoreHRService::new(config.clone()),
---             #[cfg(feature = "directory")]
----            directory: DirectoryService::new(self.config.clone()),
---+            directory: DirectoryService::new(config.clone()),
---             #[cfg(feature = "ehr")]
----            ehr: EhrService::new(self.config.clone()),
---+            ehr: EhrService::new(config.clone()),
---             #[cfg(feature = "elearning")]
----            elearning: ELearningService::new(self.config.clone()),
---+            elearning: ELearningService::new(config.clone()),
---             #[cfg(feature = "group")]
----            group: GroupService::new(self.config.clone()),
---+            group: GroupService::new(config.clone()),
---             #[cfg(feature = "helpdesk")]
----            helpdesk: HelpdeskService::new(self.config.clone()),
---+            helpdesk: HelpdeskService::new(config.clone()),
---             #[cfg(feature = "hire")]
----            hire: HireService::new(self.config.clone()),
---+            hire: HireService::new(config.clone()),
---             #[cfg(feature = "human-authentication")]
----            human_authentication: HumanAuthenticationService::new(self.config.clone()),
---+            human_authentication: HumanAuthenticationService::new(config.clone()),
---             #[cfg(feature = "im")]
----            im: ImService::new(Arc::new(self.config.clone())),
---+            im: ImService::new(config.clone()),
---             #[cfg(feature = "lingo")]
----            lingo: LingoService::new(self.config.clone()),
---+            lingo: LingoService::new(config.clone()),
---             #[cfg(feature = "mail")]
----            mail: MailService::new(self.config.clone()),
---+            mail: MailService::new(config.clone()),
---             #[cfg(feature = "mdm")]
----            mdm: MdmService::new(self.config.clone()),
---+            mdm: MdmService::new(config.clone()),
---             #[cfg(feature = "minutes")]
----            minutes: MinutesService::new(self.config.clone()),
---+            minutes: MinutesService::new(config.clone()),
---             #[cfg(feature = "moments")]
----            moments: MomentsService::new(self.config.clone()),
---+            moments: MomentsService::new(config.clone()),
---             #[cfg(feature = "okr")]
----            okr: OkrService::new(self.config.clone()),
---+            okr: OkrService::new(config.clone()),
---             #[cfg(feature = "payroll")]
----            payroll: PayrollService::new(self.config.clone()),
---+            payroll: PayrollService::new(config.clone()),
---             #[cfg(feature = "performance")]
----            performance: PerformanceService::new(self.config.clone()),
---+            performance: PerformanceService::new(config.clone()),
---             #[cfg(feature = "personal-settings")]
----            personal_settings: PersonalSettingsService::new(self.config.clone()),
---+            personal_settings: PersonalSettingsService::new(config.clone()),
---             #[cfg(feature = "report")]
----            report: ReportService::new(self.config.clone()),
---+            report: ReportService::new(config.clone()),
---             #[cfg(feature = "search")]
----            search: SearchService::new(Arc::new(self.config.clone())),
---+            search: SearchService::new(config.clone()),
---             #[cfg(feature = "security-and-compliance")]
----            security_and_compliance: SecurityAndComplianceService::new(self.config.clone()),
---+            security_and_compliance: SecurityAndComplianceService::new(config.clone()),
---             #[cfg(feature = "task")]
----            task: TaskV2Service::new(self.config.clone()),
---+            task: TaskV2Service::new(config.clone()),
---             #[cfg(feature = "tenant")]
----            tenant: TenantService::new(self.config.clone()),
---+            tenant: TenantService::new(config.clone()),
---             #[cfg(feature = "tenant-tag")]
----            tenant_tag: TenantTagService::new(self.config.clone()),
---+            tenant_tag: TenantTagService::new(config.clone()),
---             #[cfg(feature = "trust-party")]
----            trust_party: TrustPartyService::new(self.config.clone()),
---+            trust_party: TrustPartyService::new(config.clone()),
---             #[cfg(feature = "vc")]
----            vc: VcService::new(self.config.clone()),
---+            vc: VcService::new(config.clone()),
---             #[cfg(feature = "verification")]
----            verification: VerificationService::new(self.config.clone()),
---+            verification: VerificationService::new(config.clone()),
---             #[cfg(feature = "workplace")]
----            workplace: WorkplaceService::new(self.config.clone()),
---+            workplace: WorkplaceService::new(config.clone()),
---             // 云文档服务聚合
---             #[cfg(feature = "cloud-docs")]
----            cloud_docs: CloudDocsService::new(Arc::new(self.config.clone())),
---+            cloud_docs: CloudDocsService::new(config.clone()),
---             // 向后兼容的字段（重新创建实例）
---             #[cfg(feature = "cloud-docs")]
----            assistant: AssistantService::new(Arc::new(self.config.clone())),
---+            assistant: AssistantService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            docs: DocsService::new(Arc::new(self.config.clone())),
---+            docs: DocsService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            drive: DriveService::new(Arc::new(self.config.clone())),
---+            drive: DriveService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            sheets: SheetsService::new(Arc::new(self.config.clone())),
---+            sheets: SheetsService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            bitable: BitableService::new(Arc::new(self.config.clone())),
---+            bitable: BitableService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            wiki: WikiService::new(Arc::new(self.config.clone())),
---+            wiki: WikiService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            comments: CommentsService::new(Arc::new(self.config.clone())),
---+            comments: CommentsService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            permission: PermissionService::new(Arc::new(self.config.clone())),
---+            permission: PermissionService::new(config.clone()),
---             #[cfg(feature = "cloud-docs")]
----            board: BoardService::new(Arc::new(self.config.clone())),
---+            board: BoardService::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/client/ws_client/tests.rs b/src/client/ws_client/tests.rs
---index b9300f3..0ab2365 100644
------ a/src/client/ws_client/tests.rs
---+++ b/src/client/ws_client/tests.rs
---@@ -18,7 +18,7 @@ async fn test_single_package_payload_preservation() {
---                 value: "event".to_string(),
---             },
---             Header {
----                key: "message_id".to_string(),
---+                key: "message_id",
---                 value: "test_msg_001".to_string(),
---             },
---             // 没有 sum 和 seq 头部，应该默认为单包
---@@ -59,7 +59,7 @@ async fn test_multi_package_payload_combination() {
---                 value: "event".to_string(),
---             },
---             Header {
----                key: "message_id".to_string(),
---+                key: "message_id",
---                 value: "test_msg_002".to_string(),
---             },
---             Header {
---@@ -93,7 +93,7 @@ async fn test_multi_package_payload_combination() {
---                 value: "event".to_string(),
---             },
---             Header {
----                key: "message_id".to_string(),
---+                key: "message_id",
---                 value: "test_msg_002".to_string(),
---             },
---             Header {
---diff --git a/src/core/api_req.rs b/src/core/api_req.rs
---index e549563..a173e84 100644
------ a/src/core/api_req.rs
---+++ b/src/core/api_req.rs
---@@ -76,22 +76,26 @@ pub struct ApiRequest {
---     /// 存储将被附加到URL末尾的查询参数。
---     /// 例如：`?page_size=10&page_token=xxx`
---     ///
----    /// # 示例
---+    /// # 性能优化
---+    ///
---+    /// 键使用 `&'static str` 避免堆分配，配合 `QueryParams` 常量使用：
---     ///
---     /// ```rust,ignore
----    /// api_req.query_params.insert("page_size".to_string(), "10".to_string());
----    /// api_req.query_params.insert("page_token".to_string(), token);
---+    /// api_req.query_params.insert(QueryParams::PAGE_SIZE, "10".to_string());
---+    /// api_req.query_params.insert(QueryParams::PAGE_TOKEN, token);
---     /// ```
----    pub query_params: HashMap<String, String>,
---+    ///
---+    /// 这种设计减少了每次API调用约8-16字节的内存分配。
---+    pub query_params: HashMap<&'static str, String>,
--- 
---     /// URL路径参数（保留字段）
---     ///
---     /// 该字段为未来的路径模板功能保留。目前在现有架构中：
----    /// 
---+    ///
---     /// - **当前做法**: 路径参数通过 `format!` 宏直接嵌入 `api_path`
---     /// - **替代方案**: 可使用 `RequestExecutor::execute_with_path_params()` 进行路径参数替换
---     /// - **设计考虑**: 保留该字段可为未来的模板系统升级提供支持
----    /// 
---+    ///
---     /// 关于路径参数处理，参考 `crate::service::endpoints::EndpointHelper::replace_path_params`
---     /// 和 `crate::core::request_executor::RequestExecutor::execute_with_path_params`。
---     pub path_params: HashMap<String, Vec<String>>,
---diff --git a/src/core/migration_guide.rs b/src/core/migration_guide.rs
---index f6a1005..e80f72d 100644
------ a/src/core/migration_guide.rs
---+++ b/src/core/migration_guide.rs
---@@ -47,7 +47,7 @@ impl MigrationExamples {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<MessageData>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("receive_id_type".to_string(), receive_id_type.to_string());
---+        query_params.insert("receive_id_type", receive_id_type.to_string());
--- 
---         // 使用 RequestExecutor - 所有重复代码都被抽象了
---         RequestExecutor::execute(
---diff --git a/src/core/mod.rs b/src/core/mod.rs
---index 13a2f89..65507a1 100644
------ a/src/core/mod.rs
---+++ b/src/core/mod.rs
---@@ -6,6 +6,7 @@ pub mod app_ticket_manager;
--- pub mod cache;
--- pub mod config;
--- pub mod constants;
---+pub mod endpoints;
--- pub mod error;
--- pub mod error_codes;
--- pub mod error_helper;
---@@ -13,6 +14,7 @@ pub mod error_logger;
--- pub mod error_metrics;
--- pub mod http;
--- pub mod improved_response_handler;
---+pub mod query_params;
--- pub mod req_option;
--- pub mod req_translator;
--- pub mod request_builder;
---diff --git a/src/core/request_builder/mod.rs b/src/core/request_builder/mod.rs
---index 0479d56..cb57881 100644
------ a/src/core/request_builder/mod.rs
---+++ b/src/core/request_builder/mod.rs
---@@ -57,7 +57,7 @@ impl UnifiedRequestBuilder {
---         let query_params = req
---             .query_params
---             .iter()
----            .map(|(k, v)| (k.as_str(), v.as_str()))
---+            .map(|(k, v)| (*k, v.as_str()))
---             .collect::<Vec<_>>();
---         Ok(url::Url::parse_with_params(&path, query_params)?)
---     }
---diff --git a/src/core/request_executor.rs b/src/core/request_executor.rs
---index a18f8ef..6155c8a 100644
------ a/src/core/request_executor.rs
---+++ b/src/core/request_executor.rs
---@@ -23,7 +23,7 @@ impl RequestExecutor {
---         config: &Config,
---         path: &str,
---         supported_tokens: Vec<AccessTokenType>,
----        query_params: Option<HashMap<String, String>>,
---+        query_params: Option<HashMap<&'static str, String>>,
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<T>> {
---         Self::execute(
---@@ -160,7 +160,7 @@ impl RequestExecutor {
---         method: Method,
---         path: &str,
---         supported_tokens: Vec<AccessTokenType>,
----        query_params: Option<HashMap<String, String>>,
---+        query_params: Option<HashMap<&'static str, String>>,
---         body: Option<B>,
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<T>> {
---@@ -215,7 +215,7 @@ impl RequestExecutor {
---         path_template: &str,
---         path_params: HashMap<&str, &str>,
---         supported_tokens: Vec<AccessTokenType>,
----        query_params: Option<HashMap<String, String>>,
---+        query_params: Option<HashMap<&'static str, String>>,
---         body: Option<B>,
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<T>> {
---@@ -277,7 +277,7 @@ impl RequestExecutor {
---     /// ```rust,ignore
---     /// // 获取消息列表
---     /// let mut query_params = HashMap::new();
----    /// query_params.insert("container_id".to_string(), chat_id);
---+    /// query_params.insert("container_id", chat_id);
---     /// let response = RequestExecutor::query_request::<MessageListResponse>(
---     ///     &config,
---     ///     "/open-apis/im/v1/messages",
---@@ -288,7 +288,7 @@ impl RequestExecutor {
---     pub async fn query_request<T: ApiResponseTrait>(
---         config: &Config,
---         path: &str,
----        query_params: Option<HashMap<String, String>>,
---+        query_params: Option<HashMap<&'static str, String>>,
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<T>> {
---         Self::get(
---diff --git a/src/core/request_executor_example.rs b/src/core/request_executor_example.rs
---index 69cd060..94c11d7 100644
------ a/src/core/request_executor_example.rs
---+++ b/src/core/request_executor_example.rs
---@@ -33,7 +33,7 @@ impl ModernMessageService {
---     ) -> SDKResult<BaseResponse<Message>> {
---         // 构建查询参数
---         let mut query_params = HashMap::new();
----        query_params.insert("receive_id_type".to_string(), receive_id_type.to_string());
---+        query_params.insert("receive_id_type", receive_id_type.to_string());
--- 
---         // 使用RequestExecutor执行请求 - 所有重复代码都被抽象了
---         RequestExecutor::execute(
---@@ -76,20 +76,20 @@ impl ModernMessageService {
---     ) -> SDKResult<BaseResponse<ListMessageRespData>> {
---         // 构建查询参数
---         let mut query_params = HashMap::new();
----        query_params.insert("container_id".to_string(), container_id.to_string());
----        query_params.insert("container_id_type".to_string(), container_id_type.to_string());
---+        query_params.insert("container_id", container_id.to_string());
---+        query_params.insert("container_id_type", container_id_type.to_string());
---         
---         if let Some(start) = start_time {
----            query_params.insert("start_time".to_string(), start.to_string());
---+            query_params.insert("start_time", start.to_string());
---         }
---         if let Some(end) = end_time {
----            query_params.insert("end_time".to_string(), end.to_string());
---+            query_params.insert("end_time", end.to_string());
---         }
---         if let Some(token) = page_token {
----            query_params.insert("page_token".to_string(), token.to_string());
---+            query_params.insert("page_token", token.to_string());
---         }
---         if let Some(size) = page_size {
----            query_params.insert("page_size".to_string(), size.to_string());
---+            query_params.insert("page_size", size.to_string());
---         }
--- 
---         // 使用查询请求执行器
---@@ -291,7 +291,7 @@ impl BulkMessageOperations {
---         
---         for (receive_id_type, body) in messages {
---             let mut query_params = HashMap::new();
----            query_params.insert("receive_id_type".to_string(), receive_id_type);
---+            query_params.insert("receive_id_type", receive_id_type);
--- 
---             let result = RequestExecutor::execute(
---                 config,
---diff --git a/src/core/validation/calendar.rs b/src/core/validation/calendar.rs
---index b0a7138..9af2a7d 100644
------ a/src/core/validation/calendar.rs
---+++ b/src/core/validation/calendar.rs
---@@ -311,11 +311,10 @@ pub fn validate_recurrence_rule(rule: &str) -> ValidationResult {
---             .unwrap_or(until_part);
--- 
---         if NaiveDate::parse_from_str(until_value, "%Y%m%d").is_err()
----            && DateTime::parse_from_rfc3339(&format!("{}T000000Z", until_value)).is_err() {
----                return ValidationResult::Invalid(
----                    "UNTIL参数格式无效，请使用YYYYMMDD格式".to_string(),
----                );
----            }
---+            && DateTime::parse_from_rfc3339(&format!("{}T000000Z", until_value)).is_err()
---+        {
---+            return ValidationResult::Invalid("UNTIL参数格式无效，请使用YYYYMMDD格式".to_string());
---+        }
---     }
--- 
---     // 检查COUNT参数（如果有）
---diff --git a/src/core/validation/drive.rs b/src/core/validation/drive.rs
---index 1695ae3..fbe0a37 100644
------ a/src/core/validation/drive.rs
---+++ b/src/core/validation/drive.rs
---@@ -802,7 +802,10 @@ mod tests {
--- 
---     #[test]
---     fn test_validate_batch_operation() {
----        let tokens = vec!["doccnABC123DEF456GHI789JKL012MN".to_string(), "doccnXYZ789ABC456DEF789GHI012JK".to_string()];
---+        let tokens = vec![
---+            "doccnABC123DEF456GHI789JKL012MN".to_string(),
---+            "doccnXYZ789ABC456DEF789GHI012JK".to_string(),
---+        ];
---         assert!(matches!(
---             validate_batch_operation(&tokens, 10),
---             ValidationResult::Valid
---diff --git a/src/core/validation/im.rs b/src/core/validation/im.rs
---index f489c15..c018d4b 100644
------ a/src/core/validation/im.rs
---+++ b/src/core/validation/im.rs
---@@ -231,7 +231,11 @@ pub fn validate_file_upload(file_name: &str, file_size: u64, file_type: &str) ->
---         _ => return ValidationResult::Invalid(format!("Unsupported file type: {}", file_type)),
---     };
--- 
----    let file_ext = file_name.split('.').next_back().unwrap_or("").to_lowercase();
---+    let file_ext = file_name
---+        .split('.')
---+        .next_back()
---+        .unwrap_or("")
---+        .to_lowercase();
---     if !allowed_types.contains(&file_ext.as_str()) {
---         return ValidationResult::Invalid(format!(
---             "File type '.{}' is not allowed for {} files",
---diff --git a/src/core/validation/pagination/mod.rs b/src/core/validation/pagination/mod.rs
---index e55f678..551e423 100644
------ a/src/core/validation/pagination/mod.rs
---+++ b/src/core/validation/pagination/mod.rs
---@@ -105,7 +105,7 @@ impl<T> PaginationRequestBuilder<T> {
---     ///
---     /// - 分页大小：1-500 之间，推荐 50
---     /// - 分页标记：必须是有效的 Base64 字符串，长度不超过 1024
----    pub fn build(self) -> SDKResult<std::collections::HashMap<String, String>> {
---+    pub fn build(self) -> SDKResult<std::collections::HashMap<&'static str, String>> {
---         let mut params = std::collections::HashMap::new();
--- 
---         // 1. 验证并添加分页大小
---@@ -122,7 +122,7 @@ impl<T> PaginationRequestBuilder<T> {
---                     )));
---                 }
---             }
----            params.insert("page_size".to_string(), page_size.to_string());
---+            params.insert("page_size", page_size.to_string());
---         }
--- 
---         // 2. 验证并添加分页标记
---@@ -144,7 +144,7 @@ impl<T> PaginationRequestBuilder<T> {
---                     )));
---                 }
---             }
----            params.insert("page_token".to_string(), page_token.clone());
---+            params.insert("page_token", page_token.clone());
---         }
--- 
---         Ok(params)
---@@ -153,7 +153,9 @@ impl<T> PaginationRequestBuilder<T> {
---     /// 构建分页请求参数并添加到现有的 ApiRequest
---     pub fn build_to_api_request(self, mut api_req: ApiRequest) -> SDKResult<ApiRequest> {
---         let params = self.build()?;
----        api_req.query_params.extend(params);
---+        for (key, value) in params {
---+            api_req.query_params.insert(key, value);
---+        }
---         Ok(api_req)
---     }
--- 
---diff --git a/src/core/validation/sheets.rs b/src/core/validation/sheets.rs
---index 3ab77ab..22fa81e 100644
------ a/src/core/validation/sheets.rs
---+++ b/src/core/validation/sheets.rs
---@@ -43,12 +43,11 @@ pub fn validate_cell_range(range: &str) -> ValidationResult {
---         }
--- 
---         // 检查是否被引号正确包围（如果包含引号）
----        if sheet.starts_with('\'') 
----            && (!sheet.ends_with('\'') || sheet.len() < 2) {
----                return ValidationResult::Invalid(
----                    "Invalid quoted sheet name. Must start and end with single quotes".to_string(),
----                );
----            }
---+        if sheet.starts_with('\'') && (!sheet.ends_with('\'') || sheet.len() < 2) {
---+            return ValidationResult::Invalid(
---+                "Invalid quoted sheet name. Must start and end with single quotes".to_string(),
---+            );
---+        }
--- 
---         (Some(sheet.to_string()), cell_ref)
---     } else {
---diff --git a/src/service/acs/access_record/mod.rs b/src/service/acs/access_record/mod.rs
---index 72ca4f4..06e15ad 100644
------ a/src/service/acs/access_record/mod.rs
---+++ b/src/service/acs/access_record/mod.rs
---@@ -54,37 +54,35 @@ impl AccessRecordService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert("user_id", user_id);
---         }
--- 
---         if let Some(device_id) = request.device_id {
---             api_req
---                 .query_params
----                .insert("device_id".to_string(), device_id);
---+                .insert("device_id", device_id);
---         }
--- 
---         if let Some(access_type) = request.access_type {
---             api_req.query_params.insert(
----                "access_type".to_string(),
---+                "access_type",
---                 serde_json::to_string(&access_type)?,
---             );
---         }
--- 
---         if let Some(access_method) = request.access_method {
---             api_req.query_params.insert(
----                "access_method".to_string(),
---+                "access_method",
---                 serde_json::to_string(&access_method)?,
---             );
---         }
---@@ -92,19 +90,19 @@ impl AccessRecordService {
---         if let Some(result) = request.result {
---             api_req
---                 .query_params
----                .insert("result".to_string(), serde_json::to_string(&result)?);
---+                .insert("result", serde_json::to_string(&result)?);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert("start_time", start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert("end_time", end_time.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/acs/device/mod.rs b/src/service/acs/device/mod.rs
---index e91bf81..34a01ab 100644
------ a/src/service/acs/device/mod.rs
---+++ b/src/service/acs/device/mod.rs
---@@ -52,20 +52,18 @@ impl DeviceService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(device_type) = request.device_type {
---             api_req.query_params.insert(
----                "device_type".to_string(),
---+                "device_type",
---                 serde_json::to_string(&device_type)?,
---             );
---         }
---@@ -73,13 +71,13 @@ impl DeviceService {
---         if let Some(status) = request.status {
---             api_req
---                 .query_params
----                .insert("status".to_string(), serde_json::to_string(&status)?);
---+                .insert("status", serde_json::to_string(&status)?);
---         }
--- 
---         if let Some(location) = request.location {
---             api_req
---                 .query_params
----                .insert("location".to_string(), location);
---+                .insert("location", location);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/acs/user/mod.rs b/src/service/acs/user/mod.rs
---index d2bd67a..6cabbe9 100644
------ a/src/service/acs/user/mod.rs
---+++ b/src/service/acs/user/mod.rs
---@@ -110,33 +110,31 @@ impl UserService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(user_type) = request.user_type {
---             api_req
---                 .query_params
----                .insert("user_type".to_string(), serde_json::to_string(&user_type)?);
---+                .insert("user_type", serde_json::to_string(&user_type)?);
---         }
--- 
---         if let Some(status) = request.status {
---             api_req
---                 .query_params
----                .insert("status".to_string(), serde_json::to_string(&status)?);
---+                .insert("status", serde_json::to_string(&status)?);
---         }
--- 
---         if let Some(department) = request.department {
---             api_req
---                 .query_params
----                .insert("department".to_string(), department);
---+                .insert("department", department);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/admin/badge/mod.rs b/src/service/admin/badge/mod.rs
---index 1395b86..6c361f0 100644
------ a/src/service/admin/badge/mod.rs
---+++ b/src/service/admin/badge/mod.rs
---@@ -203,15 +203,13 @@ impl BadgeService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(name) = request.name {
----            api_req.query_params.insert("name".to_string(), name);
---+            api_req.query_params.insert("name", name);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/admin/badge_grant/mod.rs b/src/service/admin/badge_grant/mod.rs
---index f8c29b8..9a40d61 100644
------ a/src/service/admin/badge_grant/mod.rs
---+++ b/src/service/admin/badge_grant/mod.rs
---@@ -204,20 +204,18 @@ impl BadgeGrantService {
---         if let Some(badge_id) = request.badge_id {
---             api_req
---                 .query_params
----                .insert("badge_id".to_string(), badge_id);
---+                .insert("badge_id", badge_id);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(name) = request.name {
----            api_req.query_params.insert("name".to_string(), name);
---+            api_req.query_params.insert("name", name);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/admin/data_report/mod.rs b/src/service/admin/data_report/mod.rs
---index 97206c8..a5215aa 100644
------ a/src/service/admin/data_report/mod.rs
---+++ b/src/service/admin/data_report/mod.rs
---@@ -78,30 +78,24 @@ impl DataReportService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("start_date".to_string(), request.start_date);
----        api_req
----            .query_params
----            .insert("end_date".to_string(), request.end_date);
---+            .insert("start_date", request.start_date);
---+        api_req.query_params.insert("end_date", request.end_date);
--- 
---         if let Some(department_id_type) = request.department_id_type {
---             api_req
---                 .query_params
----                .insert("department_id_type".to_string(), department_id_type);
---+                .insert("department_id_type", department_id_type);
---         }
---         if let Some(department_id) = request.department_id {
----            api_req
----                .query_params
----                .insert("department_id".to_string(), department_id);
---+            api_req.query_params.insert("department_id", department_id);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -131,40 +125,30 @@ impl DataReportService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("start_date".to_string(), request.start_date);
----        api_req
----            .query_params
----            .insert("end_date".to_string(), request.end_date);
---+            .insert("start_date", request.start_date);
---+        api_req.query_params.insert("end_date", request.end_date);
--- 
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
---         if let Some(user_ids) = request.user_ids {
----            api_req
----                .query_params
----                .insert("user_ids".to_string(), user_ids.join(","));
---+            api_req.query_params.insert("user_ids", user_ids.join(","));
---         }
---         if let Some(department_id_type) = request.department_id_type {
---             api_req
---                 .query_params
----                .insert("department_id_type".to_string(), department_id_type);
---+                .insert("department_id_type", department_id_type);
---         }
---         if let Some(department_id) = request.department_id {
----            api_req
----                .query_params
----                .insert("department_id".to_string(), department_id);
---+            api_req.query_params.insert("department_id", department_id);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/admin/mod.rs b/src/service/admin/mod.rs
---index b3c821e..a7cd962 100644
------ a/src/service/admin/mod.rs
---+++ b/src/service/admin/mod.rs
---@@ -104,8 +104,6 @@ pub mod models;
--- /// 密码管理功能
--- pub mod password;
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- use badge::BadgeService;
--- use badge_grant::BadgeGrantService;
---@@ -167,11 +165,11 @@ impl AdminService {
---     ///
---     /// # 返回值
---     /// 配置完成的管理后台服务实例
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            password: PasswordService::new(Arc::clone(&config)),
----            data_report: DataReportService::new(Arc::clone(&config)),
----            badge: BadgeService::new(Arc::clone(&config)),
---+            password: PasswordService::new(config.clone()),
---+            data_report: DataReportService::new(config.clone()),
---+            badge: BadgeService::new(config.clone()),
---             badge_grant: BadgeGrantService::new(config),
---         }
---     }
---diff --git a/src/service/ai/document_ai/mod.rs b/src/service/ai/document_ai/mod.rs
---index 93c1320..e6ed85b 100644
------ a/src/service/ai/document_ai/mod.rs
---+++ b/src/service/ai/document_ai/mod.rs
---@@ -7,6 +7,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -170,7 +171,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<ResumeParseResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/resume/parse".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_RESUME_PARSE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -194,7 +195,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<IdCardRecognizeResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/id_card/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_ID_CARD_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -218,7 +219,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<DrivingLicenseRecognizeResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/driving_license/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_DRIVING_LICENSE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -242,7 +243,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<BankCardRecognizeResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/bank_card/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_BANK_CARD_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -266,7 +267,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<BusinessLicenseRecognizeResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/business_license/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_BUSINESS_LICENSE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -290,7 +291,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<VatInvoiceRecognizeResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/vat_invoice/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_VAT_INVOICE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -314,7 +315,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<ContractFieldExtractionResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/contract/field_extraction".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_CONTRACT_FIELD_EXTRACTION.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -338,7 +339,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<BusinessCardRecognizeResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/business_card/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_BUSINESS_CARD_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -362,7 +363,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/vehicle_invoice/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_VEHICLE_INVOICE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -386,7 +387,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/health_certificate/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_HEALTH_CERTIFICATE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -410,7 +411,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/hkm_mainland_travel_permit/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_HKM_MAINLAND_TRAVEL_PERMIT_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -434,7 +435,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/tw_mainland_travel_permit/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_TW_MAINLAND_TRAVEL_PERMIT_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -458,7 +459,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/chinese_passport/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_CHINESE_PASSPORT_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -482,7 +483,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/vehicle_license/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_VEHICLE_LICENSE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -506,7 +507,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/train_invoice/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_TRAIN_INVOICE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -530,7 +531,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/taxi_invoice/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_TAXI_INVOICE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -554,7 +555,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/food_produce_license/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_FOOD_PRODUCE_LICENSE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -578,7 +579,7 @@ impl DocumentAiService {
---     ) -> SDKResult<BaseResponse<GenericDocumentResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/document_ai/v1/food_manage_license/recognize".to_string(),
---+            api_path: Endpoints::DOCUMENT_AI_FOOD_MANAGE_LICENSE_RECOGNIZE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---diff --git a/src/service/ai/mod.rs b/src/service/ai/mod.rs
---index d14d5d9..a2d2e03 100644
------ a/src/service/ai/mod.rs
---+++ b/src/service/ai/mod.rs
---@@ -98,8 +98,6 @@
--- //! - 灵活的API调用方式
--- //! - 完善的错误处理机制
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- /// 智能文档处理功能
---@@ -173,11 +171,11 @@ impl AiService {
---     ///
---     /// # 返回值
---     /// 配置完成的AI服务实例，包含所有AI能力子服务
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            document_ai: DocumentAiService::new(Arc::clone(&config)),
----            optical_char_recognition: OpticalCharRecognitionService::new(Arc::clone(&config)),
----            speech_to_text: SpeechToTextService::new(Arc::clone(&config)),
---+            document_ai: DocumentAiService::new(config.clone()),
---+            optical_char_recognition: OpticalCharRecognitionService::new(config.clone()),
---+            speech_to_text: SpeechToTextService::new(config.clone()),
---             translation: TranslationService::new(config),
---         }
---     }
---diff --git a/src/service/aily/knowledge/mod.rs b/src/service/aily/knowledge/mod.rs
---index ee35cc2..ec79760 100644
------ a/src/service/aily/knowledge/mod.rs
---+++ b/src/service/aily/knowledge/mod.rs
---@@ -239,9 +239,7 @@ impl KnowledgeService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---@@ -268,9 +266,7 @@ impl KnowledgeService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---@@ -297,27 +293,21 @@ impl KnowledgeService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(category_id) = request.category_id {
----            api_req
----                .query_params
----                .insert("category_id".to_string(), category_id);
---+            api_req.query_params.insert("category_id", category_id);
---         }
---         if let Some(keyword) = request.keyword {
----            api_req.query_params.insert("keyword".to_string(), keyword);
---+            api_req.query_params.insert("keyword", keyword);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -345,19 +335,15 @@ impl KnowledgeService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/aily/message/mod.rs b/src/service/aily/message/mod.rs
---index 917f2b7..f63968a 100644
------ a/src/service/aily/message/mod.rs
---+++ b/src/service/aily/message/mod.rs
---@@ -125,9 +125,7 @@ impl MessageService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---@@ -157,22 +155,18 @@ impl MessageService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(order) = request.order {
----            api_req.query_params.insert("order".to_string(), order);
---+            api_req.query_params.insert("order", order);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/aily/run/mod.rs b/src/service/aily/run/mod.rs
---index d6fe30c..02d62bf 100644
------ a/src/service/aily/run/mod.rs
---+++ b/src/service/aily/run/mod.rs
---@@ -137,9 +137,7 @@ impl RunService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---@@ -166,22 +164,18 @@ impl RunService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(order) = request.order {
----            api_req.query_params.insert("order".to_string(), order);
---+            api_req.query_params.insert("order", order);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/aily/session/mod.rs b/src/service/aily/session/mod.rs
---index 73b498b..9fc76f3 100644
------ a/src/service/aily/session/mod.rs
---+++ b/src/service/aily/session/mod.rs
---@@ -161,9 +161,7 @@ impl SessionService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---@@ -190,9 +188,7 @@ impl SessionService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---diff --git a/src/service/aily/skill/mod.rs b/src/service/aily/skill/mod.rs
---index dbb88d9..466d745 100644
------ a/src/service/aily/skill/mod.rs
---+++ b/src/service/aily/skill/mod.rs
---@@ -118,9 +118,7 @@ impl SkillService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         Transport::request(api_req, &self.config, option).await
---     }
---@@ -147,19 +145,15 @@ impl SkillService {
---         };
--- 
---         // 添加查询参数
----        api_req
----            .query_params
----            .insert("app_id".to_string(), request.app_id);
---+        api_req.query_params.insert("app_id", request.app_id);
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/apass/audit_log/mod.rs b/src/service/apass/audit_log/mod.rs
---index ff34b31..b80e8e9 100644
------ a/src/service/apass/audit_log/mod.rs
---+++ b/src/service/apass/audit_log/mod.rs
---@@ -124,27 +124,21 @@ impl AuditLogService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(start_time) = request.start_time {
----            api_req
----                .query_params
----                .insert("start_time".to_string(), start_time);
---+            api_req.query_params.insert("start_time", start_time);
---         }
---         if let Some(end_time) = request.end_time {
----            api_req
----                .query_params
----                .insert("end_time".to_string(), end_time);
---+            api_req.query_params.insert("end_time", end_time);
---         }
---         if let Some(operation_type) = request.operation_type {
---             api_req
---                 .query_params
----                .insert("operation_type".to_string(), operation_type);
---+                .insert("operation_type", operation_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -204,17 +198,15 @@ impl AuditLogService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(object_api_name) = request.object_api_name {
---             api_req
---                 .query_params
----                .insert("object_api_name".to_string(), object_api_name);
---+                .insert("object_api_name", object_api_name);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/apass/environment_variable/mod.rs b/src/service/apass/environment_variable/mod.rs
---index 1d141b2..cae34bb 100644
------ a/src/service/apass/environment_variable/mod.rs
---+++ b/src/service/apass/environment_variable/mod.rs
---@@ -83,12 +83,10 @@ impl EnvironmentVariableService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/apass/flow/mod.rs b/src/service/apass/flow/mod.rs
---index 139d67c..adba59e 100644
------ a/src/service/apass/flow/mod.rs
---+++ b/src/service/apass/flow/mod.rs
---@@ -160,17 +160,15 @@ impl FlowService {
--- 
---         // 添加查询参数
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/apass/object/mod.rs b/src/service/apass/object/mod.rs
---index e1f66bc..1416187 100644
------ a/src/service/apass/object/mod.rs
---+++ b/src/service/apass/object/mod.rs
---@@ -212,12 +212,10 @@ impl ObjectService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -249,9 +247,7 @@ impl ObjectService {
--- 
---         // 添加字段查询参数
---         if let Some(fields) = request.fields {
----            api_req
----                .query_params
----                .insert("fields".to_string(), fields.join(","));
---+            api_req.query_params.insert("fields", fields.join(","));
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -398,12 +394,10 @@ impl ObjectService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/apass/seat/mod.rs b/src/service/apass/seat/mod.rs
---index b00582e..c529b27 100644
------ a/src/service/apass/seat/mod.rs
---+++ b/src/service/apass/seat/mod.rs
---@@ -80,12 +80,10 @@ impl SeatService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -116,22 +114,16 @@ impl SeatService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(start_time) = request.start_time {
----            api_req
----                .query_params
----                .insert("start_time".to_string(), start_time);
---+            api_req.query_params.insert("start_time", start_time);
---         }
---         if let Some(end_time) = request.end_time {
----            api_req
----                .query_params
----                .insert("end_time".to_string(), end_time);
---+            api_req.query_params.insert("end_time", end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/application/v6/admin/mod.rs b/src/service/application/v6/admin/mod.rs
---index 8ad1e86..7cc2669 100644
------ a/src/service/application/v6/admin/mod.rs
---+++ b/src/service/application/v6/admin/mod.rs
---@@ -36,19 +36,16 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<ListInstalledAppsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -74,19 +71,16 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<GetUserAvailableAppsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -111,15 +105,12 @@ impl AdminService {
---         let mut query_params = HashMap::new();
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -147,15 +138,12 @@ impl AdminService {
---         let mut query_params = HashMap::new();
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -182,14 +170,11 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<GetAppAvailabilityResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -216,14 +201,11 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<CheckWhiteBlackListResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -253,14 +235,11 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -306,16 +285,13 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<ListAppAdminsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -340,14 +316,11 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<GetAppAdminPermissionsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -375,10 +348,7 @@ impl AdminService {
---     ) -> SDKResult<BaseResponse<VerifyAppAdminResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/application/v6/app_badge/mod.rs b/src/service/application/v6/app_badge/mod.rs
---index 00b06cd..fdf8041 100644
------ a/src/service/application/v6/app_badge/mod.rs
---+++ b/src/service/application/v6/app_badge/mod.rs
---@@ -36,10 +36,7 @@ impl AppBadgeService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/application/v6/app_usage/mod.rs b/src/service/application/v6/app_usage/mod.rs
---index d6352e7..23b56fd 100644
------ a/src/service/application/v6/app_usage/mod.rs
---+++ b/src/service/application/v6/app_usage/mod.rs
---@@ -36,18 +36,18 @@ impl AppUsageService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<DepartmentOverviewResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("date".to_string(), date.to_string());
---+        query_params.insert("date", date.to_string());
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -70,8 +70,8 @@ impl AppUsageService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<MessagePushOverviewResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("start_date".to_string(), start_date.to_string());
----        query_params.insert("end_date".to_string(), end_date.to_string());
---+        query_params.insert("start_date", start_date.to_string());
---+        query_params.insert("end_date", end_date.to_string());
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
---@@ -93,8 +93,8 @@ impl AppUsageService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<AppUsageOverviewResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("start_date".to_string(), start_date.to_string());
----        query_params.insert("end_date".to_string(), end_date.to_string());
---+        query_params.insert("start_date", start_date.to_string());
---+        query_params.insert("end_date", end_date.to_string());
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
---diff --git a/src/service/application/v6/application/mod.rs b/src/service/application/v6/application/mod.rs
---index 336ea3d..15b2b8a 100644
------ a/src/service/application/v6/application/mod.rs
---+++ b/src/service/application/v6/application/mod.rs
---@@ -70,10 +70,7 @@ impl ApplicationService {
---     ) -> SDKResult<BaseResponse<GetCollaboratorsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -96,7 +93,7 @@ impl ApplicationService {
---     ) -> SDKResult<BaseResponse<GetApplicationResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -120,7 +117,7 @@ impl ApplicationService {
---     ) -> SDKResult<BaseResponse<GetAppVersionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -147,13 +144,13 @@ impl ApplicationService {
---     ) -> SDKResult<BaseResponse<ListAppVersionsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -177,7 +174,7 @@ impl ApplicationService {
---     ) -> SDKResult<BaseResponse<ContactsRangeSuggestResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -203,13 +200,13 @@ impl ApplicationService {
---     ) -> SDKResult<BaseResponse<UnderauditListResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/application/v6/application_feedback/mod.rs b/src/service/application/v6/application_feedback/mod.rs
---index de7be58..19d0234 100644
------ a/src/service/application/v6/application_feedback/mod.rs
---+++ b/src/service/application/v6/application_feedback/mod.rs
---@@ -35,10 +35,7 @@ impl ApplicationFeedbackService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -66,30 +63,27 @@ impl ApplicationFeedbackService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<ListFeedbackResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("app_id".to_string(), app_id.to_string());
---+        query_params.insert("app_id", app_id.to_string());
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(feedback_type) = feedback_type {
---             query_params.insert(
----                "feedback_type".to_string(),
---+                "feedback_type",
---                 serde_json::to_string(&feedback_type).unwrap_or_default(),
---             );
---         }
---         if let Some(status) = status {
---             query_params.insert(
----                "status".to_string(),
---+                "status",
---                 serde_json::to_string(&status).unwrap_or_default(),
---             );
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/application/v6/appstore_paid_info/mod.rs b/src/service/application/v6/appstore_paid_info/mod.rs
---index bc26c45..5a730e2 100644
------ a/src/service/application/v6/appstore_paid_info/mod.rs
---+++ b/src/service/application/v6/appstore_paid_info/mod.rs
---@@ -36,10 +36,7 @@ impl AppstorePaidInfoService {
---     ) -> SDKResult<BaseResponse<CheckUserAccessResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -65,10 +62,10 @@ impl AppstorePaidInfoService {
---     ) -> SDKResult<BaseResponse<ListTenantPaidPlansResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/application/v6/scope/mod.rs b/src/service/application/v6/scope/mod.rs
---index 9545452..751e703 100644
------ a/src/service/application/v6/scope/mod.rs
---+++ b/src/service/application/v6/scope/mod.rs
---@@ -52,7 +52,7 @@ impl ScopeService {
---     ) -> SDKResult<BaseResponse<ListScopeResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(lang) = lang {
----            query_params.insert("lang".to_string(), lang);
---+            query_params.insert("lang", lang);
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/approval/v4/approval/mod.rs b/src/service/approval/v4/approval/mod.rs
---index 9b7ed4b..9a285b0 100644
------ a/src/service/approval/v4/approval/mod.rs
---+++ b/src/service/approval/v4/approval/mod.rs
---@@ -80,14 +80,11 @@ impl ApprovalService {
---     ) -> SDKResult<BaseResponse<CreateApprovalResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -114,14 +111,11 @@ impl ApprovalService {
---     ) -> SDKResult<BaseResponse<GetApprovalResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---diff --git a/src/service/approval/v4/external_approval/mod.rs b/src/service/approval/v4/external_approval/mod.rs
---index 6cae65e..44017cd 100644
------ a/src/service/approval/v4/external_approval/mod.rs
---+++ b/src/service/approval/v4/external_approval/mod.rs
---@@ -93,14 +93,11 @@ impl ExternalApprovalService {
---     ) -> SDKResult<BaseResponse<CreateExternalApprovalResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -126,10 +123,7 @@ impl ExternalApprovalService {
---     ) -> SDKResult<BaseResponse<GetExternalApprovalResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/approval/v4/external_instance/mod.rs b/src/service/approval/v4/external_instance/mod.rs
---index 2c3ad41..ab6e1aa 100644
------ a/src/service/approval/v4/external_instance/mod.rs
---+++ b/src/service/approval/v4/external_instance/mod.rs
---@@ -86,14 +86,11 @@ impl ExternalInstanceService {
---     ) -> SDKResult<BaseResponse<CreateExternalInstanceResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -120,10 +117,7 @@ impl ExternalInstanceService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/approval/v4/external_task/mod.rs b/src/service/approval/v4/external_task/mod.rs
---index 283bb43..2a010b5 100644
------ a/src/service/approval/v4/external_task/mod.rs
---+++ b/src/service/approval/v4/external_task/mod.rs
---@@ -63,28 +63,25 @@ impl ExternalTaskService {
---         let mut query_params = HashMap::new();
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(approval_code) = params.approval_code {
----                query_params.insert("approval_code".to_string(), approval_code);
---+                query_params.insert("approval_code", approval_code);
---             }
---             if let Some(instance_code) = params.instance_code {
----                query_params.insert("instance_code".to_string(), instance_code);
---+                query_params.insert("instance_code", instance_code);
---             }
---             if let Some(user_id) = params.user_id {
----                query_params.insert("user_id".to_string(), user_id);
---+                query_params.insert("user_id", user_id);
---             }
---             if let Some(task_status) = params.task_status {
----                query_params.insert("task_status".to_string(), task_status);
---+                query_params.insert("task_status", task_status);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---diff --git a/src/service/approval/v4/instance/mod.rs b/src/service/approval/v4/instance/mod.rs
---index 5e9b407..ae1c69a 100644
------ a/src/service/approval/v4/instance/mod.rs
---+++ b/src/service/approval/v4/instance/mod.rs
---@@ -160,14 +160,11 @@ impl InstanceService {
---     ) -> SDKResult<BaseResponse<CreateInstanceResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -193,10 +190,7 @@ impl InstanceService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -220,10 +214,7 @@ impl InstanceService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -248,14 +239,11 @@ impl InstanceService {
---     ) -> SDKResult<BaseResponse<PreviewInstanceResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(department_id_type) = department_id_type {
---             query_params.insert(
----                "department_id_type".to_string(),
---+                "department_id_type",
---                 department_id_type.as_str().to_string(),
---             );
---         }
---@@ -281,10 +269,7 @@ impl InstanceService {
---     ) -> SDKResult<BaseResponse<GetInstanceResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -307,25 +292,22 @@ impl InstanceService {
---         let mut query_params = HashMap::new();
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(approval_code) = params.approval_code {
----                query_params.insert("approval_code".to_string(), approval_code);
---+                query_params.insert("approval_code", approval_code);
---             }
---             if let Some(instance_status) = params.instance_status {
----                query_params.insert("instance_status".to_string(), instance_status);
---+                query_params.insert("instance_status", instance_status);
---             }
---             if let Some(user_id) = params.user_id {
----                query_params.insert("user_id".to_string(), user_id);
---+                query_params.insert("user_id", user_id);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---diff --git a/src/service/approval/v4/instance_comment/mod.rs b/src/service/approval/v4/instance_comment/mod.rs
---index 571985c..ffc704c 100644
------ a/src/service/approval/v4/instance_comment/mod.rs
---+++ b/src/service/approval/v4/instance_comment/mod.rs
---@@ -75,10 +75,7 @@ impl InstanceCommentService {
---     ) -> SDKResult<BaseResponse<CreateCommentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -103,10 +100,7 @@ impl InstanceCommentService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -131,10 +125,7 @@ impl InstanceCommentService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -159,16 +150,13 @@ impl InstanceCommentService {
---     ) -> SDKResult<BaseResponse<ListCommentsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/approval/v4/message/mod.rs b/src/service/approval/v4/message/mod.rs
---index 88c7755..75a0d40 100644
------ a/src/service/approval/v4/message/mod.rs
---+++ b/src/service/approval/v4/message/mod.rs
---@@ -71,10 +71,7 @@ impl MessageService {
---     ) -> SDKResult<BaseResponse<SendBotMessageResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -99,10 +96,7 @@ impl MessageService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/approval/v4/search/mod.rs b/src/service/approval/v4/search/mod.rs
---index f60f61e..e4a2d56 100644
------ a/src/service/approval/v4/search/mod.rs
---+++ b/src/service/approval/v4/search/mod.rs
---@@ -145,31 +145,28 @@ impl SearchService {
---         let mut query_params = HashMap::new();
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(approval_code) = params.approval_code {
----                query_params.insert("approval_code".to_string(), approval_code);
---+                query_params.insert("approval_code", approval_code);
---             }
---             if let Some(instance_status) = params.instance_status {
----                query_params.insert("instance_status".to_string(), instance_status);
---+                query_params.insert("instance_status", instance_status);
---             }
---             if let Some(start_time) = params.start_time {
----                query_params.insert("start_time".to_string(), start_time);
---+                query_params.insert("start_time", start_time);
---             }
---             if let Some(end_time) = params.end_time {
----                query_params.insert("end_time".to_string(), end_time);
---+                query_params.insert("end_time", end_time);
---             }
---             if let Some(user_id) = params.user_id {
----                query_params.insert("user_id".to_string(), user_id);
---+                query_params.insert("user_id", user_id);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---@@ -193,34 +190,31 @@ impl SearchService {
---         let mut query_params = HashMap::new();
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(approval_code) = params.approval_code {
----                query_params.insert("approval_code".to_string(), approval_code);
---+                query_params.insert("approval_code", approval_code);
---             }
---             if let Some(instance_code) = params.instance_code {
----                query_params.insert("instance_code".to_string(), instance_code);
---+                query_params.insert("instance_code", instance_code);
---             }
---             if let Some(task_status) = params.task_status {
----                query_params.insert("task_status".to_string(), task_status);
---+                query_params.insert("task_status", task_status);
---             }
---             if let Some(start_time) = params.start_time {
----                query_params.insert("start_time".to_string(), start_time);
---+                query_params.insert("start_time", start_time);
---             }
---             if let Some(end_time) = params.end_time {
----                query_params.insert("end_time".to_string(), end_time);
---+                query_params.insert("end_time", end_time);
---             }
---             if let Some(user_id) = params.user_id {
----                query_params.insert("user_id".to_string(), user_id);
---+                query_params.insert("user_id", user_id);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---@@ -244,25 +238,22 @@ impl SearchService {
---         let mut query_params = HashMap::new();
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(approval_code) = params.approval_code {
----                query_params.insert("approval_code".to_string(), approval_code);
---+                query_params.insert("approval_code", approval_code);
---             }
---             if let Some(instance_code) = params.instance_code {
----                query_params.insert("instance_code".to_string(), instance_code);
---+                query_params.insert("instance_code", instance_code);
---             }
---             if let Some(user_id) = params.user_id {
----                query_params.insert("user_id".to_string(), user_id);
---+                query_params.insert("user_id", user_id);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---@@ -286,13 +277,10 @@ impl SearchService {
---     ) -> SDKResult<BaseResponse<SearchApprovalIdResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(approval_name) = approval_name {
----            query_params.insert("approval_name".to_string(), approval_name.to_string());
---+            query_params.insert("approval_name", approval_name.to_string());
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -314,32 +302,29 @@ impl SearchService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<SearchTasksResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("user_id".to_string(), user_id.to_string());
---+        query_params.insert("user_id", user_id.to_string());
--- 
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(approval_code) = params.approval_code {
----                query_params.insert("approval_code".to_string(), approval_code);
---+                query_params.insert("approval_code", approval_code);
---             }
---             if let Some(task_status) = params.task_status {
----                query_params.insert("task_status".to_string(), task_status);
---+                query_params.insert("task_status", task_status);
---             }
---             if let Some(start_time) = params.start_time {
----                query_params.insert("start_time".to_string(), start_time);
---+                query_params.insert("start_time", start_time);
---             }
---             if let Some(end_time) = params.end_time {
----                query_params.insert("end_time".to_string(), end_time);
---+                query_params.insert("end_time", end_time);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---diff --git a/src/service/approval/v4/task/mod.rs b/src/service/approval/v4/task/mod.rs
---index e13e4ec..e801d08 100644
------ a/src/service/approval/v4/task/mod.rs
---+++ b/src/service/approval/v4/task/mod.rs
---@@ -99,10 +99,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -127,10 +124,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -155,10 +149,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -183,10 +174,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -211,10 +199,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -239,10 +224,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/attendance/mod.rs b/src/service/attendance/mod.rs
---index 3e5e96b..12c2e2e 100644
------ a/src/service/attendance/mod.rs
---+++ b/src/service/attendance/mod.rs
---@@ -90,8 +90,6 @@
--- //! - 🔄 HR系统集成
--- //! - 📊 组织架构联动
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub mod v1;
---@@ -141,7 +139,7 @@ impl AttendanceService {
---     ///
---     /// # 返回值
---     /// 配置完成的考勤服务实例
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
---             v1: v1::V1::new(config),
---         }
---diff --git a/src/service/attendance/v1/archive_rule.rs b/src/service/attendance/v1/archive_rule.rs
---index 3c77e97..0abbc63 100644
------ a/src/service/attendance/v1/archive_rule.rs
---+++ b/src/service/attendance/v1/archive_rule.rs
---@@ -1,6 +1,5 @@
--- use reqwest::Method;
--- use serde_json::json;
----use std::sync::Arc;
--- 
--- use crate::{
---     core::{
---@@ -18,7 +17,7 @@ use super::models::{
--- 
--- /// 归档报表服务
--- pub struct ArchiveRuleService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl ArchiveRuleService {
---@@ -43,7 +42,7 @@ impl ArchiveRuleService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---         Ok(api_resp)
---@@ -70,7 +69,7 @@ impl ArchiveRuleService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -104,7 +103,7 @@ impl ArchiveRuleService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -135,18 +134,16 @@ impl ArchiveRuleService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/attendance/v1/group.rs b/src/service/attendance/v1/group.rs
---index 8473275..05d540d 100644
------ a/src/service/attendance/v1/group.rs
---+++ b/src/service/attendance/v1/group.rs
---@@ -1,6 +1,5 @@
--- use reqwest::Method;
--- use serde_json::json;
----use std::sync::Arc;
--- 
--- use crate::core::{
---     api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
---@@ -15,7 +14,7 @@ use super::models::{
--- 
--- /// 考勤组服务
--- pub struct GroupService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl GroupService {
---@@ -37,24 +36,24 @@ impl GroupService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type.clone());
---+            .insert("employee_type", request.employee_type.clone());
--- 
---         if let Some(dept_type) = &request.dept_type {
---             api_req
---                 .query_params
----                .insert("dept_type".to_string(), dept_type.clone());
---+                .insert("dept_type", dept_type.clone());
---         }
--- 
---         if let Some(page_size) = &request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = &request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---@@ -79,12 +78,12 @@ impl GroupService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type.clone());
---+            .insert("employee_type", request.employee_type.clone());
--- 
---         if let Some(dept_type) = &request.dept_type {
---             api_req
---                 .query_params
----                .insert("dept_type".to_string(), dept_type.clone());
---+                .insert("dept_type", dept_type.clone());
---         }
--- 
---         // 构建请求体
---@@ -166,12 +165,12 @@ impl GroupService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(dept_type) = request.dept_type {
---             api_req
---                 .query_params
----                .insert("dept_type".to_string(), dept_type);
---+                .insert("dept_type", dept_type);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---@@ -196,12 +195,12 @@ impl GroupService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(dept_type) = request.dept_type {
---             api_req
---                 .query_params
----                .insert("dept_type".to_string(), dept_type);
---+                .insert("dept_type", dept_type);
---         }
--- 
---         // 构建请求体
---@@ -233,24 +232,22 @@ impl GroupService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(dept_type) = request.dept_type {
---             api_req
---                 .query_params
----                .insert("dept_type".to_string(), dept_type);
---+                .insert("dept_type", dept_type);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/attendance/v1/leave_accrual_record.rs b/src/service/attendance/v1/leave_accrual_record.rs
---index 68eba11..48ff904 100644
------ a/src/service/attendance/v1/leave_accrual_record.rs
---+++ b/src/service/attendance/v1/leave_accrual_record.rs
---@@ -1,5 +1,4 @@
--- use reqwest::Method;
----use std::sync::Arc;
--- use serde_json::json;
--- 
--- use crate::{
---@@ -14,7 +13,7 @@ use super::models::{PatchLeaveAccrualRecordRequest, PatchLeaveAccrualRecordRespD
--- 
--- /// 休假发放记录服务
--- pub struct LeaveAccrualRecordService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl LeaveAccrualRecordService {
---@@ -40,7 +39,7 @@ impl LeaveAccrualRecordService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---diff --git a/src/service/attendance/v1/leave_employ_expire_record.rs b/src/service/attendance/v1/leave_employ_expire_record.rs
---index 5ecfb53..2759032 100644
------ a/src/service/attendance/v1/leave_employ_expire_record.rs
---+++ b/src/service/attendance/v1/leave_employ_expire_record.rs
---@@ -1,5 +1,3 @@
----use reqwest::Method;
----use std::sync::Arc;
--- use crate::{
---     core::{
---         api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
---@@ -7,12 +5,13 @@ use crate::{
---     },
---     impl_executable_builder_owned,
--- };
---+use reqwest::Method;
--- 
--- use super::models::{GetLeaveEmployExpireRecordRequest, GetLeaveEmployExpireRecordRespData};
--- 
--- /// 休假获取过期发放记录服务
--- pub struct LeaveEmployExpireRecordService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl LeaveEmployExpireRecordService {
---@@ -35,24 +34,22 @@ impl LeaveEmployExpireRecordService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
---         api_req
---             .query_params
----            .insert("start_time".to_string(), request.start_time.to_string());
---+            .insert("start_time", request.start_time.to_string());
---         api_req
---             .query_params
----            .insert("end_time".to_string(), request.end_time.to_string());
---+            .insert("end_time", request.end_time.to_string());
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/attendance/v1/mod.rs b/src/service/attendance/v1/mod.rs
---index 0ce7529..1d94bbd 100644
------ a/src/service/attendance/v1/mod.rs
---+++ b/src/service/attendance/v1/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::{
---     core::config::Config,
---     service::attendance::v1::{
---@@ -42,40 +40,40 @@ pub struct V1 {
--- }
--- 
--- impl V1 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
---             shift: ShiftService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             user_daily_shift: UserDailyShiftService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             group: GroupService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             user_setting: UserSettingService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             user_stats_data: UserStatsDataService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             user_approval: UserApprovalService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             user_task: UserTaskService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             user_task_remedy: UserTaskRemedyService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             archive_rule: ArchiveRuleService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             leave_employ_expire_record: LeaveEmployExpireRecordService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
----            leave_accrual_record: LeaveAccrualRecordService { 
----                config: Arc::clone(&config) 
---+            leave_accrual_record: LeaveAccrualRecordService {
---+                config: config.clone(),
---             },
---         }
---     }
---diff --git a/src/service/attendance/v1/shift.rs b/src/service/attendance/v1/shift.rs
---index 9f36d85..7142a06 100644
------ a/src/service/attendance/v1/shift.rs
---+++ b/src/service/attendance/v1/shift.rs
---@@ -1,6 +1,5 @@
--- use reqwest::Method;
--- use serde_json::json;
----use std::sync::Arc;
--- 
--- use crate::{
---     core::{
---@@ -16,7 +15,7 @@ use super::models::{
--- };
--- 
--- pub struct ShiftService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl ShiftService {
---@@ -38,7 +37,7 @@ impl ShiftService {
---         // 添加必需的查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let mut body = json!({
---@@ -158,10 +157,10 @@ impl ShiftService {
---         // 添加必需的查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type.clone());
---+            .insert("employee_type", request.employee_type.clone());
---         api_req
---             .query_params
----            .insert("shift_name".to_string(), request.shift_name.clone());
---+            .insert("shift_name", request.shift_name.clone());
--- 
---         let body = json!({
---             "shift_name": request.shift_name
---@@ -205,12 +204,10 @@ impl ShiftService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/attendance/v1/user_approval.rs b/src/service/attendance/v1/user_approval.rs
---index 95e6456..9526c44 100644
------ a/src/service/attendance/v1/user_approval.rs
---+++ b/src/service/attendance/v1/user_approval.rs
---@@ -1,5 +1,4 @@
--- use reqwest::Method;
----use std::sync::Arc;
--- use serde_json::json;
--- 
--- use crate::core::{
---@@ -14,7 +13,7 @@ use super::models::{
--- 
--- /// 用户审批服务
--- pub struct UserApprovalService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl UserApprovalService {
---@@ -36,40 +35,34 @@ impl UserApprovalService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(status) = request.status {
----            api_req
----                .query_params
----                .insert("status".to_string(), status.to_string());
---+            api_req.query_params.insert("status", status.to_string());
---         }
--- 
---         if let Some(date_from) = request.date_from {
---             api_req
---                 .query_params
----                .insert("date_from".to_string(), date_from);
---+                .insert("date_from", date_from);
---         }
--- 
---         if let Some(date_to) = request.date_to {
----            api_req.query_params.insert("date_to".to_string(), date_to);
---+            api_req.query_params.insert("date_to", date_to);
---         }
--- 
---         if let Some(user_ids) = request.user_ids {
----            api_req
----                .query_params
----                .insert("user_ids".to_string(), user_ids.join(","));
---+            api_req.query_params.insert("user_ids", user_ids.join(","));
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---@@ -94,7 +87,7 @@ impl UserApprovalService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let mut body = json!({
---@@ -133,7 +126,7 @@ impl UserApprovalService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let mut body = json!({
---diff --git a/src/service/attendance/v1/user_daily_shift.rs b/src/service/attendance/v1/user_daily_shift.rs
---index b930bf9..914a337 100644
------ a/src/service/attendance/v1/user_daily_shift.rs
---+++ b/src/service/attendance/v1/user_daily_shift.rs
---@@ -1,6 +1,5 @@
--- use reqwest::Method;
--- use serde_json::json;
----use std::sync::Arc;
--- 
--- use crate::core::{
---     api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
---@@ -15,7 +14,7 @@ use super::models::{
--- 
--- /// 用户排班服务
--- pub struct UserDailyShiftService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl UserDailyShiftService {
---@@ -38,7 +37,7 @@ impl UserDailyShiftService {
---         // 添加必需的查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -69,7 +68,7 @@ impl UserDailyShiftService {
---         // 添加必需的查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -104,7 +103,7 @@ impl UserDailyShiftService {
---         // 添加必需的查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---diff --git a/src/service/attendance/v1/user_setting.rs b/src/service/attendance/v1/user_setting.rs
---index 54a6615..440424b 100644
------ a/src/service/attendance/v1/user_setting.rs
---+++ b/src/service/attendance/v1/user_setting.rs
---@@ -1,5 +1,4 @@
--- use reqwest::Method;
----use std::sync::Arc;
--- use serde_json::json;
--- 
--- use crate::core::{
---@@ -19,7 +18,7 @@ use super::models::{
--- 
--- /// 用户设置服务
--- pub struct UserSettingService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl UserSettingService {
---@@ -44,7 +43,7 @@ impl UserSettingService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let mut body = json!({});
---@@ -86,7 +85,7 @@ impl UserSettingService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -120,7 +119,7 @@ impl UserSettingService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 保存 photo_name 以避免借用问题
---         let photo_name = request.photo_name.clone();
---@@ -166,10 +165,10 @@ impl UserSettingService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
---         api_req
---             .query_params
----            .insert("face_key".to_string(), request.face_key);
---+            .insert("face_key", request.face_key);
--- 
---         // 对于文件下载，我们需要直接获取响应体字节数据
---         // 这里暂时返回一个模拟的照片数据，实际实现时需要从 HTTP 响应中获取
---diff --git a/src/service/attendance/v1/user_stats_data.rs b/src/service/attendance/v1/user_stats_data.rs
---index 112d602..e5fd402 100644
------ a/src/service/attendance/v1/user_stats_data.rs
---+++ b/src/service/attendance/v1/user_stats_data.rs
---@@ -1,5 +1,4 @@
--- use reqwest::Method;
----use std::sync::Arc;
--- use serde_json::json;
--- 
--- use crate::{
---@@ -18,7 +17,7 @@ use super::models::{
--- 
--- /// 用户统计数据服务
--- pub struct UserStatsDataService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl UserStatsDataService {
---@@ -40,7 +39,7 @@ impl UserStatsDataService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -71,7 +70,7 @@ impl UserStatsDataService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---         Ok(api_resp)
---@@ -95,10 +94,10 @@ impl UserStatsDataService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(locale) = request.locale {
----            api_req.query_params.insert("locale".to_string(), locale);
---+            api_req.query_params.insert("locale", locale);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---@@ -123,10 +122,10 @@ impl UserStatsDataService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(locale) = request.locale {
----            api_req.query_params.insert("locale".to_string(), locale);
---+            api_req.query_params.insert("locale", locale);
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/attendance/v1/user_task.rs b/src/service/attendance/v1/user_task.rs
---index d5a7e75..ef0079f 100644
------ a/src/service/attendance/v1/user_task.rs
---+++ b/src/service/attendance/v1/user_task.rs
---@@ -1,6 +1,5 @@
--- use reqwest::Method;
--- use serde_json::json;
----use std::sync::Arc;
--- 
--- use crate::core::{
---     api_resp::BaseResponse, config::Config, constants::AccessTokenType, http::Transport,
---@@ -15,7 +14,7 @@ use super::models::{
--- 
--- /// 用户打卡任务服务
--- pub struct UserTaskService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl UserTaskService {
---@@ -37,7 +36,7 @@ impl UserTaskService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -71,10 +70,10 @@ impl UserTaskService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
---         api_req
---             .query_params
----            .insert("check_date".to_string(), request.check_date);
---+            .insert("check_date", request.check_date);
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---         Ok(api_resp)
---@@ -98,42 +97,36 @@ impl UserTaskService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(user_ids) = request.user_ids {
----            api_req
----                .query_params
----                .insert("user_ids".to_string(), user_ids.join(","));
---+            api_req.query_params.insert("user_ids", user_ids.join(","));
---         }
--- 
---         if let Some(check_date_from) = request.check_date_from {
---             api_req
---                 .query_params
----                .insert("check_date_from".to_string(), check_date_from);
---+                .insert("check_date_from", check_date_from);
---         }
--- 
---         if let Some(check_date_to) = request.check_date_to {
----            api_req
----                .query_params
----                .insert("check_date_to".to_string(), check_date_to);
---+            api_req.query_params.insert("check_date_to", check_date_to);
---         }
--- 
---         if let Some(check_type) = request.check_type {
---             api_req
---                 .query_params
----                .insert("check_type".to_string(), check_type.to_string());
---+                .insert("check_type", check_type.to_string());
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---@@ -158,7 +151,7 @@ impl UserTaskService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -189,36 +182,30 @@ impl UserTaskService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(user_ids) = request.user_ids {
----            api_req
----                .query_params
----                .insert("user_ids".to_string(), user_ids.join(","));
---+            api_req.query_params.insert("user_ids", user_ids.join(","));
---         }
--- 
---         if let Some(check_date_from) = request.check_date_from {
---             api_req
---                 .query_params
----                .insert("check_date_from".to_string(), check_date_from);
---+                .insert("check_date_from", check_date_from);
---         }
--- 
---         if let Some(check_date_to) = request.check_date_to {
----            api_req
----                .query_params
----                .insert("check_date_to".to_string(), check_date_to);
---+            api_req.query_params.insert("check_date_to", check_date_to);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/attendance/v1/user_task_remedy.rs b/src/service/attendance/v1/user_task_remedy.rs
---index 24032ea..7bd0242 100644
------ a/src/service/attendance/v1/user_task_remedy.rs
---+++ b/src/service/attendance/v1/user_task_remedy.rs
---@@ -1,5 +1,4 @@
--- use reqwest::Method;
----use std::sync::Arc;
--- use serde_json::json;
--- 
--- use crate::{
---@@ -17,7 +16,7 @@ use super::models::{
--- 
--- /// 用户补卡服务
--- pub struct UserTaskRemedyService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl UserTaskRemedyService {
---@@ -39,7 +38,7 @@ impl UserTaskRemedyService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         // 构建请求体
---         let body = json!({
---@@ -76,19 +75,17 @@ impl UserTaskRemedyService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
----        api_req
----            .query_params
----            .insert("user_id".to_string(), request.user_id);
---+            .insert("employee_type", request.employee_type);
---+        api_req.query_params.insert("user_id", request.user_id);
--- 
---         if let Some(date_from) = request.date_from {
---             api_req
---                 .query_params
----                .insert("date_from".to_string(), date_from);
---+                .insert("date_from", date_from);
---         }
--- 
---         if let Some(date_to) = request.date_to {
----            api_req.query_params.insert("date_to".to_string(), date_to);
---+            api_req.query_params.insert("date_to", date_to);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---@@ -113,40 +110,34 @@ impl UserTaskRemedyService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("employee_type".to_string(), request.employee_type);
---+            .insert("employee_type", request.employee_type);
--- 
---         if let Some(user_ids) = request.user_ids {
----            api_req
----                .query_params
----                .insert("user_ids".to_string(), user_ids.join(","));
---+            api_req.query_params.insert("user_ids", user_ids.join(","));
---         }
--- 
---         if let Some(date_from) = request.date_from {
---             api_req
---                 .query_params
----                .insert("date_from".to_string(), date_from);
---+                .insert("date_from", date_from);
---         }
--- 
---         if let Some(date_to) = request.date_to {
----            api_req.query_params.insert("date_to".to_string(), date_to);
---+            api_req.query_params.insert("date_to", date_to);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req
----                .query_params
----                .insert("status".to_string(), status.to_string());
---+            api_req.query_params.insert("status", status.to_string());
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/authentication/mod.rs b/src/service/authentication/mod.rs
---index f8e99de..3bdb0a8 100644
------ a/src/service/authentication/mod.rs
---+++ b/src/service/authentication/mod.rs
---@@ -79,8 +79,6 @@
--- //! - 权限不足
--- //! - 网络连接问题
--- 
----use std::sync::Arc;
----
--- /// 身份认证服务 v1 版本
--- pub mod v1;
--- 
---@@ -129,9 +127,9 @@ impl AuthenService {
---     ///
---     /// # 返回值
---     /// 配置完成的身份认证服务实例
----    pub fn new(config: Arc<crate::core::config::Config>) -> Self {
---+    pub fn new(config: crate::core::config::Config) -> Self {
---         Self {
----            v1: v1::V1::new((*config).clone()),
---+            v1: v1::V1::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/calendar/v4/calendar/create.rs b/src/service/calendar/v4/calendar/create.rs
---index 4dc79fb..8a8592c 100644
------ a/src/service/calendar/v4/calendar/create.rs
---+++ b/src/service/calendar/v4/calendar/create.rs
---@@ -84,7 +84,7 @@ impl CreateCalendarRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/calendar/v4/calendar/delete.rs b/src/service/calendar/v4/calendar/delete.rs
---index 9dafb6d..6e2f8b3 100644
------ a/src/service/calendar/v4/calendar/delete.rs
---+++ b/src/service/calendar/v4/calendar/delete.rs
---@@ -1,22 +1,22 @@
--- //! # 删除共享日历
--- //!
--- //! 删除一个共享日历的API接口。
----//! 
---+//!
--- //! ## 功能描述
----//! 
---+//!
--- //! 此功能用于删除用户创建的共享日历。删除后，日历中的所有事件也会被删除，
--- //! 且该操作不可逆。
----//! 
---+//!
--- //! ## API 文档
----//! 
---+//!
--- //! 参考飞书开放平台文档: <https://open.feishu.cn/document/server-docs/calendar-v4/calendar/delete>
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
----//! 
---+//!
--- //! ## 预期接口
----//! 
---+//!
--- //! ```rust,ignore
--- //! // 删除指定的共享日历
--- //! let response = client.calendar.v4.calendar.delete(
---diff --git a/src/service/calendar/v4/calendar/get.rs b/src/service/calendar/v4/calendar/get.rs
---index 2c91305..7c2dcfa 100644
------ a/src/service/calendar/v4/calendar/get.rs
---+++ b/src/service/calendar/v4/calendar/get.rs
---@@ -57,7 +57,7 @@ impl GetCalendarRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         self.request
---diff --git a/src/service/calendar/v4/calendar/list.rs b/src/service/calendar/v4/calendar/list.rs
---index a9ef25c..9fa924e 100644
------ a/src/service/calendar/v4/calendar/list.rs
---+++ b/src/service/calendar/v4/calendar/list.rs
---@@ -75,28 +75,28 @@ impl ListCalendarRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(page_size) = self.request.page_size {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(ref page_token) = self.request.page_token {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         if let Some(sync_events) = self.request.sync_events {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("sync_events".to_string(), sync_events.to_string());
---+                .insert("sync_events", sync_events.to_string());
---         }
--- 
---         self.request
---diff --git a/src/service/calendar/v4/calendar/patch.rs b/src/service/calendar/v4/calendar/patch.rs
---index 365d7ef..f3ef497 100644
------ a/src/service/calendar/v4/calendar/patch.rs
---+++ b/src/service/calendar/v4/calendar/patch.rs
---@@ -1,12 +1,12 @@
--- //! # 更新日历
--- //!
--- //! 部分更新共享日历的信息。
----//! 
---+//!
--- //! ## 功能描述
----//! 
---+//!
--- //! 该接口用于部分更新日历的属性，如日历名称、描述、颜色等。
--- //! 与 PUT 方法不同，PATCH 只会更新提供的字段。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar/primary.rs b/src/service/calendar/v4/calendar/primary.rs
---index 35164dd..09f0541 100644
------ a/src/service/calendar/v4/calendar/primary.rs
---+++ b/src/service/calendar/v4/calendar/primary.rs
---@@ -1,12 +1,12 @@
--- //! # 主日历管理
--- //!
--- //! 获取用户的主日历信息。
----//! 
---+//!
--- //! ## 功能描述
----//! 
---+//!
--- //! 主日历是用户的默认日历，每个用户都有一个主日历。
--- //! 此接口用于获取或操作用户的主日历信息。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar/search.rs b/src/service/calendar/v4/calendar/search.rs
---index 3c8cb2c..566fbc7 100644
------ a/src/service/calendar/v4/calendar/search.rs
---+++ b/src/service/calendar/v4/calendar/search.rs
---@@ -1,17 +1,17 @@
--- //! # 搜索日历
--- //!
--- //! 搜索用户可访问的日历列表。
----//! 
---+//!
--- //! ## 功能描述
----//! 
---+//!
--- //! 此功能用于搜索用户有访问权限的日历，支持按日历名称、描述等条件进行搜索。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
----//! 
---+//!
--- //! ## 预期接口
----//! 
---+//!
--- //! ```rust,ignore
--- //! // 搜索日历
--- //! let response = client.calendar.v4.calendar.search(
---diff --git a/src/service/calendar/v4/calendar_event/create.rs b/src/service/calendar/v4/calendar_event/create.rs
---index 3bbebc4..477d2b3 100644
------ a/src/service/calendar/v4/calendar_event/create.rs
---+++ b/src/service/calendar/v4/calendar_event/create.rs
---@@ -1,12 +1,12 @@
--- //! # 创建日程事件
--- //!
--- //! 在指定日历中创建一个日程事件。
----//! 
---+//!
--- //! ## 功能描述
----//! 
---+//!
--- //! 此接口用于在用户日历中创建新的日程事件，支持设置事件标题、时间、地点、
--- //! 参与者、描述等信息。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar_event/delete.rs b/src/service/calendar/v4/calendar_event/delete.rs
---index 6354f2b..b15dec5 100644
------ a/src/service/calendar/v4/calendar_event/delete.rs
---+++ b/src/service/calendar/v4/calendar_event/delete.rs
---@@ -1,7 +1,7 @@
--- //! # 删除日程事件
--- //!
--- //! 删除指定的日程事件。删除后不可恢复。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar_event/get.rs b/src/service/calendar/v4/calendar_event/get.rs
---index e66f593..a6e10c9 100644
------ a/src/service/calendar/v4/calendar_event/get.rs
---+++ b/src/service/calendar/v4/calendar_event/get.rs
---@@ -1,12 +1,12 @@
--- //! # 获取日程事件
--- //!
--- //! 获取指定日程事件的详细信息。
----//! 
---+//!
--- //! ## 功能描述
----//! 
---+//!
--- //! 此接口用于获取指定日程事件的详细信息，包括事件标题、时间、
--- //! 地点、参与者、描述等所有相关信息。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar_event/list.rs b/src/service/calendar/v4/calendar_event/list.rs
---index 6bf4eda..81b21fe 100644
------ a/src/service/calendar/v4/calendar_event/list.rs
---+++ b/src/service/calendar/v4/calendar_event/list.rs
---@@ -1,7 +1,7 @@
--- //! # 获取日程事件列表
--- //!
--- //! 分页获取指定日历中的日程事件列表。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar_event/patch.rs b/src/service/calendar/v4/calendar_event/patch.rs
---index d6b3e8a..6fbfe5b 100644
------ a/src/service/calendar/v4/calendar_event/patch.rs
---+++ b/src/service/calendar/v4/calendar_event/patch.rs
---@@ -1,7 +1,7 @@
--- //! # 更新日程事件
--- //!
--- //! 部分更新指定日程事件的信息。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar_event/reply.rs b/src/service/calendar/v4/calendar_event/reply.rs
---index a730fe8..daebc98 100644
------ a/src/service/calendar/v4/calendar_event/reply.rs
---+++ b/src/service/calendar/v4/calendar_event/reply.rs
---@@ -1,7 +1,7 @@
--- //! # 回复日程邀请
--- //!
--- //! 回复日程事件的邀请（接受/拒绝/暂定）。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/calendar_event/search.rs b/src/service/calendar/v4/calendar_event/search.rs
---index e41217b..87f17b7 100644
------ a/src/service/calendar/v4/calendar_event/search.rs
---+++ b/src/service/calendar/v4/calendar_event/search.rs
---@@ -1,7 +1,7 @@
--- //! # 搜索日程事件
--- //!
--- //! 在指定日历中搜索匹配条件的日程事件。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
---diff --git a/src/service/calendar/v4/mod.rs b/src/service/calendar/v4/mod.rs
---index 7cbe739..8141e40 100644
------ a/src/service/calendar/v4/mod.rs
---+++ b/src/service/calendar/v4/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- // 子模块声明
---@@ -54,17 +52,17 @@ pub struct V4 {
--- }
--- 
--- impl V4 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            calendar: CalendarManagementService::new(Arc::clone(&config)),
----            calendar_acl: CalendarAclService::new(Arc::clone(&config)),
----            calendar_event: CalendarEventService::new(Arc::clone(&config)),
----            meeting_chat: MeetingChatService::new(Arc::clone(&config)),
----            meeting_minute: MeetingMinuteService::new(Arc::clone(&config)),
----            timeoff_event: TimeoffEventService::new(Arc::clone(&config)),
----            meeting_room_event: MeetingRoomEventService::new(Arc::clone(&config)),
----            attendee: AttendeeService::new(Arc::clone(&config)),
----            setting: SettingService::new(Arc::clone(&config)),
---+            calendar: CalendarManagementService::new(config.clone()),
---+            calendar_acl: CalendarAclService::new(config.clone()),
---+            calendar_event: CalendarEventService::new(config.clone()),
---+            meeting_chat: MeetingChatService::new(config.clone()),
---+            meeting_minute: MeetingMinuteService::new(config.clone()),
---+            timeoff_event: TimeoffEventService::new(config.clone()),
---+            meeting_room_event: MeetingRoomEventService::new(config.clone()),
---+            attendee: AttendeeService::new(config.clone()),
---+            setting: SettingService::new(config.clone()),
---             exchange_binding: ExchangeBindingService::new(config),
---         }
---     }
---diff --git a/src/service/cardkit/v1/card/batch_update.rs b/src/service/cardkit/v1/card/batch_update.rs
---index cba197f..a532888 100644
------ a/src/service/cardkit/v1/card/batch_update.rs
---+++ b/src/service/cardkit/v1/card/batch_update.rs
---@@ -72,7 +72,7 @@ impl BatchUpdateCardRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/cardkit/v1/card/create.rs b/src/service/cardkit/v1/card/create.rs
---index 2f6f59d..c4c9017 100644
------ a/src/service/cardkit/v1/card/create.rs
---+++ b/src/service/cardkit/v1/card/create.rs
---@@ -76,7 +76,7 @@ impl CreateCardRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/cardkit/v1/card/settings.rs b/src/service/cardkit/v1/card/settings.rs
---index e0fd1f5..615484d 100644
------ a/src/service/cardkit/v1/card/settings.rs
---+++ b/src/service/cardkit/v1/card/settings.rs
---@@ -82,7 +82,7 @@ impl UpdateCardSettingsRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/cardkit/v1/card/update.rs b/src/service/cardkit/v1/card/update.rs
---index d1d16d7..a04c867 100644
------ a/src/service/cardkit/v1/card/update.rs
---+++ b/src/service/cardkit/v1/card/update.rs
---@@ -82,7 +82,7 @@ impl UpdateCardRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/cardkit/v1/card_element/content.rs b/src/service/cardkit/v1/card_element/content.rs
---index 9db9f93..dc8e54c 100644
------ a/src/service/cardkit/v1/card_element/content.rs
---+++ b/src/service/cardkit/v1/card_element/content.rs
---@@ -1,8 +1,8 @@
--- //! # 流式更新卡片文本
--- //!
--- //! 为卡片组件提供流式文本更新功能。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
--- // 参考: https://open.feishu.cn/document/cardkit-v1/card-element/content
---diff --git a/src/service/cardkit/v1/card_element/create.rs b/src/service/cardkit/v1/card_element/create.rs
---index 4c81695..876ddaa 100644
------ a/src/service/cardkit/v1/card_element/create.rs
---+++ b/src/service/cardkit/v1/card_element/create.rs
---@@ -90,7 +90,7 @@ impl CreateElementRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/cardkit/v1/card_element/delete.rs b/src/service/cardkit/v1/card_element/delete.rs
---index ecaf5c3..536aac0 100644
------ a/src/service/cardkit/v1/card_element/delete.rs
---+++ b/src/service/cardkit/v1/card_element/delete.rs
---@@ -1,8 +1,8 @@
--- //! # 删除卡片组件
--- //!
--- //! 删除卡片中的指定组件。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
--- // 参考: https://open.feishu.cn/document/cardkit-v1/card-element/delete
---diff --git a/src/service/cardkit/v1/card_element/patch.rs b/src/service/cardkit/v1/card_element/patch.rs
---index 165ead2..44e7f18 100644
------ a/src/service/cardkit/v1/card_element/patch.rs
---+++ b/src/service/cardkit/v1/card_element/patch.rs
---@@ -1,8 +1,8 @@
--- //! # 更新组件属性
--- //!
--- //! 部分更新卡片组件的属性信息。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
--- // 参考: https://open.feishu.cn/document/cardkit-v1/card-element/patch
---diff --git a/src/service/cardkit/v1/card_element/update.rs b/src/service/cardkit/v1/card_element/update.rs
---index cc49066..da693c4 100644
------ a/src/service/cardkit/v1/card_element/update.rs
---+++ b/src/service/cardkit/v1/card_element/update.rs
---@@ -1,8 +1,8 @@
--- //! # 更新卡片组件
--- //!
--- //! 更新卡片中的指定组件内容。
----//! 
---+//!
--- //! ## 实现状态
----//! 
---+//!
--- //! 🚧 **待实现** - 此功能尚未实现，敬请期待。
--- // 参考: https://open.feishu.cn/document/cardkit-v1/card-element/update
---diff --git a/src/service/cloud_docs/assistant/mod.rs b/src/service/cloud_docs/assistant/mod.rs
---index 55b343a..6547af4 100644
------ a/src/service/cloud_docs/assistant/mod.rs
---+++ b/src/service/cloud_docs/assistant/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub use v1::V1;
---@@ -13,9 +11,9 @@ pub struct AssistantService {
--- }
--- 
--- impl AssistantService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            v1: V1::new((*config).clone()),
---+            v1: V1::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/bitable/mod.rs b/src/service/cloud_docs/bitable/mod.rs
---index 91aa784..78038ea 100644
------ a/src/service/cloud_docs/bitable/mod.rs
---+++ b/src/service/cloud_docs/bitable/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- pub mod v1;
--- 
--- pub struct BitableService {
---@@ -7,9 +5,9 @@ pub struct BitableService {
--- }
--- 
--- impl BitableService {
----    pub fn new(config: Arc<crate::core::config::Config>) -> Self {
---+    pub fn new(config: crate::core::config::Config) -> Self {
---         Self {
----            v1: v1::V1::new((*config).clone()),
---+            v1: v1::V1::new(config),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs b/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs
---index 75f368c..17585ec 100644
------ a/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_dashboard/list.rs
---@@ -72,13 +72,13 @@ impl ListDashboardRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         self.request
---     }
---@@ -144,10 +144,10 @@ impl DashboardService {
--- /// 列出仪表盘 (向后兼容的函数)
--- pub async fn list_dashboard(
---     request: ListDashboardRequest,
----    config: &Config,
---+    config: Config,
---     option: Option<RequestOption>,
--- ) -> SDKResult<BaseResponse<ListDashboardResponse>> {
----    let service = DashboardService::new(config.clone());
---+    let service = DashboardService::new(config);
---     service.list(request, option).await
--- }
--- 
---diff --git a/src/service/cloud_docs/bitable/v1/app_dashboard/mod.rs b/src/service/cloud_docs/bitable/v1/app_dashboard/mod.rs
---index bfdbe05..d1a109c 100644
------ a/src/service/cloud_docs/bitable/v1/app_dashboard/mod.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_dashboard/mod.rs
---@@ -31,6 +31,6 @@ impl AppDashboardService {
---         request: ListDashboardRequest,
---         option: Option<crate::core::req_option::RequestOption>,
---     ) -> crate::core::SDKResult<crate::core::api_resp::BaseResponse<ListDashboardResponse>> {
----        list::list_dashboard(request, &self.config, option).await
---+        list::list_dashboard(request, self.config.clone(), option).await
---     }
--- }
---diff --git a/src/service/cloud_docs/bitable/v1/app_role/list.rs b/src/service/cloud_docs/bitable/v1/app_role/list.rs
---index bc4667a..6e794f2 100644
------ a/src/service/cloud_docs/bitable/v1/app_role/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_role/list.rs
---@@ -72,13 +72,13 @@ impl ListAppRoleRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/batch_create.rs b/src/service/cloud_docs/bitable/v1/app_role_member/batch_create.rs
---index 02cde38..2172430 100644
------ a/src/service/cloud_docs/bitable/v1/app_role_member/batch_create.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_role_member/batch_create.rs
---@@ -102,7 +102,7 @@ impl BatchCreateRoleMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/batch_delete.rs b/src/service/cloud_docs/bitable/v1/app_role_member/batch_delete.rs
---index 7f2a385..c41f620 100644
------ a/src/service/cloud_docs/bitable/v1/app_role_member/batch_delete.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_role_member/batch_delete.rs
---@@ -89,7 +89,7 @@ impl BatchDeleteRoleMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/create.rs b/src/service/cloud_docs/bitable/v1/app_role_member/create.rs
---index 886d561..2f006f1 100644
------ a/src/service/cloud_docs/bitable/v1/app_role_member/create.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_role_member/create.rs
---@@ -118,7 +118,7 @@ impl CreateRoleMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/delete.rs b/src/service/cloud_docs/bitable/v1/app_role_member/delete.rs
---index 7132b5b..f586580 100644
------ a/src/service/cloud_docs/bitable/v1/app_role_member/delete.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_role_member/delete.rs
---@@ -84,7 +84,7 @@ impl DeleteRoleMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/bitable/v1/app_role_member/list.rs b/src/service/cloud_docs/bitable/v1/app_role_member/list.rs
---index 4014c96..2467bf3 100644
------ a/src/service/cloud_docs/bitable/v1/app_role_member/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_role_member/list.rs
---@@ -113,19 +113,19 @@ impl ListRoleMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/bitable/v1/app_table/list.rs b/src/service/cloud_docs/bitable/v1/app_table/list.rs
---index 53dc949..3b13025 100644
------ a/src/service/cloud_docs/bitable/v1/app_table/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table/list.rs
---@@ -26,14 +26,12 @@ impl AppTableService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_field/create.rs b/src/service/cloud_docs/bitable/v1/app_table_field/create.rs
---index 13e0f2e..bb106e4 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_field/create.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_field/create.rs
---@@ -136,13 +136,13 @@ impl CreateFieldRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(client_token) = &self.request.client_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("client_token".to_string(), client_token.clone());
---+                .insert("client_token", client_token.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_field/list.rs b/src/service/cloud_docs/bitable/v1/app_table_field/list.rs
---index 06f9802..fef6b08 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_field/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_field/list.rs
---@@ -100,25 +100,25 @@ impl ListFieldRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("view_id".to_string(), view_id.clone());
---+                .insert("view_id", view_id.clone());
---         }
---         if let Some(text_field_as_array) = &self.request.text_field_as_array {
----            self.request.api_request.query_params.insert(
----                "text_field_as_array".to_string(),
----                text_field_as_array.to_string(),
----            );
---+            self.request
---+                .api_request
---+                .query_params
---+                .insert("text_field_as_array", text_field_as_array.to_string());
---         }
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_field/update.rs b/src/service/cloud_docs/bitable/v1/app_table_field/update.rs
---index 501e271..1dfcf7b 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_field/update.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_field/update.rs
---@@ -132,7 +132,7 @@ impl UpdateFieldRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_record/batch_create.rs b/src/service/cloud_docs/bitable/v1/app_table_record/batch_create.rs
---index 6bea80e..6ceb03d 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_record/batch_create.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_record/batch_create.rs
---@@ -96,13 +96,13 @@ impl BatchCreateRecordRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(client_token) = &self.request.client_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("client_token".to_string(), client_token.clone());
---+                .insert("client_token", client_token.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_record/batch_get.rs b/src/service/cloud_docs/bitable/v1/app_table_record/batch_get.rs
---index e1cf1e3..a84fd6c 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_record/batch_get.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_record/batch_get.rs
---@@ -105,19 +105,19 @@ impl BatchGetRecordRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(automatic) = &self.request.automatic {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("automatic".to_string(), automatic.to_string());
---+                .insert("automatic", automatic.to_string());
---         }
---         if let Some(with_shared_url) = &self.request.with_shared_url {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("with_shared_url".to_string(), with_shared_url.to_string());
---+                .insert("with_shared_url", with_shared_url.to_string());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_record/batch_update.rs b/src/service/cloud_docs/bitable/v1/app_table_record/batch_update.rs
---index 1cc6dbd..0b5f8d0 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_record/batch_update.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_record/batch_update.rs
---@@ -100,7 +100,7 @@ impl BatchUpdateRecordRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_record/create.rs b/src/service/cloud_docs/bitable/v1/app_table_record/create.rs
---index 4fcc7af..7c3dac7 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_record/create.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_record/create.rs
---@@ -103,13 +103,13 @@ impl CreateRecordRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(client_token) = &self.request.client_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("client_token".to_string(), client_token.clone());
---+                .insert("client_token", client_token.clone());
---         }
---         match serde_json::to_vec(&self.request) {
---             Ok(bytes) => {
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_record/search.rs b/src/service/cloud_docs/bitable/v1/app_table_record/search.rs
---index 9e0c1bc..0e77f6d 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_record/search.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_record/search.rs
---@@ -162,19 +162,19 @@ impl SearchRecordRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_record/update.rs b/src/service/cloud_docs/bitable/v1/app_table_record/update.rs
---index 48741c2..036eb93 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_record/update.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_record/update.rs
---@@ -105,7 +105,7 @@ impl UpdateRecordRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.clone());
---+                .insert("user_id_type", user_id_type.clone());
---         }
---         self.request.api_request.body = serde_json::to_vec(&self.request).unwrap();
---         self.request
---diff --git a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
---index 6dcef2e..7f7e0c3 100644
------ a/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_table_view/list.rs
---@@ -29,14 +29,12 @@ impl AppTableViewService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/bitable/v1/app_workflow/list.rs b/src/service/cloud_docs/bitable/v1/app_workflow/list.rs
---index 58a2086..b829e6e 100644
------ a/src/service/cloud_docs/bitable/v1/app_workflow/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/app_workflow/list.rs
---@@ -69,13 +69,13 @@ impl ListWorkflowRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/bitable/v1/form/list.rs b/src/service/cloud_docs/bitable/v1/form/list.rs
---index 8e00b0e..7ae31f7 100644
------ a/src/service/cloud_docs/bitable/v1/form/list.rs
---+++ b/src/service/cloud_docs/bitable/v1/form/list.rs
---@@ -79,13 +79,13 @@ impl ListFormQuestionRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/board/mod.rs b/src/service/cloud_docs/board/mod.rs
---index b1c65af..50f7b94 100644
------ a/src/service/cloud_docs/board/mod.rs
---+++ b/src/service/cloud_docs/board/mod.rs
---@@ -5,22 +5,20 @@
--- 
--- pub mod v1;
--- 
----use std::sync::Arc;
----
--- use crate::core::{config::Config, req_option::RequestOption, SDKResult};
--- 
--- use self::v1::*;
--- 
--- /// 画板服务
--- pub struct BoardService {
----    config: Arc<Config>,
---+    config: Config,
---     pub whiteboard: v1::whiteboard::WhiteboardService,
--- }
--- 
--- impl BoardService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            whiteboard: v1::whiteboard::WhiteboardService::new((*config).clone()),
---+            whiteboard: v1::whiteboard::WhiteboardService::new(config.clone()),
---             config,
---         }
---     }
---diff --git a/src/service/cloud_docs/board/v1/whiteboard.rs b/src/service/cloud_docs/board/v1/whiteboard.rs
---index 428d77d..c0daf2f 100644
------ a/src/service/cloud_docs/board/v1/whiteboard.rs
---+++ b/src/service/cloud_docs/board/v1/whiteboard.rs
---@@ -43,17 +43,13 @@ impl WhiteboardService {
--- 
---         // 添加查询参数
---         if let Some(format) = request.format {
----            api_req.query_params.insert("format".to_string(), format);
---+            api_req.query_params.insert("format", format);
---         }
---         if let Some(width) = request.width {
----            api_req
----                .query_params
----                .insert("width".to_string(), width.to_string());
---+            api_req.query_params.insert("width", width.to_string());
---         }
---         if let Some(height) = request.height {
----            api_req
----                .query_params
----                .insert("height".to_string(), height.to_string());
---+            api_req.query_params.insert("height", height.to_string());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/comments/mod.rs b/src/service/cloud_docs/comments/mod.rs
---index f97c1a7..659f5a9 100644
------ a/src/service/cloud_docs/comments/mod.rs
---+++ b/src/service/cloud_docs/comments/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::{config::Config, req_option::RequestOption, SDKResult};
--- 
--- pub use batch_query::{
---@@ -29,11 +27,11 @@ mod update_reply;
--- 
--- /// 评论服务
--- pub struct CommentsService {
----    config: Arc<Config>,
---+    config: Config,
--- }
--- 
--- impl CommentsService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self { config }
---     }
--- 
---diff --git a/src/service/cloud_docs/docx/mod.rs b/src/service/cloud_docs/docx/mod.rs
---index f9b541a..b8b5b26 100644
------ a/src/service/cloud_docs/docx/mod.rs
---+++ b/src/service/cloud_docs/docx/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub mod v1;
---@@ -9,9 +7,9 @@ pub struct DocxService {
--- }
--- 
--- impl DocxService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         DocxService {
----            v1: v1::V1::new((*config).clone()),
---+            v1: v1::V1::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/docx/v1/document.rs b/src/service/cloud_docs/docx/v1/document.rs
---index 8d1ac9e..e256d70 100644
------ a/src/service/cloud_docs/docx/v1/document.rs
---+++ b/src/service/cloud_docs/docx/v1/document.rs
---@@ -115,12 +115,10 @@ impl DocumentService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/docx/v1/document_block.rs b/src/service/cloud_docs/docx/v1/document_block.rs
---index b1d459d..0269654 100644
------ a/src/service/cloud_docs/docx/v1/document_block.rs
---+++ b/src/service/cloud_docs/docx/v1/document_block.rs
---@@ -178,12 +178,10 @@ impl DocumentBlockService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/drive/mod.rs b/src/service/cloud_docs/drive/mod.rs
---index 1327bb7..017a254 100644
------ a/src/service/cloud_docs/drive/mod.rs
---+++ b/src/service/cloud_docs/drive/mod.rs
---@@ -38,8 +38,6 @@
--- //! // let file_info = client.drive.v1.file.get(file_token, None).await?;
--- //! ```
--- 
----use std::sync::Arc;
----
--- use crate::{
---     core::config::Config,
---     service::drive::{v1::V1, v2::V2},
---@@ -66,10 +64,10 @@ impl DriveService {
---     ///
---     /// # 参数
---     /// - `config`: 客户端配置
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            v1: V1::new((*config).clone()),
----            v2: V2::new((*config).clone()),
---+            v1: V1::new(config.clone()),
---+            v2: V2::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/drive/v1.rs b/src/service/cloud_docs/drive/v1.rs
---index 48de81e..d554bdd 100644
------ a/src/service/cloud_docs/drive/v1.rs
---+++ b/src/service/cloud_docs/drive/v1.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub mod event;
---@@ -23,15 +21,15 @@ pub struct V1 {
--- }
--- 
--- impl V1 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            event: event::EventService::new(Arc::clone(&config)),
----            file: file::FileService::new(Arc::clone(&config)),
----            file_version: file_version::FileVersionService::new(Arc::clone(&config)),
----            files: files::FilesService::new(Arc::clone(&config)),
----            folder: folder::FolderService::new(Arc::clone(&config)),
----            like: like::LikeService::new(Arc::clone(&config)),
----            media: media::MediaService::new(Arc::clone(&config)),
---+            event: event::EventService::new(config.clone()),
---+            file: file::FileService::new(config.clone()),
---+            file_version: file_version::FileVersionService::new(config.clone()),
---+            files: files::FilesService::new(config.clone()),
---+            folder: folder::FolderService::new(config.clone()),
---+            like: like::LikeService::new(config.clone()),
---+            media: media::MediaService::new(config.clone()),
---             permissions: permissions::PermissionsService::new(config),
---         }
---     }
---diff --git a/src/service/cloud_docs/drive/v1/file.rs b/src/service/cloud_docs/drive/v1/file.rs
---index d2a1fe5..b3d2cf7 100644
------ a/src/service/cloud_docs/drive/v1/file.rs
---+++ b/src/service/cloud_docs/drive/v1/file.rs
---@@ -96,14 +96,12 @@ impl FileService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         let api_resp: BaseResponse<ListFileViewRecordsRespData> =
---@@ -229,21 +227,17 @@ impl FileService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("search_key".to_string(), request.search_key);
---+            .insert("search_key", request.search_key);
---         if let Some(count) = request.count {
----            api_req
----                .query_params
----                .insert("count".to_string(), count.to_string());
---+            api_req.query_params.insert("count", count.to_string());
---         }
---         if let Some(offset) = request.offset {
----            api_req
----                .query_params
----                .insert("offset".to_string(), offset.to_string());
---+            api_req.query_params.insert("offset", offset.to_string());
---         }
---         if let Some(owner_ids) = request.owner_ids {
---             api_req
---                 .query_params
----                .insert("owner_ids".to_string(), owner_ids.join(","));
---+                .insert("owner_ids", owner_ids.join(","));
---         }
--- 
---         let api_resp: BaseResponse<SearchFilesRespData> =
---diff --git a/src/service/cloud_docs/drive/v1/file_version.rs b/src/service/cloud_docs/drive/v1/file_version.rs
---index 7518290..93dace9 100644
------ a/src/service/cloud_docs/drive/v1/file_version.rs
---+++ b/src/service/cloud_docs/drive/v1/file_version.rs
---@@ -118,14 +118,12 @@ impl FileVersionService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/drive/v1/folder.rs b/src/service/cloud_docs/drive/v1/folder.rs
---index be70082..f466dc4 100644
------ a/src/service/cloud_docs/drive/v1/folder.rs
---+++ b/src/service/cloud_docs/drive/v1/folder.rs
---@@ -66,24 +66,18 @@ impl FolderService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(order_by) = request.order_by {
----            api_req
----                .query_params
----                .insert("order_by".to_string(), order_by);
---+            api_req.query_params.insert("order_by", order_by);
---         }
---         if let Some(direction) = request.direction {
----            api_req
----                .query_params
----                .insert("direction".to_string(), direction);
---+            api_req.query_params.insert("direction", direction);
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/drive/v1/like.rs b/src/service/cloud_docs/drive/v1/like.rs
---index 1d85238..79fb442 100644
------ a/src/service/cloud_docs/drive/v1/like.rs
---+++ b/src/service/cloud_docs/drive/v1/like.rs
---@@ -46,14 +46,12 @@ impl LikeService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/drive/v1/media.rs b/src/service/cloud_docs/drive/v1/media.rs
---index 44e19a7..d796abb 100644
------ a/src/service/cloud_docs/drive/v1/media.rs
---+++ b/src/service/cloud_docs/drive/v1/media.rs
---@@ -163,9 +163,7 @@ impl MediaService {
--- 
---         // 添加查询参数
---         let file_tokens = request.file_tokens.join(",");
----        api_req
----            .query_params
----            .insert("file_tokens".to_string(), file_tokens);
---+        api_req.query_params.insert("file_tokens", file_tokens);
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---         Ok(api_resp)
---diff --git a/src/service/cloud_docs/drive/v1/permissions.rs b/src/service/cloud_docs/drive/v1/permissions.rs
---index dbb8c42..53852c3 100644
------ a/src/service/cloud_docs/drive/v1/permissions.rs
---+++ b/src/service/cloud_docs/drive/v1/permissions.rs
---@@ -118,7 +118,7 @@ impl GetPermissionRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("type".to_string(), r#type.to_string());
---+            .insert("type", r#type.to_string());
---         self
---     }
--- 
---@@ -323,7 +323,7 @@ impl PatchPermissionRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("type".to_string(), r#type.to_string());
---+            .insert("type", r#type.to_string());
---         self
---     }
--- 
---diff --git a/src/service/cloud_docs/drive/v2.rs b/src/service/cloud_docs/drive/v2.rs
---index f72af5e..ea66b0d 100644
------ a/src/service/cloud_docs/drive/v2.rs
---+++ b/src/service/cloud_docs/drive/v2.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::{
---     core::config::Config,
---     service::drive::{v1::permissions::PermissionsService, v2::explorer::ExplorerService},
---@@ -13,9 +11,9 @@ pub struct V2 {
--- }
--- 
--- impl V2 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            explorer: ExplorerService::new(Arc::clone(&config)),
---+            explorer: ExplorerService::new(config.clone()),
---             permission: PermissionsService::new(config),
---         }
---     }
---diff --git a/src/service/cloud_docs/drive/v2/explorer.rs b/src/service/cloud_docs/drive/v2/explorer.rs
---index b487916..a8894a6 100644
------ a/src/service/cloud_docs/drive/v2/explorer.rs
---+++ b/src/service/cloud_docs/drive/v2/explorer.rs
---@@ -139,7 +139,7 @@ impl ListFolderIterator<'_> {
---                         self.req
---                             .api_req
---                             .query_params
----                            .insert("page_token".to_string(), data.next_page_token.unwrap());
---+                            .insert("page_token", data.next_page_token.unwrap());
---                         Some(data.files)
---                     } else if data.files.is_empty() {
---                         None
---@@ -281,7 +281,7 @@ impl ListFolderRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("page_size".to_string(), page_size.to_string());
---+            .insert("page_size", page_size.to_string());
---         self
---     }
--- 
---@@ -293,7 +293,7 @@ impl ListFolderRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("page_token".to_string(), page_token.to_string());
---+            .insert("page_token", page_token.to_string());
---         self
---     }
--- 
---@@ -304,7 +304,7 @@ impl ListFolderRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("folder_token".to_string(), fold_token.to_string());
---+            .insert("folder_token", fold_token.to_string());
---         self
---     }
--- 
---@@ -322,7 +322,7 @@ impl ListFolderRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("order_by".to_string(), order_by.to_string());
---+            .insert("order_by", order_by.to_string());
---         self
---     }
--- 
---@@ -338,7 +338,7 @@ impl ListFolderRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("direction".to_string(), direction.to_string());
---+            .insert("direction", direction.to_string());
---         self
---     }
--- 
---@@ -360,7 +360,7 @@ impl ListFolderRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("user_id_type".to_string(), user_id_type.to_string());
---+            .insert("user_id_type", user_id_type.to_string());
---         self
---     }
--- 
---diff --git a/src/service/cloud_docs/mod.rs b/src/service/cloud_docs/mod.rs
---index e9168aa..c8a4ce7 100644
------ a/src/service/cloud_docs/mod.rs
---+++ b/src/service/cloud_docs/mod.rs
---@@ -134,7 +134,6 @@
--- //! - 📈 项目管理和跟踪
--- 
--- use crate::core::config::Config;
----use std::sync::Arc;
--- 
--- // 子模块声明
--- pub mod assistant;
---@@ -183,17 +182,17 @@ pub struct CloudDocsService {
--- }
--- 
--- impl CloudDocsService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            drive: DriveService::new(Arc::clone(&config)),
----            wiki: WikiService::new(Arc::clone(&config)),
----            docx: DocxService::new(Arc::clone(&config)),
----            sheets: SheetsService::new(Arc::clone(&config)),
----            bitable: BitableService::new(Arc::clone(&config)),
----            board: BoardService::new(Arc::clone(&config)),
----            permission: PermissionService::new(Arc::clone(&config)),
----            comments: CommentsService::new(Arc::clone(&config)),
----            assistant: AssistantService::new(Arc::clone(&config)),
---+            drive: DriveService::new(config.clone()),
---+            wiki: WikiService::new(config.clone()),
---+            docx: DocxService::new(config.clone()),
---+            sheets: SheetsService::new(config.clone()),
---+            bitable: BitableService::new(config.clone()),
---+            board: BoardService::new(config.clone()),
---+            permission: PermissionService::new(config.clone()),
---+            comments: CommentsService::new(config.clone()),
---+            assistant: AssistantService::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/permission/mod.rs b/src/service/cloud_docs/permission/mod.rs
---index d33ebee..a600c64 100644
------ a/src/service/cloud_docs/permission/mod.rs
---+++ b/src/service/cloud_docs/permission/mod.rs
---@@ -8,19 +8,17 @@ pub mod member;
--- pub mod public_v1;
--- pub mod public_v2;
--- 
----use std::sync::Arc;
----
--- use crate::core::{config::Config, req_option::RequestOption, SDKResult};
--- 
--- use self::{member::*, public_v1::*, public_v2::*};
--- 
--- /// 权限服务
--- pub struct PermissionService {
----    config: Arc<Config>,
---+    config: Config,
--- }
--- 
--- impl PermissionService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self { config }
---     }
--- 
---diff --git a/src/service/cloud_docs/sheets/mod.rs b/src/service/cloud_docs/sheets/mod.rs
---index 695f419..b76fb2c 100644
------ a/src/service/cloud_docs/sheets/mod.rs
---+++ b/src/service/cloud_docs/sheets/mod.rs
---@@ -50,8 +50,6 @@
--- //! // client.sheets.v3.data_operation.write_data_to_multiple_ranges(write_request, None).await?;
--- //! ```
--- 
----use std::sync::Arc;
----
--- /// Sheets API v2版本
--- pub mod v2;
--- /// Sheets API v3版本
---@@ -73,10 +71,10 @@ impl SheetsService {
---     ///
---     /// # 参数
---     /// - `config`: 客户端配置
----    pub fn new(config: Arc<crate::core::config::Config>) -> Self {
---+    pub fn new(config: crate::core::config::Config) -> Self {
---         Self {
----            v2: v2::V2::new((*config).clone()),
----            v3: v3::V3::new((*config).clone()),
---+            v2: v2::V2::new(config.clone()),
---+            v3: v3::V3::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs b/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs
---index 28f4bef..d978b5e 100644
------ a/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs
---+++ b/src/service/cloud_docs/sheets/v2/data_operation/reading_a_single_range.rs
---@@ -79,10 +79,10 @@ impl ReadingSingleRangeRequestBuilder {
---     /// - valueRenderOption=UnformattedValue：计算但不对单元格进行格式化
---     pub fn value_render_option(mut self, value_render_option: impl ToString) -> Self {
---         self.request.value_render_option = Some(value_render_option.to_string());
----        self.request.api_request.query_params.insert(
----            "valueRenderOption".to_string(),
----            value_render_option.to_string(),
----        );
---+        self.request
---+            .api_request
---+            .query_params
---+            .insert("valueRenderOption", value_render_option.to_string());
---         self
---     }
--- 
---@@ -96,10 +96,10 @@ impl ReadingSingleRangeRequestBuilder {
---     ///   但不会对数字进行格式化。将返回格式化后的字符串。详见电子表格常见问题
---     pub fn date_time_render_option(mut self, date_time_render_option: impl ToString) -> Self {
---         self.request.date_time_render_option = Some(date_time_render_option.to_string());
----        self.request.api_request.query_params.insert(
----            "dateTimeRenderOption".to_string(),
----            date_time_render_option.to_string(),
----        );
---+        self.request
---+            .api_request
---+            .query_params
---+            .insert("dateTimeRenderOption", date_time_render_option.to_string());
---         self
---     }
--- 
---@@ -114,7 +114,7 @@ impl ReadingSingleRangeRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("user_id_type".to_string(), user_id_type.to_string());
---+            .insert("user_id_type", user_id_type.to_string());
---         self
---     }
--- 
---diff --git a/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs b/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs
---index f4d8227..6bb3532 100644
------ a/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs
---+++ b/src/service/cloud_docs/sheets/v2/data_operation/reading_multiple_range.rs
---@@ -71,7 +71,7 @@ impl ReadingMultiRangesRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("ranges".to_string(), ranges.to_string());
---+            .insert("ranges", ranges.to_string());
---         self
---     }
--- 
---@@ -84,10 +84,10 @@ impl ReadingMultiRangesRequestBuilder {
---     /// - valueRenderOption=UnformattedValue：计算但不对单元格进行格式化
---     pub fn value_render_option(mut self, value_render_option: impl ToString) -> Self {
---         self.request.value_render_option = Some(value_render_option.to_string());
----        self.request.api_request.query_params.insert(
----            "valueRenderOption".to_string(),
----            value_render_option.to_string(),
----        );
---+        self.request
---+            .api_request
---+            .query_params
---+            .insert("valueRenderOption", value_render_option.to_string());
---         self
---     }
--- 
---@@ -101,10 +101,10 @@ impl ReadingMultiRangesRequestBuilder {
---     ///   但不会对数字进行格式化。将返回格式化后的字符串。详见电子表格常见问题
---     pub fn date_time_render_option(mut self, date_time_render_option: impl ToString) -> Self {
---         self.request.date_time_render_option = Some(date_time_render_option.to_string());
----        self.request.api_request.query_params.insert(
----            "dateTimeRenderOption".to_string(),
----            date_time_render_option.to_string(),
----        );
---+        self.request
---+            .api_request
---+            .query_params
---+            .insert("dateTimeRenderOption", date_time_render_option.to_string());
---         self
---     }
--- 
---@@ -119,7 +119,7 @@ impl ReadingMultiRangesRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("user_id_type".to_string(), user_id_type.to_string());
---+            .insert("user_id_type", user_id_type.to_string());
---         self
---     }
--- 
---diff --git a/src/service/cloud_docs/sheets/v2/mod.rs b/src/service/cloud_docs/sheets/v2/mod.rs
---index 092b803..57402eb 100644
------ a/src/service/cloud_docs/sheets/v2/mod.rs
---+++ b/src/service/cloud_docs/sheets/v2/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- /// 数据操作功能
---@@ -66,9 +64,9 @@ impl V2 {
---     ///
---     /// # 返回值
---     /// 配置完成的V2服务实例，包含基础的服务模块
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            spreadsheet: SpreadsheetService::new(Arc::clone(&config)),
---+            spreadsheet: SpreadsheetService::new(config.clone()),
---             spreadsheet_sheet: SpreadsheetSheetService::new(config),
---         }
---     }
---diff --git a/src/service/cloud_docs/sheets/v3/condition_format/get.rs b/src/service/cloud_docs/sheets/v3/condition_format/get.rs
---index d63de35..7b19daf 100644
------ a/src/service/cloud_docs/sheets/v3/condition_format/get.rs
---+++ b/src/service/cloud_docs/sheets/v3/condition_format/get.rs
---@@ -32,9 +32,7 @@ impl SpreadsheetSheetService {
--- 
---         // 添加查询参数
---         if let Some(range) = &request.range {
----            api_req
----                .query_params
----                .insert("range".to_string(), range.clone());
---+            api_req.query_params.insert("range", range.clone());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs b/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs
---index 697991e..a74e006 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/append_data.rs
---@@ -32,7 +32,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<AppendDataResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<AppendDataResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
--- 
---         api_resp.into_result()
---     }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs b/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs
---index 363da1e..7e43ab7 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/batch_set_cell_style.rs
---@@ -32,7 +32,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<BatchSetCellStyleResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<BatchSetCellStyleResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
---         api_resp.into_result()
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs
---index e05d046..e0f0410 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/find_cells.rs
---@@ -246,7 +246,8 @@ impl SpreadsheetSheetService {
---         api_req.http_method = reqwest::Method::POST;
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
--- 
----        let api_resp: BaseResponse<FindCellsResponse> = crate::core::http::Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<FindCellsResponse> =
---+            crate::core::http::Transport::request(api_req, &self.config, option).await?;
--- 
---         api_resp.into_result()
---     }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs
---index 84d48c2..4d0a708 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/merge_cells.rs
---@@ -31,7 +31,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<MergeCellsResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<MergeCellsResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
--- 
---         api_resp.into_result()
---     }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs b/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs
---index 68aed7a..106bcb9 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/prepend_data.rs
---@@ -32,7 +32,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<PrependDataResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<PrependDataResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
---         api_resp.into_result()
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs b/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs
---index 2d71c14..583d012 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/reading_multiple_ranges.rs
---@@ -33,7 +33,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<ReadingMultipleRangesResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<ReadingMultipleRangesResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
--- 
---         api_resp.into_result()
---     }
---@@ -141,7 +142,7 @@ impl ReadingMultipleRangesRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("valueRenderOption".to_string(), value);
---+            .insert("valueRenderOption", value);
---         self
---     }
--- 
---@@ -151,7 +152,7 @@ impl ReadingMultipleRangesRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("dateTimeRenderOption".to_string(), value);
---+            .insert("dateTimeRenderOption", value);
---         self
---     }
--- 
---@@ -161,7 +162,7 @@ impl ReadingMultipleRangesRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("user_id_type".to_string(), value);
---+            .insert("user_id_type", value);
---         self
---     }
--- 
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs b/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs
---index 552681e..0e4b26f 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/reading_single_range.rs
---@@ -33,7 +33,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<ReadingSingleRangeResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<ReadingSingleRangeResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
--- 
---         api_resp.into_result()
---     }
---@@ -130,7 +131,7 @@ impl ReadingSingleRangeRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("valueRenderOption".to_string(), value);
---+            .insert("valueRenderOption", value);
---         self
---     }
--- 
---@@ -140,7 +141,7 @@ impl ReadingSingleRangeRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("dateTimeRenderOption".to_string(), value);
---+            .insert("dateTimeRenderOption", value);
---         self
---     }
--- 
---@@ -150,7 +151,7 @@ impl ReadingSingleRangeRequestBuilder {
---         self.request
---             .api_request
---             .query_params
----            .insert("user_id_type".to_string(), value);
---+            .insert("user_id_type", value);
---         self
---     }
--- 
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs
---index 524fdad..27cd37f 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/replace_cells.rs
---@@ -5,8 +5,9 @@ use crate::{
---         api_req::ApiRequest,
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         constants::AccessTokenType,
----        req_option, SDKResult,
---+        req_option,
---         standard_response::StandardResponse,
---+        SDKResult,
---     },
---     impl_executable_builder_owned,
---     service::sheets::v3::{
---@@ -142,7 +143,8 @@ impl SpreadsheetSheetService {
---         api_req.http_method = reqwest::Method::POST;
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::App];
--- 
----        let api_resp: BaseResponse<ReplaceCellsResponse> = crate::core::http::Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<ReplaceCellsResponse> =
---+            crate::core::http::Transport::request(api_req, &self.config, option).await?;
---         api_resp.into_result()
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs b/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs
---index 36fc9d4..6e8bf02 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/set_cell_style.rs
---@@ -30,7 +30,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<SetCellStyleResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<SetCellStyleResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
---         api_resp.into_result()
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs b/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs
---index 54366ae..b2eb854 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/split_cells.rs
---@@ -30,7 +30,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<SplitCellsResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<SplitCellsResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
---         api_resp.into_result()
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs b/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs
---index af6cf92..15b5ab6 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/write_data_to_multiple_ranges.rs
---@@ -31,7 +31,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<WriteDataToMultipleRangesResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<WriteDataToMultipleRangesResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
--- 
---         api_resp.into_result()
---     }
---diff --git a/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs b/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs
---index 546b70b..06a8d71 100644
------ a/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_operation/write_images.rs
---@@ -30,7 +30,8 @@ impl DataOperationService {
---         );
---         api_req.supported_access_token_types = vec![AccessTokenType::Tenant, AccessTokenType::User];
--- 
----        let api_resp: BaseResponse<WriteImagesResponseData> = Transport::request(api_req, &self.config, option).await?;
---+        let api_resp: BaseResponse<WriteImagesResponseData> =
---+            Transport::request(api_req, &self.config, option).await?;
---         api_resp.into_result()
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/data_validation/query.rs b/src/service/cloud_docs/sheets/v3/data_validation/query.rs
---index b05267d..2631503 100644
------ a/src/service/cloud_docs/sheets/v3/data_validation/query.rs
---+++ b/src/service/cloud_docs/sheets/v3/data_validation/query.rs
---@@ -32,9 +32,7 @@ impl SpreadsheetSheetService {
--- 
---         // 添加查询参数
---         if let Some(range) = &request.range {
----            api_req
----                .query_params
----                .insert("range".to_string(), range.clone());
---+            api_req.query_params.insert("range", range.clone());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/sheets/v3/mod.rs b/src/service/cloud_docs/sheets/v3/mod.rs
---index d832c89..e000ddf 100644
------ a/src/service/cloud_docs/sheets/v3/mod.rs
---+++ b/src/service/cloud_docs/sheets/v3/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- /// 条件格式化功能
---@@ -80,14 +78,14 @@ impl V3 {
---     ///
---     /// # 返回值
---     /// 配置完成的V3服务实例，包含所有子服务模块
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            spreadsheet: SpreadsheetService::new(Arc::clone(&config)),
----            spreadsheet_sheet: SpreadsheetSheetService::new(Arc::clone(&config)),
----            spreadsheet_sheet_filter: SpreadsheetSheetFilterService::new(Arc::clone(&config)),
----            spreadsheet_sheet_filter_view: SpreadsheetSheetFilterViewService::new(Arc::clone(&config)),
----            data_operation: DataOperationService::new(Arc::clone(&config)),
----            sheet_row_col: SheetRowColService::new(config),
---+            spreadsheet: SpreadsheetService::new(config.clone()),
---+            spreadsheet_sheet: SpreadsheetSheetService::new(config.clone()),
---+            spreadsheet_sheet_filter: SpreadsheetSheetFilterService::new(config.clone()),
---+            spreadsheet_sheet_filter_view: SpreadsheetSheetFilterViewService::new(config.clone()),
---+            data_operation: DataOperationService::new(config.clone()),
---+            sheet_row_col: SheetRowColService::new(config.clone()),
---         }
---     }
--- }
---@@ -122,7 +120,9 @@ impl SpreadsheetService {
---     /// # 参数
---     /// - `config`: 客户端配置
---     pub fn new(config: Config) -> Self {
----        Self { config }
---+        Self {
---+            config: config.clone(),
---+        }
---     }
--- }
--- 
---@@ -157,7 +157,9 @@ impl SpreadsheetSheetService {
---     /// # 参数
---     /// - `config`: 客户端配置
---     pub fn new(config: Config) -> Self {
----        Self { config }
---+        Self {
---+            config: config.clone(),
---+        }
---     }
--- }
--- 
---@@ -198,7 +200,9 @@ impl SpreadsheetSheetFilterService {
---     /// # 参数
---     /// - `config`: 客户端配置
---     pub fn new(config: Config) -> Self {
----        Self { config }
---+        Self {
---+            config: config.clone(),
---+        }
---     }
--- }
--- 
---@@ -241,7 +245,9 @@ impl SpreadsheetSheetFilterViewService {
---     /// # 参数
---     /// - `config`: 客户端配置
---     pub fn new(config: Config) -> Self {
----        Self { config }
---+        Self {
---+            config: config.clone(),
---+        }
---     }
--- }
--- 
---@@ -295,7 +301,9 @@ impl DataOperationService {
---     /// # 参数
---     /// - `config`: 客户端配置
---     pub fn new(config: Config) -> Self {
----        Self { config }
---+        Self {
---+            config: config.clone(),
---+        }
---     }
--- }
--- 
---@@ -344,6 +352,8 @@ impl SheetRowColService {
---     /// # 参数
---     /// - `config`: 客户端配置
---     pub fn new(config: Config) -> Self {
----        Self { config }
---+        Self {
---+            config: config.clone(),
---+        }
---     }
--- }
---diff --git a/src/service/cloud_docs/sheets/v3/protect_range/get.rs b/src/service/cloud_docs/sheets/v3/protect_range/get.rs
---index 6c1c769..10284fc 100644
------ a/src/service/cloud_docs/sheets/v3/protect_range/get.rs
---+++ b/src/service/cloud_docs/sheets/v3/protect_range/get.rs
---@@ -32,9 +32,7 @@ impl SpreadsheetService {
--- 
---         // 添加查询参数
---         if let Some(sheet_id) = &request.sheet_id {
----            api_req
----                .query_params
----                .insert("sheet_id".to_string(), sheet_id.clone());
---+            api_req.query_params.insert("sheet_id", sheet_id.clone());
---         }
--- 
---         let api_resp = Transport::request(api_req, &self.config, option).await?;
---diff --git a/src/service/cloud_docs/wiki/mod.rs b/src/service/cloud_docs/wiki/mod.rs
---index b70eceb..4f78d5b 100644
------ a/src/service/cloud_docs/wiki/mod.rs
---+++ b/src/service/cloud_docs/wiki/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub use v2::V2;
---@@ -12,9 +10,9 @@ pub struct WikiService {
--- }
--- 
--- impl WikiService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            v2: V2::new((*config).clone()),
---+            v2: V2::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/cloud_docs/wiki/v2/mod.rs b/src/service/cloud_docs/wiki/v2/mod.rs
---index df37718..19a50a9 100644
------ a/src/service/cloud_docs/wiki/v2/mod.rs
---+++ b/src/service/cloud_docs/wiki/v2/mod.rs
---@@ -36,7 +36,7 @@ impl V2 {
---             space_node: SpaceNodeService::new(config.clone()),
---             space_setting: SpaceSettingService::new(config.clone()),
---             task: TaskService::new(config.clone()),
----            config,
---+            config: config.clone(),
---         }
---     }
--- 
---diff --git a/src/service/cloud_docs/wiki/v2/space/list.rs b/src/service/cloud_docs/wiki/v2/space/list.rs
---index a0fd737..0b37b3c 100644
------ a/src/service/cloud_docs/wiki/v2/space/list.rs
---+++ b/src/service/cloud_docs/wiki/v2/space/list.rs
---@@ -57,13 +57,13 @@ impl ListSpaceRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/wiki/v2/space_member/delete.rs b/src/service/cloud_docs/wiki/v2/space_member/delete.rs
---index 7b0bb93..68837d2 100644
------ a/src/service/cloud_docs/wiki/v2/space_member/delete.rs
---+++ b/src/service/cloud_docs/wiki/v2/space_member/delete.rs
---@@ -70,7 +70,7 @@ impl DeleteSpaceMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("member_type".to_string(), member_type.clone());
---+                .insert("member_type", member_type.clone());
---         }
---         self.request
---     }
---diff --git a/src/service/cloud_docs/wiki/v2/space_member/list.rs b/src/service/cloud_docs/wiki/v2/space_member/list.rs
---index f4e9ff1..f868841 100644
------ a/src/service/cloud_docs/wiki/v2/space_member/list.rs
---+++ b/src/service/cloud_docs/wiki/v2/space_member/list.rs
---@@ -69,13 +69,13 @@ impl ListSpaceMemberRequestBuilder {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_request
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
---         self.request
---     }
---diff --git a/src/service/contact/v3/functional_role.rs b/src/service/contact/v3/functional_role.rs
---index 12cda77..602d2aa 100644
------ a/src/service/contact/v3/functional_role.rs
---+++ b/src/service/contact/v3/functional_role.rs
---@@ -83,12 +83,12 @@ impl FunctionalRoleService {
---         if let Some(page_size) = req.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &req.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         let resp =
---diff --git a/src/service/contact/v3/group.rs b/src/service/contact/v3/group.rs
---index 9bb9c46..d7efe43 100644
------ a/src/service/contact/v3/group.rs
---+++ b/src/service/contact/v3/group.rs
---@@ -130,13 +130,13 @@ impl GroupService {
---         let mut query_params = std::collections::HashMap::new();
--- 
---         if let Some(user_id_type) = &req.user_id_type {
----            query_params.insert("user_id_type".to_string(), user_id_type.clone());
---+            query_params.insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(department_id_type) = &req.department_id_type {
----            query_params.insert("department_id_type".to_string(), department_id_type.clone());
---+            query_params.insert("department_id_type", department_id_type.clone());
---         }
---         if let Some(include_members) = req.include_members {
----            query_params.insert("include_members".to_string(), include_members.to_string());
---+            query_params.insert("include_members", include_members.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/contact/v3/mod.rs b/src/service/contact/v3/mod.rs
---index 71deb12..596dedb 100644
------ a/src/service/contact/v3/mod.rs
---+++ b/src/service/contact/v3/mod.rs
---@@ -1,6 +1,4 @@
--- /// Contact v3 API 实现
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub mod custom_attr;
---@@ -66,21 +64,21 @@ pub struct V3 {
--- }
--- 
--- impl V3 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            scope: ScopeService::new(Arc::clone(&config)),
----            user: UserService::new(Arc::clone(&config)),
----            group: GroupService::new(Arc::clone(&config)),
----            custom_attr: CustomAttrService::new(Arc::clone(&config)),
----            employee_type_enum: EmployeeTypeEnumService::new(Arc::clone(&config)),
----            department: DepartmentService::new(Arc::clone(&config)),
----            unit: UnitService::new(Arc::clone(&config)),
----            group_member: GroupMemberService::new(Arc::clone(&config)),
----            functional_role: FunctionalRoleService::new(Arc::clone(&config)),
----            functional_role_member: FunctionalRoleMemberService::new(Arc::clone(&config)),
----            job_level: JobLevelService::new(Arc::clone(&config)),
----            job_family: JobFamilyService::new(Arc::clone(&config)),
----            job_title: JobTitleService::new(Arc::clone(&config)),
---+            scope: ScopeService::new(config.clone()),
---+            user: UserService::new(config.clone()),
---+            group: GroupService::new(config.clone()),
---+            custom_attr: CustomAttrService::new(config.clone()),
---+            employee_type_enum: EmployeeTypeEnumService::new(config.clone()),
---+            department: DepartmentService::new(config.clone()),
---+            unit: UnitService::new(config.clone()),
---+            group_member: GroupMemberService::new(config.clone()),
---+            functional_role: FunctionalRoleService::new(config.clone()),
---+            functional_role_member: FunctionalRoleMemberService::new(config.clone()),
---+            job_level: JobLevelService::new(config.clone()),
---+            job_family: JobFamilyService::new(config.clone()),
---+            job_title: JobTitleService::new(config.clone()),
---             work_city: WorkCityService::new(config),
---         }
---     }
---diff --git a/src/service/contact/v3/user.rs b/src/service/contact/v3/user.rs
---index 88faf92..c848ebc 100644
------ a/src/service/contact/v3/user.rs
---+++ b/src/service/contact/v3/user.rs
---@@ -1,9 +1,9 @@
--- use crate::{
---     core::{
---         api_req::ApiRequest, api_resp::ApiResponseTrait, config::Config,
----        constants::AccessTokenType, http::Transport, req_option::RequestOption,
----        standard_response::StandardResponse, trait_system::executable_builder::ExecutableBuilder,
----        SDKResult,
---+        constants::AccessTokenType, endpoints::Endpoints, http::Transport,
---+        req_option::RequestOption, standard_response::StandardResponse,
---+        trait_system::executable_builder::ExecutableBuilder, SDKResult,
---     },
---     service::contact::models::*,
--- };
---@@ -34,7 +34,7 @@ impl UserService {
---     ) -> crate::core::SDKResult<CreateUserResponse> {
---         let api_req = ApiRequest {
---             http_method: reqwest::Method::POST,
----            api_path: "/open-apis/contact/v3/users".to_string(),
---+            api_path: Endpoints::CONTACT_V3_USERS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(req)?,
---             ..Default::default()
---@@ -88,10 +88,10 @@ impl UserService {
---     ) -> crate::core::SDKResult<GetUserResponse> {
---         let mut query_params = std::collections::HashMap::new();
---         if let Some(user_id_type) = &_req.user_id_type {
----            query_params.insert("user_id_type".to_string(), user_id_type.clone());
---+            query_params.insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(department_id_type) = &_req.department_id_type {
----            query_params.insert("department_id_type".to_string(), department_id_type.clone());
---+            query_params.insert("department_id_type", department_id_type.clone());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -114,7 +114,7 @@ impl UserService {
---     ) -> crate::core::SDKResult<BatchGetUsersResponse> {
---         let api_req = ApiRequest {
---             http_method: reqwest::Method::POST,
----            api_path: "/open-apis/contact/v3/users/batch".to_string(),
---+            api_path: Endpoints::CONTACT_V3_USERS_BATCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(req)?,
---             ..Default::default()
---@@ -131,7 +131,7 @@ impl UserService {
---     ) -> crate::core::SDKResult<FindUsersByDepartmentResponse> {
---         let api_req = ApiRequest {
---             http_method: reqwest::Method::GET,
----            api_path: "/open-apis/contact/v3/users/find_by_department".to_string(),
---+            api_path: Endpoints::CONTACT_V3_USERS_FIND_BY_DEPARTMENT.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: Vec::new(),
---             query_params: std::collections::HashMap::new(),
---@@ -150,7 +150,7 @@ impl UserService {
---     ) -> crate::core::SDKResult<BatchGetUserIdResponse> {
---         let api_req = ApiRequest {
---             http_method: reqwest::Method::POST,
----            api_path: "/open-apis/contact/v3/users/batch_get_id".to_string(),
---+            api_path: Endpoints::CONTACT_V3_USERS_BATCH_GET_ID.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(req)?,
---             ..Default::default()
---@@ -168,7 +168,7 @@ impl UserService {
---     ) -> crate::core::SDKResult<SearchUsersResponse> {
---         let api_req = ApiRequest {
---             http_method: reqwest::Method::POST,
----            api_path: "/open-apis/contact/v3/users/search".to_string(),
---+            api_path: Endpoints::CONTACT_V3_USERS_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(req)?,
---             ..Default::default()
---@@ -220,21 +220,21 @@ impl UserService {
---         let mut query_params = std::collections::HashMap::new();
--- 
---         if let Some(page_size) = req.page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &req.page_token {
----            query_params.insert("page_token".to_string(), page_token.clone());
---+            query_params.insert("page_token", page_token.clone());
---         }
---         if let Some(user_id_type) = &req.user_id_type {
----            query_params.insert("user_id_type".to_string(), user_id_type.clone());
---+            query_params.insert("user_id_type", user_id_type.clone());
---         }
---         if let Some(department_id_type) = &req.department_id_type {
----            query_params.insert("department_id_type".to_string(), department_id_type.clone());
---+            query_params.insert("department_id_type", department_id_type.clone());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: reqwest::Method::GET,
----            api_path: "/open-apis/contact/v3/users".to_string(),
---+            api_path: Endpoints::CONTACT_V3_USERS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: Vec::new(),
---             query_params,
---diff --git a/src/service/corehr/job_management/mod.rs b/src/service/corehr/job_management/mod.rs
---index 598d79c..6fb61c6 100644
------ a/src/service/corehr/job_management/mod.rs
---+++ b/src/service/corehr/job_management/mod.rs
---@@ -7,6 +7,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -180,7 +181,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobFamilyCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/job_families".to_string(),
---+            api_path: Endpoints::COREHR_JOB_FAMILIES.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -223,7 +224,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobFamilyListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/corehr/v1/job_families".to_string(),
---+            api_path: Endpoints::COREHR_JOB_FAMILIES.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -231,13 +232,11 @@ impl JobManagementService {
--- 
---         // 添加查询参数
---         if let Some(size) = page_size {
----            api_req
----                .query_params
----                .insert("page_size".to_string(), size.to_string());
---+            api_req.query_params.insert("page_size", size.to_string());
---         }
--- 
---         if let Some(token) = page_token {
----            api_req.query_params.insert("page_token".to_string(), token);
---+            api_req.query_params.insert("page_token", token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -289,7 +288,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobLevelCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/job_levels".to_string(),
---+            api_path: Endpoints::COREHR_JOB_LEVELS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -332,7 +331,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobLevelListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/corehr/v1/job_levels".to_string(),
---+            api_path: Endpoints::COREHR_JOB_LEVELS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -340,13 +339,11 @@ impl JobManagementService {
--- 
---         // 添加查询参数
---         if let Some(size) = page_size {
----            api_req
----                .query_params
----                .insert("page_size".to_string(), size.to_string());
---+            api_req.query_params.insert("page_size", size.to_string());
---         }
--- 
---         if let Some(token) = page_token {
----            api_req.query_params.insert("page_token".to_string(), token);
---+            api_req.query_params.insert("page_token", token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -398,7 +395,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobGradeCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/job_grades".to_string(),
---+            api_path: Endpoints::COREHR_JOB_GRADES.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -441,7 +438,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobGradeQueryResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/job_grades/query".to_string(),
---+            api_path: Endpoints::COREHR_JOB_GRADES_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -451,7 +448,7 @@ impl JobManagementService {
---         if let Some(family_id) = job_family_id {
---             api_req
---                 .query_params
----                .insert("job_family_id".to_string(), family_id);
---+                .insert("job_family_id", family_id);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -503,7 +500,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/jobs".to_string(),
---+            api_path: Endpoints::COREHR_JOBS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -546,7 +543,7 @@ impl JobManagementService {
---     ) -> SDKResult<BaseResponse<JobListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/corehr/v1/jobs".to_string(),
---+            api_path: Endpoints::COREHR_JOBS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -554,13 +551,11 @@ impl JobManagementService {
--- 
---         // 添加查询参数
---         if let Some(size) = page_size {
----            api_req
----                .query_params
----                .insert("page_size".to_string(), size.to_string());
---+            api_req.query_params.insert("page_size", size.to_string());
---         }
--- 
---         if let Some(token) = page_token {
----            api_req.query_params.insert("page_token".to_string(), token);
---+            api_req.query_params.insert("page_token", token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/corehr/lifecycle/mod.rs b/src/service/corehr/lifecycle/mod.rs
---index b598da4..03c463c 100644
------ a/src/service/corehr/lifecycle/mod.rs
---+++ b/src/service/corehr/lifecycle/mod.rs
---@@ -7,6 +7,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -166,7 +167,7 @@ impl LifecycleService {
---     ) -> SDKResult<BaseResponse<PreHireCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/pre_hires".to_string(),
---+            api_path: Endpoints::COREHR_PRE_HIRES.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -218,7 +219,7 @@ impl LifecycleService {
---     ) -> SDKResult<BaseResponse<PreHireSearchResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/pre_hires/search".to_string(),
---+            api_path: Endpoints::COREHR_PRE_HIRES_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -275,7 +276,7 @@ impl LifecycleService {
---     ) -> SDKResult<BaseResponse<JobChangeCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/job_changes".to_string(),
---+            api_path: Endpoints::COREHR_JOB_CHANGES.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -328,7 +329,7 @@ impl LifecycleService {
---     ) -> SDKResult<BaseResponse<JobChangeSearchResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/job_changes/search".to_string(),
---+            api_path: Endpoints::COREHR_JOB_CHANGES_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -379,7 +380,7 @@ impl LifecycleService {
---     ) -> SDKResult<BaseResponse<OffboardingCreateResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/offboardings".to_string(),
---+            api_path: Endpoints::COREHR_OFFBOARDINGS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -432,7 +433,7 @@ impl LifecycleService {
---     ) -> SDKResult<BaseResponse<OffboardingSearchResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/corehr/v1/offboardings/search".to_string(),
---+            api_path: Endpoints::COREHR_OFFBOARDINGS_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---diff --git a/src/service/corehr/organization/mod.rs b/src/service/corehr/organization/mod.rs
---index e5302f8..c973522 100644
------ a/src/service/corehr/organization/mod.rs
---+++ b/src/service/corehr/organization/mod.rs
---@@ -244,7 +244,7 @@ impl OrganizationService {
---         if let Some(date) = effective_date {
---             api_req
---                 .query_params
----                .insert("effective_date".to_string(), date);
---+                .insert("effective_date", date);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -355,13 +355,11 @@ impl OrganizationService {
--- 
---         // 添加查询参数
---         if let Some(size) = page_size {
----            api_req
----                .query_params
----                .insert("page_size".to_string(), size.to_string());
---+            api_req.query_params.insert("page_size", size.to_string());
---         }
--- 
---         if let Some(token) = page_token {
----            api_req.query_params.insert("page_token".to_string(), token);
---+            api_req.query_params.insert("page_token", token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/directory/v1/department/create.rs b/src/service/directory/v1/department/create.rs
---index d81cbcb..7c8e9d0 100644
------ a/src/service/directory/v1/department/create.rs
---+++ b/src/service/directory/v1/department/create.rs
---@@ -100,14 +100,14 @@ impl CreateDepartmentRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/department/delete.rs b/src/service/directory/v1/department/delete.rs
---index 0a6d072..83fb67c 100644
------ a/src/service/directory/v1/department/delete.rs
---+++ b/src/service/directory/v1/department/delete.rs
---@@ -60,10 +60,10 @@ impl DeleteDepartmentRequestBuilder {
---     pub fn build(mut self) -> DeleteDepartmentRequest {
---         // 构建查询参数
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         self.request
---diff --git a/src/service/directory/v1/department/filter.rs b/src/service/directory/v1/department/filter.rs
---index 48c0e72..f21dfb2 100644
------ a/src/service/directory/v1/department/filter.rs
---+++ b/src/service/directory/v1/department/filter.rs
---@@ -91,19 +91,19 @@ impl FilterDepartmentRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(ref page_token) = self.request.page_token {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         if let Some(ref parent_department_id) = self.request.parent_department_id {
---             self.request.api_req.query_params.insert(
----                "parent_department_id".to_string(),
---+                "parent_department_id",
---                 parent_department_id.clone(),
---             );
---         }
---@@ -112,21 +112,21 @@ impl FilterDepartmentRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("fetch_deleted".to_string(), fetch_deleted.to_string());
---+                .insert("fetch_deleted", fetch_deleted.to_string());
---         }
--- 
---         if let Some(user_id_type) = &self.request.user_id_type {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         self.request
---diff --git a/src/service/directory/v1/department/mget.rs b/src/service/directory/v1/department/mget.rs
---index 3661679..2d0105c 100644
------ a/src/service/directory/v1/department/mget.rs
---+++ b/src/service/directory/v1/department/mget.rs
---@@ -74,14 +74,14 @@ impl MgetDepartmentRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/department/patch.rs b/src/service/directory/v1/department/patch.rs
---index 7e2f4ea..0409e6a 100644
------ a/src/service/directory/v1/department/patch.rs
---+++ b/src/service/directory/v1/department/patch.rs
---@@ -112,14 +112,14 @@ impl PatchDepartmentRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/department/search.rs b/src/service/directory/v1/department/search.rs
---index a483fb4..0809f1e 100644
------ a/src/service/directory/v1/department/search.rs
---+++ b/src/service/directory/v1/department/search.rs
---@@ -88,14 +88,14 @@ impl SearchDepartmentRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/employee/create.rs b/src/service/directory/v1/employee/create.rs
---index cf9bb17..aae3669 100644
------ a/src/service/directory/v1/employee/create.rs
---+++ b/src/service/directory/v1/employee/create.rs
---@@ -148,14 +148,14 @@ impl CreateEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/employee/delete.rs b/src/service/directory/v1/employee/delete.rs
---index 795c5fc..0260863 100644
------ a/src/service/directory/v1/employee/delete.rs
---+++ b/src/service/directory/v1/employee/delete.rs
---@@ -83,14 +83,14 @@ impl DeleteEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/employee/filter.rs b/src/service/directory/v1/employee/filter.rs
---index 4beb8b1..f1ab787 100644
------ a/src/service/directory/v1/employee/filter.rs
---+++ b/src/service/directory/v1/employee/filter.rs
---@@ -91,19 +91,19 @@ impl FilterEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(ref page_token) = self.request.page_token {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         if let Some(ref status) = self.request.status {
---             self.request.api_req.query_params.insert(
----                "status".to_string(),
---+                "status",
---                 serde_json::to_string(status)
---                     .unwrap_or_default()
---                     .trim_matches('"')
---@@ -115,21 +115,21 @@ impl FilterEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("department_ids".to_string(), department_ids.join(","));
---+                .insert("department_ids", department_ids.join(","));
---         }
--- 
---         if let Some(user_id_type) = &self.request.user_id_type {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         self.request
---diff --git a/src/service/directory/v1/employee/mget.rs b/src/service/directory/v1/employee/mget.rs
---index 4fa7bfc..af86afa 100644
------ a/src/service/directory/v1/employee/mget.rs
---+++ b/src/service/directory/v1/employee/mget.rs
---@@ -67,14 +67,14 @@ impl MgetEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/employee/patch.rs b/src/service/directory/v1/employee/patch.rs
---index 1777093..a97d1f1 100644
------ a/src/service/directory/v1/employee/patch.rs
---+++ b/src/service/directory/v1/employee/patch.rs
---@@ -147,14 +147,14 @@ impl PatchEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/employee/regular.rs b/src/service/directory/v1/employee/regular.rs
---index e22b0d0..f5ba34a 100644
------ a/src/service/directory/v1/employee/regular.rs
---+++ b/src/service/directory/v1/employee/regular.rs
---@@ -59,7 +59,7 @@ impl RegularEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建空的请求体
---diff --git a/src/service/directory/v1/employee/resurrect.rs b/src/service/directory/v1/employee/resurrect.rs
---index bb968ef..c97c338 100644
------ a/src/service/directory/v1/employee/resurrect.rs
---+++ b/src/service/directory/v1/employee/resurrect.rs
---@@ -107,14 +107,14 @@ impl ResurrectEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         // 构建请求体
---@@ -182,7 +182,7 @@ impl EmployeeService {
---     /// let response = client.directory.v1.employee.resurrect(
---     ///     ResurrectEmployeeRequest::builder("employee_id")
---     ///         .leader_id("leader_id")
----    ///         .department_ids(vec!["department_id".to_string()])
---+    ///         .department_ids(vec!["department_id"])
---     ///         .build(),
---     ///     None
---     /// ).await?;
---diff --git a/src/service/directory/v1/employee/search.rs b/src/service/directory/v1/employee/search.rs
---index c844035..26fb8b3 100644
------ a/src/service/directory/v1/employee/search.rs
---+++ b/src/service/directory/v1/employee/search.rs
---@@ -91,28 +91,28 @@ impl SearchEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         if let Some(department_id_type) = &self.request.department_id_type {
----            self.request.api_req.query_params.insert(
----                "department_id_type".to_string(),
----                department_id_type.to_string(),
----            );
---+            self.request
---+                .api_req
---+                .query_params
---+                .insert("department_id_type", department_id_type.to_string());
---         }
--- 
---         if let Some(page_token) = &self.request.page_token {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         if let Some(page_size) = &self.request.page_size {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/directory/v1/employee/to_be_resigned.rs b/src/service/directory/v1/employee/to_be_resigned.rs
---index 8572b83..a5c2184 100644
------ a/src/service/directory/v1/employee/to_be_resigned.rs
---+++ b/src/service/directory/v1/employee/to_be_resigned.rs
---@@ -83,7 +83,7 @@ impl ToBeResignedEmployeeRequestBuilder {
---             self.request
---                 .api_req
---                 .query_params
----                .insert("user_id_type".to_string(), user_id_type.to_string());
---+                .insert("user_id_type", user_id_type.to_string());
---         }
--- 
---         // 构建请求体
---diff --git a/src/service/ehr/attachment/mod.rs b/src/service/ehr/attachment/mod.rs
---index ac24bab..19ab02c 100644
------ a/src/service/ehr/attachment/mod.rs
---+++ b/src/service/ehr/attachment/mod.rs
---@@ -104,9 +104,7 @@ impl AttachmentService {
--- 
---         // 添加查询参数
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/ehr/employee/mod.rs b/src/service/ehr/employee/mod.rs
---index 98c4186..63ea5e7 100644
------ a/src/service/ehr/employee/mod.rs
---+++ b/src/service/ehr/employee/mod.rs
---@@ -111,48 +111,40 @@ impl EmployeeService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(department_id) = request.department_id {
----            api_req
----                .query_params
----                .insert("department_id".to_string(), department_id);
---+            api_req.query_params.insert("department_id", department_id);
---         }
--- 
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         if let Some(department_id_type) = request.department_id_type {
---             api_req
---                 .query_params
----                .insert("department_id_type".to_string(), department_id_type);
---+                .insert("department_id_type", department_id_type);
---         }
--- 
---         if let Some(include_resigned) = request.include_resigned {
---             api_req
---                 .query_params
----                .insert("include_resigned".to_string(), include_resigned.to_string());
---+                .insert("include_resigned", include_resigned.to_string());
---         }
--- 
---         if let Some(fields) = request.fields {
---             if !fields.is_empty() {
----                api_req
----                    .query_params
----                    .insert("fields".to_string(), fields.join(","));
---+                api_req.query_params.insert("fields", fields.join(","));
---             }
---         }
--- 
---diff --git a/src/service/elearning/course_registration/mod.rs b/src/service/elearning/course_registration/mod.rs
---index f96ce41..2d6894f 100644
------ a/src/service/elearning/course_registration/mod.rs
---+++ b/src/service/elearning/course_registration/mod.rs
---@@ -80,47 +80,45 @@ impl CourseRegistrationService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(course_id) = request.course_id {
---             api_req
---                 .query_params
----                .insert("course_id".to_string(), course_id);
---+                .insert("course_id", course_id);
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert("user_id", user_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(registration_type) = request.registration_type {
---             api_req
---                 .query_params
----                .insert("registration_type".to_string(), registration_type);
---+                .insert("registration_type", registration_type);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert("start_time", start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert("end_time", end_time.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -239,31 +237,29 @@ impl CourseRegistrationService {
--- 
---         // 添加查询参数
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert("user_id", user_id);
---         }
--- 
---         if let Some(course_id) = request.course_id {
---             api_req
---                 .query_params
----                .insert("course_id".to_string(), course_id);
---+                .insert("course_id", course_id);
---         }
--- 
---         if let Some(department_id) = request.department_id {
----            api_req
----                .query_params
----                .insert("department_id".to_string(), department_id);
---+            api_req.query_params.insert("department_id", department_id);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert("start_time", start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert("end_time", end_time.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/group/v1/chat/mod.rs b/src/service/group/v1/chat/mod.rs
---index 67c6c60..638ee83 100644
------ a/src/service/group/v1/chat/mod.rs
---+++ b/src/service/group/v1/chat/mod.rs
---@@ -1,5 +1,3 @@
----use crate::core::config::Config;
----
--- //! # 群管理服务模块
--- //!
--- //! 本模块包含飞书群聊相关的所有管理功能。
---@@ -9,7 +7,7 @@ use crate::core::config::Config;
--- //! - `create`: 创建群聊
--- //! - `get`: 获取群信息
--- //! - `list`: 获取群列表
----//! - `delete`: 解散群聊 
---+//! - `delete`: 解散群聊
--- //! - `update`: 更新群信息
--- //! - `search`: 搜索群聊
--- //! - `put_top_notice`: 设置群置顶
---@@ -18,6 +16,8 @@ use crate::core::config::Config;
--- //!
--- //! 🚧 **待实现** - 以上功能模块尚未实现，敬请期待。
--- 
---+use crate::core::config::Config;
---+
--- // 规划中的功能模块（待实现）
--- // pub mod create;
--- // pub mod get;
---diff --git a/src/service/group/v1/chat_member/mod.rs b/src/service/group/v1/chat_member/mod.rs
---index ab92938..b3df7b9 100644
------ a/src/service/group/v1/chat_member/mod.rs
---+++ b/src/service/group/v1/chat_member/mod.rs
---@@ -1,5 +1,3 @@
----use crate::core::config::Config;
----
--- //! # 群成员管理服务模块
--- //!
--- //! 本模块包含飞书群聊成员相关的所有管理功能。
---@@ -16,6 +14,8 @@ use crate::core::config::Config;
--- //!
--- //! 🚧 **待实现** - 以上功能模块尚未实现，敬请期待。
--- 
---+use crate::core::config::Config;
---+
--- // 规划中的功能模块（待实现）
--- // pub mod create;
--- // pub mod get;
---diff --git a/src/service/group/v1/mod.rs b/src/service/group/v1/mod.rs
---index b6b8310..a081f2f 100644
------ a/src/service/group/v1/mod.rs
---+++ b/src/service/group/v1/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub mod chat;
---@@ -21,12 +19,12 @@ pub struct V1 {
--- }
--- 
--- impl V1 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            chat: chat::ChatService::new(Arc::clone(&config)),
----            chat_member: chat_member::ChatMemberService::new(Arc::clone(&config)),
----            chat_announcement: chat_announcement::ChatAnnouncementService::new(Arc::clone(&config)),
----            chat_tab: chat_tab::ChatTabService::new(Arc::clone(&config)),
---+            chat: chat::ChatService::new(config.clone()),
---+            chat_member: chat_member::ChatMemberService::new(config.clone()),
---+            chat_announcement: chat_announcement::ChatAnnouncementService::new(config.clone()),
---+            chat_tab: chat_tab::ChatTabService::new(config.clone()),
---             chat_menu_tree: chat_menu_tree::ChatMenuTreeService::new(config),
---         }
---     }
---diff --git a/src/service/helpdesk/v1/agent/mod.rs b/src/service/helpdesk/v1/agent/mod.rs
---index da85cce..72428f0 100644
------ a/src/service/helpdesk/v1/agent/mod.rs
---+++ b/src/service/helpdesk/v1/agent/mod.rs
---@@ -87,10 +87,7 @@ impl AgentService {
---     ) -> SDKResult<BaseResponse<UpdateAgentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -128,10 +125,7 @@ impl AgentService {
---     ) -> SDKResult<BaseResponse<GetAgentEmailResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/agent_schedule/mod.rs b/src/service/helpdesk/v1/agent_schedule/mod.rs
---index 46f9583..d669964 100644
------ a/src/service/helpdesk/v1/agent_schedule/mod.rs
---+++ b/src/service/helpdesk/v1/agent_schedule/mod.rs
---@@ -119,10 +119,7 @@ impl AgentScheduleService {
---     ) -> SDKResult<BaseResponse<CreateAgentScheduleResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -147,10 +144,7 @@ impl AgentScheduleService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -177,10 +171,7 @@ impl AgentScheduleService {
---     ) -> SDKResult<BaseResponse<UpdateAgentScheduleResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -207,10 +198,7 @@ impl AgentScheduleService {
---     ) -> SDKResult<BaseResponse<GetAgentScheduleResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -237,16 +225,13 @@ impl AgentScheduleService {
---     ) -> SDKResult<BaseResponse<ListAgentSchedulesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/agent_skill/mod.rs b/src/service/helpdesk/v1/agent_skill/mod.rs
---index deb6923..1733210 100644
------ a/src/service/helpdesk/v1/agent_skill/mod.rs
---+++ b/src/service/helpdesk/v1/agent_skill/mod.rs
---@@ -89,10 +89,7 @@ impl AgentSkillService {
---     ) -> SDKResult<BaseResponse<CreateAgentSkillResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -116,10 +113,7 @@ impl AgentSkillService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -142,10 +136,7 @@ impl AgentSkillService {
---     ) -> SDKResult<BaseResponse<GetAgentSkillResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -169,16 +160,13 @@ impl AgentSkillService {
---     ) -> SDKResult<BaseResponse<ListAgentSkillsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/agent_skill_rule/mod.rs b/src/service/helpdesk/v1/agent_skill_rule/mod.rs
---index 7fbe5dd..bb2a7da 100644
------ a/src/service/helpdesk/v1/agent_skill_rule/mod.rs
---+++ b/src/service/helpdesk/v1/agent_skill_rule/mod.rs
---@@ -81,10 +81,7 @@ impl AgentSkillRuleService {
---     ) -> SDKResult<BaseResponse<OperatorOptionsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -122,16 +119,13 @@ impl AgentSkillRuleService {
---     ) -> SDKResult<BaseResponse<ListAgentSkillRulesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/category/mod.rs b/src/service/helpdesk/v1/category/mod.rs
---index 8949809..5f0f21a 100644
------ a/src/service/helpdesk/v1/category/mod.rs
---+++ b/src/service/helpdesk/v1/category/mod.rs
---@@ -119,10 +119,7 @@ impl CategoryService {
---     ) -> SDKResult<BaseResponse<CreateCategoryResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -146,10 +143,7 @@ impl CategoryService {
---     ) -> SDKResult<BaseResponse<GetCategoryResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -173,10 +167,7 @@ impl CategoryService {
---     ) -> SDKResult<BaseResponse<UpdateCategoryResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -200,10 +191,7 @@ impl CategoryService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -228,19 +216,16 @@ impl CategoryService {
---     ) -> SDKResult<BaseResponse<ListCategoriesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(parent_id) = parent_id {
----            query_params.insert("parent_id".to_string(), parent_id.to_string());
---+            query_params.insert("parent_id", parent_id.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/event/mod.rs b/src/service/helpdesk/v1/event/mod.rs
---index 6e74513..115f360 100644
------ a/src/service/helpdesk/v1/event/mod.rs
---+++ b/src/service/helpdesk/v1/event/mod.rs
---@@ -77,10 +77,7 @@ impl EventService {
---     ) -> SDKResult<BaseResponse<SubscribeEventResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -118,10 +115,7 @@ impl EventService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/faq/mod.rs b/src/service/helpdesk/v1/faq/mod.rs
---index fdcc6ac..b9514b8 100644
------ a/src/service/helpdesk/v1/faq/mod.rs
---+++ b/src/service/helpdesk/v1/faq/mod.rs
---@@ -160,10 +160,7 @@ impl FaqService {
---     ) -> SDKResult<BaseResponse<CreateFaqResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -201,10 +198,7 @@ impl FaqService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -243,10 +237,7 @@ impl FaqService {
---     ) -> SDKResult<BaseResponse<UpdateFaqResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -284,10 +275,7 @@ impl FaqService {
---     ) -> SDKResult<BaseResponse<GetFaqResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -329,22 +317,19 @@ impl FaqService {
---     ) -> SDKResult<BaseResponse<ListFaqsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(category_id) = category_id {
----            query_params.insert("category_id".to_string(), category_id.to_string());
---+            query_params.insert("category_id", category_id.to_string());
---         }
---         if let Some(status) = status {
----            query_params.insert("status".to_string(), status.to_string());
---+            query_params.insert("status", status.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -383,10 +368,7 @@ impl FaqService {
---     ) -> SDKResult<BaseResponse<BinaryResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -427,21 +409,18 @@ impl FaqService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<SearchFaqsResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("query".to_string(), query.to_string());
---+        query_params.insert("query", query.to_string());
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(category_id) = category_id {
----            query_params.insert("category_id".to_string(), category_id.to_string());
---+            query_params.insert("category_id", category_id.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/notification/mod.rs b/src/service/helpdesk/v1/notification/mod.rs
---index 16cfe8c..6cc8735 100644
------ a/src/service/helpdesk/v1/notification/mod.rs
---+++ b/src/service/helpdesk/v1/notification/mod.rs
---@@ -118,10 +118,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<CreateNotificationResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -146,10 +143,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<UpdateNotificationResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -173,10 +167,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<GetNotificationResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -199,10 +190,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<PreviewNotificationResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -225,10 +213,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -253,10 +238,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -281,10 +263,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -309,10 +288,7 @@ impl NotificationService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/ticket/mod.rs b/src/service/helpdesk/v1/ticket/mod.rs
---index c0cd03e..e18b5cd 100644
------ a/src/service/helpdesk/v1/ticket/mod.rs
---+++ b/src/service/helpdesk/v1/ticket/mod.rs
---@@ -121,10 +121,7 @@ impl TicketService {
---     ) -> SDKResult<BaseResponse<StartServiceResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -148,10 +145,7 @@ impl TicketService {
---     ) -> SDKResult<BaseResponse<GetTicketResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -175,10 +169,7 @@ impl TicketService {
---     ) -> SDKResult<BaseResponse<UpdateTicketResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -203,16 +194,13 @@ impl TicketService {
---     ) -> SDKResult<BaseResponse<ListTicketsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -229,10 +217,12 @@ impl TicketService {
---     /// 规划中的工单相关功能
---     ///
---     /// 以下功能将在未来版本中实现：
----    /// 
---+    ///
---     /// - `ticket_image`: 获取工单内图像
---     /// - `answer_user_query`: 回复用户在工单里的提问
---     /// - `customized_fields`: 获取服务台自定义字段
---     ///
---     /// 🚧 **待实现** - 以上功能尚未实现，敬请期待。
---+    fn _placeholder() { /* TODO: 实现以上功能 */
---+    }
--- }
---diff --git a/src/service/helpdesk/v1/ticket_customized_field/mod.rs b/src/service/helpdesk/v1/ticket_customized_field/mod.rs
---index af61b7e..7db8d58 100644
------ a/src/service/helpdesk/v1/ticket_customized_field/mod.rs
---+++ b/src/service/helpdesk/v1/ticket_customized_field/mod.rs
---@@ -141,10 +141,7 @@ impl TicketCustomizedFieldService {
---     ) -> SDKResult<BaseResponse<CreateTicketCustomizedFieldResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -182,10 +179,7 @@ impl TicketCustomizedFieldService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -224,10 +218,7 @@ impl TicketCustomizedFieldService {
---     ) -> SDKResult<BaseResponse<UpdateTicketCustomizedFieldResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -265,10 +256,7 @@ impl TicketCustomizedFieldService {
---     ) -> SDKResult<BaseResponse<GetTicketCustomizedFieldResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -306,16 +294,13 @@ impl TicketCustomizedFieldService {
---     ) -> SDKResult<BaseResponse<ListTicketCustomizedFieldsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/helpdesk/v1/ticket_message/mod.rs b/src/service/helpdesk/v1/ticket_message/mod.rs
---index 1fa3562..d76d0d6 100644
------ a/src/service/helpdesk/v1/ticket_message/mod.rs
---+++ b/src/service/helpdesk/v1/ticket_message/mod.rs
---@@ -115,10 +115,7 @@ impl TicketMessageService {
---     ) -> SDKResult<BaseResponse<CreateTicketMessageResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -160,16 +157,13 @@ impl TicketMessageService {
---     ) -> SDKResult<BaseResponse<ListTicketMessagesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -209,10 +203,7 @@ impl TicketMessageService {
---     ) -> SDKResult<BaseResponse<CreateGroupMessageResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/hire/attachment/mod.rs b/src/service/hire/attachment/mod.rs
---index 1ba789c..c510256 100644
------ a/src/service/hire/attachment/mod.rs
---+++ b/src/service/hire/attachment/mod.rs
---@@ -382,49 +382,47 @@ impl AttachmentService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(object_type) = request.object_type {
---             api_req
---                 .query_params
----                .insert("object_type".to_string(), object_type);
---+                .insert("object_type", object_type);
---         }
--- 
---         if let Some(object_id) = request.object_id {
---             api_req
---                 .query_params
----                .insert("object_id".to_string(), object_id);
---+                .insert("object_id", object_id);
---         }
--- 
---         if let Some(attachment_type) = request.attachment_type {
---             api_req
---                 .query_params
----                .insert("attachment_type".to_string(), attachment_type);
---+                .insert("attachment_type", attachment_type);
---         }
--- 
---         if let Some(uploader_id) = request.uploader_id {
---             api_req
---                 .query_params
----                .insert("uploader_id".to_string(), uploader_id);
---+                .insert("uploader_id", uploader_id);
---         }
--- 
---         if let Some(created_start_time) = request.created_start_time {
---             api_req
---                 .query_params
----                .insert("created_start_time".to_string(), created_start_time);
---+                .insert("created_start_time", created_start_time);
---         }
--- 
---         if let Some(created_end_time) = request.created_end_time {
---             api_req
---                 .query_params
----                .insert("created_end_time".to_string(), created_end_time);
---+                .insert("created_end_time", created_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -712,19 +710,15 @@ impl AttachmentService {
---         if let Some(object_type) = object_type {
---             api_req
---                 .query_params
----                .insert("object_type".to_string(), object_type);
---+                .insert("object_type", object_type);
---         }
--- 
---         if let Some(start_date) = start_date {
----            api_req
----                .query_params
----                .insert("start_date".to_string(), start_date);
---+            api_req.query_params.insert("start_date", start_date);
---         }
--- 
---         if let Some(end_date) = end_date {
----            api_req
----                .query_params
----                .insert("end_date".to_string(), end_date);
---+            api_req.query_params.insert("end_date", end_date);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/candidate_management/application/mod.rs b/src/service/hire/candidate_management/application/mod.rs
---index ab50b18..c29f0ed 100644
------ a/src/service/hire/candidate_management/application/mod.rs
---+++ b/src/service/hire/candidate_management/application/mod.rs
---@@ -293,43 +293,41 @@ impl ApplicationService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(job_id) = request.job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(stage_id) = request.stage_id {
---             api_req
---                 .query_params
----                .insert("stage_id".to_string(), stage_id);
---+                .insert("stage_id", stage_id);
---         }
--- 
---         if let Some(source) = request.source {
----            api_req.query_params.insert("source".to_string(), source);
---+            api_req.query_params.insert("source", source);
---         }
--- 
---         if let Some(created_start_time) = request.created_start_time {
---             api_req
---                 .query_params
----                .insert("created_start_time".to_string(), created_start_time);
---+                .insert("created_start_time", created_start_time);
---         }
--- 
---         if let Some(created_end_time) = request.created_end_time {
---             api_req
---                 .query_params
----                .insert("created_end_time".to_string(), created_end_time);
---+                .insert("created_end_time", created_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -488,13 +486,11 @@ impl ApplicationService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/candidate_management/interview/mod.rs b/src/service/hire/candidate_management/interview/mod.rs
---index 2c9d9c6..50c2e11 100644
------ a/src/service/hire/candidate_management/interview/mod.rs
---+++ b/src/service/hire/candidate_management/interview/mod.rs
---@@ -433,41 +433,39 @@ impl InterviewService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(application_id) = request.application_id {
---             api_req
---                 .query_params
----                .insert("application_id".to_string(), application_id);
---+                .insert("application_id", application_id);
---         }
--- 
---         if let Some(interviewer_id) = request.interviewer_id {
---             api_req
---                 .query_params
----                .insert("interviewer_id".to_string(), interviewer_id);
---+                .insert("interviewer_id", interviewer_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(start_time_from) = request.start_time_from {
---             api_req
---                 .query_params
----                .insert("start_time_from".to_string(), start_time_from);
---+                .insert("start_time_from", start_time_from);
---         }
--- 
---         if let Some(start_time_to) = request.start_time_to {
---             api_req
---                 .query_params
----                .insert("start_time_to".to_string(), start_time_to);
---+                .insert("start_time_to", start_time_to);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -617,13 +615,11 @@ impl InterviewService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/candidate_management/offer/mod.rs b/src/service/hire/candidate_management/offer/mod.rs
---index b7f1a8e..9babe8c 100644
------ a/src/service/hire/candidate_management/offer/mod.rs
---+++ b/src/service/hire/candidate_management/offer/mod.rs
---@@ -462,45 +462,43 @@ impl OfferService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(talent_id) = request.talent_id {
---             api_req
---                 .query_params
----                .insert("talent_id".to_string(), talent_id);
---+                .insert("talent_id", talent_id);
---         }
--- 
---         if let Some(job_id) = request.job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(approval_status) = request.approval_status {
---             api_req
---                 .query_params
----                .insert("approval_status".to_string(), approval_status);
---+                .insert("approval_status", approval_status);
---         }
--- 
---         if let Some(created_start_time) = request.created_start_time {
---             api_req
---                 .query_params
----                .insert("created_start_time".to_string(), created_start_time);
---+                .insert("created_start_time", created_start_time);
---         }
--- 
---         if let Some(created_end_time) = request.created_end_time {
---             api_req
---                 .query_params
----                .insert("created_end_time".to_string(), created_end_time);
---+                .insert("created_end_time", created_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -744,23 +742,21 @@ impl OfferService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(department) = department {
---             api_req
---                 .query_params
----                .insert("department".to_string(), department);
---+                .insert("department", department);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/candidate_management/talent/mod.rs b/src/service/hire/candidate_management/talent/mod.rs
---index f991fb4..1be7cca 100644
------ a/src/service/hire/candidate_management/talent/mod.rs
---+++ b/src/service/hire/candidate_management/talent/mod.rs
---@@ -302,61 +302,59 @@ impl TalentService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(name_keyword) = request.name_keyword {
---             api_req
---                 .query_params
----                .insert("name_keyword".to_string(), name_keyword);
---+                .insert("name_keyword", name_keyword);
---         }
--- 
---         if let Some(email_keyword) = request.email_keyword {
---             api_req
---                 .query_params
----                .insert("email_keyword".to_string(), email_keyword);
---+                .insert("email_keyword", email_keyword);
---         }
--- 
---         if let Some(phone_keyword) = request.phone_keyword {
---             api_req
---                 .query_params
----                .insert("phone_keyword".to_string(), phone_keyword);
---+                .insert("phone_keyword", phone_keyword);
---         }
--- 
---         if let Some(work_experience) = request.work_experience {
---             api_req
---                 .query_params
----                .insert("work_experience".to_string(), work_experience.to_string());
---+                .insert("work_experience", work_experience.to_string());
---         }
--- 
---         if let Some(education) = request.education {
---             api_req
---                 .query_params
----                .insert("education".to_string(), education);
---+                .insert("education", education);
---         }
--- 
---         if !request.tags.is_empty() {
---             api_req
---                 .query_params
----                .insert("tags".to_string(), request.tags.join(","));
---+                .insert("tags", request.tags.join(","));
---         }
--- 
---         if let Some(created_start_time) = request.created_start_time {
---             api_req
---                 .query_params
----                .insert("created_start_time".to_string(), created_start_time);
---+                .insert("created_start_time", created_start_time);
---         }
--- 
---         if let Some(created_end_time) = request.created_end_time {
---             api_req
---                 .query_params
----                .insert("created_end_time".to_string(), created_end_time);
---+                .insert("created_end_time", created_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -495,13 +493,11 @@ impl TalentService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/candidate_management/talent_pool/mod.rs b/src/service/hire/candidate_management/talent_pool/mod.rs
---index bc12697..0964074 100644
------ a/src/service/hire/candidate_management/talent_pool/mod.rs
---+++ b/src/service/hire/candidate_management/talent_pool/mod.rs
---@@ -347,29 +347,27 @@ impl TalentPoolService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(pool_type) = request.pool_type {
---             api_req
---                 .query_params
----                .insert("pool_type".to_string(), pool_type);
---+                .insert("pool_type", pool_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(owner_id) = request.owner_id {
---             api_req
---                 .query_params
----                .insert("owner_id".to_string(), owner_id);
---+                .insert("owner_id", owner_id);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -439,31 +437,29 @@ impl TalentPoolService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if !request.tags.is_empty() {
---             api_req
---                 .query_params
----                .insert("tags".to_string(), request.tags.join(","));
---+                .insert("tags", request.tags.join(","));
---         }
--- 
---         if let Some(work_experience) = request.work_experience {
---             api_req
---                 .query_params
----                .insert("work_experience".to_string(), work_experience.to_string());
---+                .insert("work_experience", work_experience.to_string());
---         }
--- 
---         if let Some(education) = request.education {
---             api_req
---                 .query_params
----                .insert("education".to_string(), education);
---+                .insert("education", education);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/ecological_docking/background_check/mod.rs b/src/service/hire/ecological_docking/background_check/mod.rs
---index d6316ff..5f07311 100644
------ a/src/service/hire/ecological_docking/background_check/mod.rs
---+++ b/src/service/hire/ecological_docking/background_check/mod.rs
---@@ -351,23 +351,21 @@ impl BackgroundCheckService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(vendor) = request.vendor {
----            api_req.query_params.insert("vendor".to_string(), vendor);
---+            api_req.query_params.insert("vendor", vendor);
---         }
--- 
---         if let Some(enabled) = request.enabled {
---             api_req
---                 .query_params
----                .insert("enabled".to_string(), enabled.to_string());
---+                .insert("enabled", enabled.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -562,35 +560,33 @@ impl BackgroundCheckService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(talent_id) = request.talent_id {
---             api_req
---                 .query_params
----                .insert("talent_id".to_string(), talent_id);
---+                .insert("talent_id", talent_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(created_start_time) = request.created_start_time {
---             api_req
---                 .query_params
----                .insert("created_start_time".to_string(), created_start_time);
---+                .insert("created_start_time", created_start_time);
---         }
--- 
---         if let Some(created_end_time) = request.created_end_time {
---             api_req
---                 .query_params
----                .insert("created_end_time".to_string(), created_end_time);
---+                .insert("created_end_time", created_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/ecological_docking/exam/mod.rs b/src/service/hire/ecological_docking/exam/mod.rs
---index e4d5017..a791a00 100644
------ a/src/service/hire/ecological_docking/exam/mod.rs
---+++ b/src/service/hire/ecological_docking/exam/mod.rs
---@@ -358,37 +358,35 @@ impl ExamService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(paper_type) = request.paper_type {
---             api_req
---                 .query_params
----                .insert("paper_type".to_string(), paper_type);
---+                .insert("paper_type", paper_type);
---         }
--- 
---         if let Some(difficulty_level) = request.difficulty_level {
---             api_req
---                 .query_params
----                .insert("difficulty_level".to_string(), difficulty_level);
---+                .insert("difficulty_level", difficulty_level);
---         }
--- 
---         if let Some(skill_tag) = request.skill_tag {
---             api_req
---                 .query_params
----                .insert("skill_tag".to_string(), skill_tag);
---+                .insert("skill_tag", skill_tag);
---         }
--- 
---         if let Some(enabled) = request.enabled {
---             api_req
---                 .query_params
----                .insert("enabled".to_string(), enabled.to_string());
---+                .insert("enabled", enabled.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -565,41 +563,39 @@ impl ExamService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(talent_id) = request.talent_id {
---             api_req
---                 .query_params
----                .insert("talent_id".to_string(), talent_id);
---+                .insert("talent_id", talent_id);
---         }
--- 
---         if let Some(paper_id) = request.paper_id {
---             api_req
---                 .query_params
----                .insert("paper_id".to_string(), paper_id);
---+                .insert("paper_id", paper_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(start_time_from) = request.start_time_from {
---             api_req
---                 .query_params
----                .insert("start_time_from".to_string(), start_time_from);
---+                .insert("start_time_from", start_time_from);
---         }
--- 
---         if let Some(start_time_to) = request.start_time_to {
---             api_req
---                 .query_params
----                .insert("start_time_to".to_string(), start_time_to);
---+                .insert("start_time_to", start_time_to);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -800,19 +796,15 @@ impl ExamService {
---         if let Some(paper_id) = paper_id {
---             api_req
---                 .query_params
----                .insert("paper_id".to_string(), paper_id);
---+                .insert("paper_id", paper_id);
---         }
--- 
---         if let Some(start_date) = start_date {
----            api_req
----                .query_params
----                .insert("start_date".to_string(), start_date);
---+            api_req.query_params.insert("start_date", start_date);
---         }
--- 
---         if let Some(end_date) = end_date {
----            api_req
----                .query_params
----                .insert("end_date".to_string(), end_date);
---+            api_req.query_params.insert("end_date", end_date);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/get_candidates/agency/mod.rs b/src/service/hire/get_candidates/agency/mod.rs
---index d5cf041..8157196 100644
------ a/src/service/hire/get_candidates/agency/mod.rs
---+++ b/src/service/hire/get_candidates/agency/mod.rs
---@@ -429,35 +429,33 @@ impl AgencyService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(cooperation_mode) = request.cooperation_mode {
---             api_req
---                 .query_params
----                .insert("cooperation_mode".to_string(), cooperation_mode);
---+                .insert("cooperation_mode", cooperation_mode);
---         }
--- 
---         if let Some(specialty) = request.specialty {
---             api_req
---                 .query_params
----                .insert("specialty".to_string(), specialty);
---+                .insert("specialty", specialty);
---         }
--- 
---         if let Some(service_area) = request.service_area {
---             api_req
---                 .query_params
----                .insert("service_area".to_string(), service_area);
---+                .insert("service_area", service_area);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -556,39 +554,37 @@ impl AgencyService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(agency_id) = request.agency_id {
---             api_req
---                 .query_params
----                .insert("agency_id".to_string(), agency_id);
---+                .insert("agency_id", agency_id);
---         }
--- 
---         if let Some(job_id) = request.job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(recommendation_start_time) = request.recommendation_start_time {
---             api_req.query_params.insert(
----                "recommendation_start_time".to_string(),
---+                "recommendation_start_time",
---                 recommendation_start_time,
---             );
---         }
--- 
---         if let Some(recommendation_end_time) = request.recommendation_end_time {
---             api_req.query_params.insert(
----                "recommendation_end_time".to_string(),
---+                "recommendation_end_time",
---                 recommendation_end_time,
---             );
---         }
---@@ -676,13 +672,11 @@ impl AgencyService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/get_candidates/external_system/mod.rs b/src/service/hire/get_candidates/external_system/mod.rs
---index 0f3fc58..5561aef 100644
------ a/src/service/hire/get_candidates/external_system/mod.rs
---+++ b/src/service/hire/get_candidates/external_system/mod.rs
---@@ -387,25 +387,23 @@ impl ExternalSystemService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(system_type) = system_type {
---             api_req
---                 .query_params
----                .insert("system_type".to_string(), system_type);
---+                .insert("system_type", system_type);
---         }
--- 
---         if let Some(enabled) = enabled {
---             api_req
---                 .query_params
----                .insert("enabled".to_string(), enabled.to_string());
---+                .insert("enabled", enabled.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -520,29 +518,27 @@ impl ExternalSystemService {
---         if let Some(system_config_id) = system_config_id {
---             api_req
---                 .query_params
----                .insert("system_config_id".to_string(), system_config_id);
---+                .insert("system_config_id", system_config_id);
---         }
--- 
---         if let Some(sync_type) = sync_type {
---             api_req
---                 .query_params
----                .insert("sync_type".to_string(), sync_type);
---+                .insert("sync_type", sync_type);
---         }
--- 
---         if let Some(status) = status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -666,29 +662,27 @@ impl ExternalSystemService {
---         if let Some(system_config_id) = system_config_id {
---             api_req
---                 .query_params
----                .insert("system_config_id".to_string(), system_config_id);
---+                .insert("system_config_id", system_config_id);
---         }
--- 
---         if let Some(sync_status) = sync_status {
---             api_req
---                 .query_params
----                .insert("sync_status".to_string(), sync_status);
---+                .insert("sync_status", sync_status);
---         }
--- 
---         if let Some(skills) = skills {
----            api_req.query_params.insert("skills".to_string(), skills);
---+            api_req.query_params.insert("skills", skills);
---         }
--- 
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/get_candidates/referral/mod.rs b/src/service/hire/get_candidates/referral/mod.rs
---index 50094cd..0281d56 100644
------ a/src/service/hire/get_candidates/referral/mod.rs
---+++ b/src/service/hire/get_candidates/referral/mod.rs
---@@ -371,45 +371,43 @@ impl ReferralService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(referrer_id) = request.referrer_id {
---             api_req
---                 .query_params
----                .insert("referrer_id".to_string(), referrer_id);
---+                .insert("referrer_id", referrer_id);
---         }
--- 
---         if let Some(job_id) = request.job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(reward_status) = request.reward_status {
---             api_req
---                 .query_params
----                .insert("reward_status".to_string(), reward_status);
---+                .insert("reward_status", reward_status);
---         }
--- 
---         if let Some(referral_start_time) = request.referral_start_time {
---             api_req
---                 .query_params
----                .insert("referral_start_time".to_string(), referral_start_time);
---+                .insert("referral_start_time", referral_start_time);
---         }
--- 
---         if let Some(referral_end_time) = request.referral_end_time {
---             api_req
---                 .query_params
----                .insert("referral_end_time".to_string(), referral_end_time);
---+                .insert("referral_end_time", referral_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -645,13 +643,11 @@ impl ReferralService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/get_candidates/website/mod.rs b/src/service/hire/get_candidates/website/mod.rs
---index 9a68aca..b1edc69 100644
------ a/src/service/hire/get_candidates/website/mod.rs
---+++ b/src/service/hire/get_candidates/website/mod.rs
---@@ -308,31 +308,29 @@ impl WebsiteService {
---         if let Some(page_size) = page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(publish_status) = publish_status {
---             api_req
---                 .query_params
----                .insert("publish_status".to_string(), publish_status);
---+                .insert("publish_status", publish_status);
---         }
--- 
---         if let Some(job_type) = job_type {
---             api_req
---                 .query_params
----                .insert("job_type".to_string(), job_type);
---+                .insert("job_type", job_type);
---         }
--- 
---         if let Some(location) = location {
---             api_req
---                 .query_params
----                .insert("location".to_string(), location);
---+                .insert("location", location);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -490,45 +488,43 @@ impl WebsiteService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(job_id) = request.job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(candidate_name) = request.candidate_name {
---             api_req
---                 .query_params
----                .insert("candidate_name".to_string(), candidate_name);
---+                .insert("candidate_name", candidate_name);
---         }
--- 
---         if let Some(candidate_email) = request.candidate_email {
---             api_req
---                 .query_params
----                .insert("candidate_email".to_string(), candidate_email);
---+                .insert("candidate_email", candidate_email);
---         }
--- 
---         if let Some(apply_start_time) = request.apply_start_time {
---             api_req
---                 .query_params
----                .insert("apply_start_time".to_string(), apply_start_time);
---+                .insert("apply_start_time", apply_start_time);
---         }
--- 
---         if let Some(apply_end_time) = request.apply_end_time {
---             api_req
---                 .query_params
----                .insert("apply_end_time".to_string(), apply_end_time);
---+                .insert("apply_end_time", apply_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -728,19 +724,15 @@ impl WebsiteService {
--- 
---         // 添加查询参数
---         if let Some(job_id) = job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(start_date) = start_date {
----            api_req
----                .query_params
----                .insert("start_date".to_string(), start_date);
---+            api_req.query_params.insert("start_date", start_date);
---         }
--- 
---         if let Some(end_date) = end_date {
----            api_req
----                .query_params
----                .insert("end_date".to_string(), end_date);
---+            api_req.query_params.insert("end_date", end_date);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/mod.rs b/src/service/hire/mod.rs
---index a080f06..1533e43 100644
------ a/src/service/hire/mod.rs
---+++ b/src/service/hire/mod.rs
---@@ -94,8 +94,6 @@ pub mod referral_account;
--- /// 招聘服务 v1 版本
--- pub mod v1;
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- use attachment::AttachmentService;
---@@ -166,13 +164,13 @@ impl HireService {
---     ///
---     /// # 返回值
---     /// 配置完成的招聘服务实例，包含所有子服务模块
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            recruitment_config: RecruitmentConfigService::new(Arc::clone(&config)),
----            get_candidates: GetCandidatesService::new(Arc::clone(&config)),
----            candidate_management: CandidateManagementService::new(Arc::clone(&config)),
----            ecological_docking: EcologicalDockingService::new(Arc::clone(&config)),
----            referral_account: ReferralAccountService::new(Arc::clone(&config)),
---+            recruitment_config: RecruitmentConfigService::new(config.clone()),
---+            get_candidates: GetCandidatesService::new(config.clone()),
---+            candidate_management: CandidateManagementService::new(config.clone()),
---+            ecological_docking: EcologicalDockingService::new(config.clone()),
---+            referral_account: ReferralAccountService::new(config.clone()),
---             attachment: AttachmentService::new(config),
---         }
---     }
---diff --git a/src/service/hire/recruitment_config/application.rs b/src/service/hire/recruitment_config/application.rs
---index 3644be1..fa41a30 100644
------ a/src/service/hire/recruitment_config/application.rs
---+++ b/src/service/hire/recruitment_config/application.rs
---@@ -84,19 +84,17 @@ impl ApplicationConfigService {
---         if let Some(tag_type) = request.tag_type {
---             api_req
---                 .query_params
----                .insert("tag_type".to_string(), format!("{tag_type:?}"));
---+                .insert("tag_type", format!("{tag_type:?}"));
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -131,19 +129,17 @@ impl ApplicationConfigService {
---         if let Some(form_type) = request.form_type {
---             api_req
---                 .query_params
----                .insert("form_type".to_string(), format!("{form_type:?}"));
---+                .insert("form_type", format!("{form_type:?}"));
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/auth/mod.rs b/src/service/hire/recruitment_config/auth/mod.rs
---index 1fdefcb..81b1803 100644
------ a/src/service/hire/recruitment_config/auth/mod.rs
---+++ b/src/service/hire/recruitment_config/auth/mod.rs
---@@ -136,13 +136,11 @@ impl AuthService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/interview_settings/mod.rs b/src/service/hire/recruitment_config/interview_settings/mod.rs
---index 2cc05af..04fd57c 100644
------ a/src/service/hire/recruitment_config/interview_settings/mod.rs
---+++ b/src/service/hire/recruitment_config/interview_settings/mod.rs
---@@ -387,23 +387,21 @@ impl InterviewSettingsService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(interview_type) = request.interview_type {
---             api_req
---                 .query_params
----                .insert("interview_type".to_string(), interview_type);
---+                .insert("interview_type", interview_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/job/mod.rs b/src/service/hire/recruitment_config/job/mod.rs
---index b60f69c..f3b0f66 100644
------ a/src/service/hire/recruitment_config/job/mod.rs
---+++ b/src/service/hire/recruitment_config/job/mod.rs
---@@ -291,41 +291,37 @@ impl JobService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(department_id) = request.department_id {
----            api_req
----                .query_params
----                .insert("department_id".to_string(), department_id);
---+            api_req.query_params.insert("department_id", department_id);
---         }
--- 
---         if let Some(job_type) = request.job_type {
---             api_req
---                 .query_params
----                .insert("job_type".to_string(), job_type);
---+                .insert("job_type", job_type);
---         }
--- 
---         if let Some(created_start_time) = request.created_start_time {
---             api_req
---                 .query_params
----                .insert("created_start_time".to_string(), created_start_time);
---+                .insert("created_start_time", created_start_time);
---         }
--- 
---         if let Some(created_end_time) = request.created_end_time {
---             api_req
---                 .query_params
----                .insert("created_end_time".to_string(), created_end_time);
---+                .insert("created_end_time", created_end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/job_process/mod.rs b/src/service/hire/recruitment_config/job_process/mod.rs
---index 15bd937..2eff467 100644
------ a/src/service/hire/recruitment_config/job_process/mod.rs
---+++ b/src/service/hire/recruitment_config/job_process/mod.rs
---@@ -363,23 +363,21 @@ impl JobProcessService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(process_type) = request.process_type {
---             api_req
---                 .query_params
----                .insert("process_type".to_string(), process_type);
---+                .insert("process_type", process_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/job_requirement/mod.rs b/src/service/hire/recruitment_config/job_requirement/mod.rs
---index da6b262..f9c251e 100644
------ a/src/service/hire/recruitment_config/job_requirement/mod.rs
---+++ b/src/service/hire/recruitment_config/job_requirement/mod.rs
---@@ -241,21 +241,19 @@ impl JobRequirementService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(job_id) = request.job_id {
----            api_req.query_params.insert("job_id".to_string(), job_id);
---+            api_req.query_params.insert("job_id", job_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/location/mod.rs b/src/service/hire/recruitment_config/location/mod.rs
---index ab77d92..e2829b7 100644
------ a/src/service/hire/recruitment_config/location/mod.rs
---+++ b/src/service/hire/recruitment_config/location/mod.rs
---@@ -83,25 +83,21 @@ impl LocationService {
---         if let Some(location_type) = request.location_type {
---             api_req
---                 .query_params
----                .insert("location_type".to_string(), location_type);
---+                .insert("location_type", location_type);
---         }
--- 
---         if let Some(parent_id) = request.parent_id {
----            api_req
----                .query_params
----                .insert("parent_id".to_string(), parent_id);
---+            api_req.query_params.insert("parent_id", parent_id);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/offer_settings/mod.rs b/src/service/hire/recruitment_config/offer_settings/mod.rs
---index bdbb3ad..bfa067c 100644
------ a/src/service/hire/recruitment_config/offer_settings/mod.rs
---+++ b/src/service/hire/recruitment_config/offer_settings/mod.rs
---@@ -418,23 +418,21 @@ impl OfferSettingsService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(job_type) = request.job_type {
---             api_req
---                 .query_params
----                .insert("job_type".to_string(), job_type);
---+                .insert("job_type", job_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/recruitment_config/subject/mod.rs b/src/service/hire/recruitment_config/subject/mod.rs
---index b78b90c..f4740a3 100644
------ a/src/service/hire/recruitment_config/subject/mod.rs
---+++ b/src/service/hire/recruitment_config/subject/mod.rs
---@@ -322,29 +322,27 @@ impl SubjectService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(subject_type) = request.subject_type {
---             api_req
---                 .query_params
----                .insert("subject_type".to_string(), subject_type);
---+                .insert("subject_type", subject_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(owner_id) = request.owner_id {
---             api_req
---                 .query_params
----                .insert("owner_id".to_string(), owner_id);
---+                .insert("owner_id", owner_id);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/hire/referral_account/mod.rs b/src/service/hire/referral_account/mod.rs
---index 1cc4a04..3c317ac 100644
------ a/src/service/hire/referral_account/mod.rs
---+++ b/src/service/hire/referral_account/mod.rs
---@@ -7,7 +7,9 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---+        query_params::QueryParams,
---         req_option::RequestOption,
---         SDKResult,
---     },
---@@ -322,7 +324,7 @@ impl ReferralAccountService {
---     ) -> SDKResult<BaseResponse<ReferralAccountOperationResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/hire/v1/referral_accounts".to_string(),
---+            api_path: Endpoints::HIRE_REFERRAL_ACCOUNTS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -380,7 +382,7 @@ impl ReferralAccountService {
---     ) -> SDKResult<BaseResponse<ReferralAccountListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/hire/v1/referral_accounts".to_string(),
---+            api_path: Endpoints::HIRE_REFERRAL_ACCOUNTS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -390,21 +392,21 @@ impl ReferralAccountService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert(QueryParams::STATUS, status);
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -508,7 +510,7 @@ impl ReferralAccountService {
---     ) -> SDKResult<BaseResponse<IncomeRecordListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/hire/v1/referral_income_records".to_string(),
---+            api_path: Endpoints::HIRE_REFERRAL_INCOME_RECORDS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -518,35 +520,33 @@ impl ReferralAccountService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         if let Some(income_type) = request.income_type {
---             api_req
---                 .query_params
----                .insert("income_type".to_string(), income_type);
---+                .insert(QueryParams::INCOME_TYPE, income_type);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time);
---+                .insert(QueryParams::START_TIME, start_time);
---         }
--- 
---         if let Some(end_time) = request.end_time {
----            api_req
----                .query_params
----                .insert("end_time".to_string(), end_time);
---+            api_req.query_params.insert(QueryParams::END_TIME, end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -604,7 +604,7 @@ impl ReferralAccountService {
---     ) -> SDKResult<BaseResponse<ReferralAccountOperationResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/hire/v1/referral_withdrawals".to_string(),
---+            api_path: Endpoints::HIRE_REFERRAL_WITHDRAWALS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: serde_json::to_vec(&request).unwrap_or_default(),
---             ..Default::default()
---@@ -666,7 +666,7 @@ impl ReferralAccountService {
---     ) -> SDKResult<BaseResponse<WithdrawalRecordListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/hire/v1/referral_withdrawals".to_string(),
---+            api_path: Endpoints::HIRE_REFERRAL_WITHDRAWALS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -676,33 +676,31 @@ impl ReferralAccountService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert(QueryParams::STATUS, status);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time);
---+                .insert(QueryParams::START_TIME, start_time);
---         }
--- 
---         if let Some(end_time) = request.end_time {
----            api_req
----                .query_params
----                .insert("end_time".to_string(), end_time);
---+            api_req.query_params.insert(QueryParams::END_TIME, end_time);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -868,7 +866,7 @@ impl ReferralAccountService {
---     ) -> SDKResult<BaseResponse<serde_json::Value>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/hire/v1/referral_statistics".to_string(),
---+            api_path: Endpoints::HIRE_REFERRAL_STATISTICS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant],
---             body: vec![],
---             ..Default::default()
---@@ -878,13 +876,11 @@ impl ReferralAccountService {
---         if let Some(start_date) = start_date {
---             api_req
---                 .query_params
----                .insert("start_date".to_string(), start_date);
---+                .insert(QueryParams::START_DATE, start_date);
---         }
--- 
---         if let Some(end_date) = end_date {
----            api_req
----                .query_params
----                .insert("end_date".to_string(), end_date);
---+            api_req.query_params.insert(QueryParams::END_DATE, end_date);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/im/mod.rs b/src/service/im/mod.rs
---index 91356db..2efb58c 100644
------ a/src/service/im/mod.rs
---+++ b/src/service/im/mod.rs
---@@ -40,8 +40,6 @@
--- //! // let result = client.im.v1.message.create(request, None).await?;
--- //! ```
--- 
----use std::sync::Arc;
----
--- use crate::{
---     core::config::Config,
---     service::im::{v1::V1, v2::V2},
---@@ -68,10 +66,10 @@ impl ImService {
---     ///
---     /// # 参数
---     /// - `config`: 客户端配置
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            v1: V1::new((*config).clone()),
----            v2: V2::new((*config).clone()),
---+            v1: V1::new(config.clone()),
---+            v2: V2::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/im/v1.rs b/src/service/im/v1.rs
---index 6195ec4..d3bb6a6 100644
------ a/src/service/im/v1.rs
---+++ b/src/service/im/v1.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::{
---     core::config::Config,
---     service::im::v1::{
---@@ -45,24 +43,24 @@ pub struct V1 {
--- }
--- 
--- impl V1 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
---             // 现有服务
---             chats: ChatsService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
---             message: MessageService {
----                config: Arc::clone(&config),
---+                config: config.clone(),
---             },
--- 
---             // 新增服务
----            batch_message: BatchMessageService::new(Arc::clone(&config)),
----            image: ImageService::new(Arc::clone(&config)),
----            file: FileService::new(Arc::clone(&config)),
----            message_reaction: MessageReactionService::new(Arc::clone(&config)),
----            pin: PinService::new(Arc::clone(&config)),
----            message_card: MessageCardService::new(Arc::clone(&config)),
----            buzz_messages: BuzzMessagesService::new(Arc::clone(&config)),
---+            batch_message: BatchMessageService::new(config.clone()),
---+            image: ImageService::new(config.clone()),
---+            file: FileService::new(config.clone()),
---+            message_reaction: MessageReactionService::new(config.clone()),
---+            pin: PinService::new(config.clone()),
---+            message_card: MessageCardService::new(config.clone()),
---+            buzz_messages: BuzzMessagesService::new(config.clone()),
---             url_preview: UrlPreviewService::new(config),
---         }
---     }
---diff --git a/src/service/im/v1/batch_message/mod.rs b/src/service/im/v1/batch_message/mod.rs
---index e72068b..28fd697 100644
------ a/src/service/im/v1/batch_message/mod.rs
---+++ b/src/service/im/v1/batch_message/mod.rs
---@@ -125,7 +125,7 @@ impl BatchMessageService {
---             api_path: "/open-apis/im/v1/batch_messages".to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params: HashMap::from([(
----                "receive_id_type".to_string(),
---+                "receive_id_type",
---                 receive_id_type.as_str().to_string(),
---             )]),
---             body: serde_json::to_vec(&request)?,
---@@ -184,16 +184,13 @@ impl BatchMessageService {
---     ) -> SDKResult<GetBatchReadUserResponse> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/im/v1/buzz_messages/mod.rs b/src/service/im/v1/buzz_messages/mod.rs
---index 3720c52..16d71d8 100644
------ a/src/service/im/v1/buzz_messages/mod.rs
---+++ b/src/service/im/v1/buzz_messages/mod.rs
---@@ -72,10 +72,7 @@ impl BuzzMessagesService {
---             http_method: Method::PATCH,
---             api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_app"),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
----            query_params: HashMap::from([(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            )]),
---+            query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---         };
---@@ -97,10 +94,7 @@ impl BuzzMessagesService {
---             http_method: Method::PATCH,
---             api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_sms"),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
----            query_params: HashMap::from([(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            )]),
---+            query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---         };
---@@ -122,10 +116,7 @@ impl BuzzMessagesService {
---             http_method: Method::PATCH,
---             api_path: format!("/open-apis/im/v1/messages/{message_id}/urgent_phone"),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
----            query_params: HashMap::from([(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            )]),
---+            query_params: HashMap::from([("user_id_type", user_id_type.as_str().to_string())]),
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---         };
---diff --git a/src/service/im/v1/chats.rs b/src/service/im/v1/chats.rs
---index ccd1bea..fac7a89 100644
------ a/src/service/im/v1/chats.rs
---+++ b/src/service/im/v1/chats.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use reqwest::Method;
--- use serde::{Deserialize, Serialize};
--- 
---@@ -15,7 +13,7 @@ use crate::core::{
--- };
--- 
--- pub struct ChatsService {
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl ChatsService {
---@@ -74,7 +72,7 @@ impl ListChatIterator<'_> {
---                     self.request
---                         .api_req
---                         .query_params
----                        .insert("page_token".to_string(), data.page_token.to_string());
---+                        .insert("page_token", data.page_token.to_string());
---                     Some(data.items)
---                 } else if data.items.is_empty() {
---                     None
---@@ -109,7 +107,7 @@ impl ListChatRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("user_id_type".to_string(), user_id_type.to_string());
---+            .insert("user_id_type", user_id_type.to_string());
---         self
---     }
--- 
---@@ -118,7 +116,7 @@ impl ListChatRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("sort_type".to_string(), sort_type.to_string());
---+            .insert("sort_type", sort_type.to_string());
---         self
---     }
--- 
---@@ -130,7 +128,7 @@ impl ListChatRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("page_token".to_string(), page_token.to_string());
---+            .insert("page_token", page_token.to_string());
---         self
---     }
--- 
---@@ -139,7 +137,7 @@ impl ListChatRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("page_size".to_string(), page_size.to_string());
---+            .insert("page_size", page_size.to_string());
---         self
---     }
--- 
---diff --git a/src/service/im/v1/file/mod.rs b/src/service/im/v1/file/mod.rs
---index 8cf5f5d..4c76789 100644
------ a/src/service/im/v1/file/mod.rs
---+++ b/src/service/im/v1/file/mod.rs
---@@ -62,8 +62,8 @@ impl FileService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<CreateFileResponse> {
---         let mut query_params = HashMap::new();
----        query_params.insert("file_type".to_string(), file_type.to_string());
----        query_params.insert("file_name".to_string(), file_name.to_string());
---+        query_params.insert("file_type", file_type.to_string());
---+        query_params.insert("file_name", file_name.to_string());
--- 
---         let api_req = ApiRequest {
---             http_method: Method::POST,
---diff --git a/src/service/im/v1/image/mod.rs b/src/service/im/v1/image/mod.rs
---index cb5630b..1b5228d 100644
------ a/src/service/im/v1/image/mod.rs
---+++ b/src/service/im/v1/image/mod.rs
---@@ -62,7 +62,7 @@ impl ImageService {
---             http_method: Method::POST,
---             api_path: "/open-apis/im/v1/images".to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
----            query_params: HashMap::from([("image_type".to_string(), image_type.to_string())]),
---+            query_params: HashMap::from([("image_type", image_type.to_string())]),
---             body: image_data,
---             ..Default::default()
---         };
---diff --git a/src/service/im/v1/message/builders.rs b/src/service/im/v1/message/builders.rs
---index 0d28cbe..985fec2 100644
------ a/src/service/im/v1/message/builders.rs
---+++ b/src/service/im/v1/message/builders.rs
---@@ -40,7 +40,7 @@ impl CreateMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("receive_id".to_string(), receive_id.to_string());
---+            .insert("receive_id", receive_id.to_string());
---         self
---     }
--- 
---@@ -52,7 +52,7 @@ impl CreateMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("msg_type".to_string(), msg_type.to_string());
---+            .insert("msg_type", msg_type.to_string());
---         self
---     }
--- 
---@@ -64,7 +64,7 @@ impl CreateMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("content".to_string(), content.to_string());
---+            .insert("content", content.to_string());
---         self
---     }
--- 
---@@ -81,7 +81,7 @@ impl CreateMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("receive_id_type".to_string(), receive_id_type.to_string());
---+            .insert("receive_id_type", receive_id_type.to_string());
---         self
---     }
--- 
---@@ -268,7 +268,7 @@ impl UpdateMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("content".to_string(), content.to_string());
---+            .insert("content", content.to_string());
---         self
---     }
--- 
---@@ -284,16 +284,12 @@ impl CreateMessageRequest {
---         let mut api_req = ApiRequest::default();
---         api_req
---             .query_params
----            .insert("receive_id".to_string(), receive_id.to_string());
---+            .insert("receive_id", receive_id.to_string());
---+        api_req.query_params.insert("msg_type", msg.msg_type());
---+        api_req.query_params.insert("content", msg.content());
---         api_req
---             .query_params
----            .insert("msg_type".to_string(), msg.msg_type());
----        api_req
----            .query_params
----            .insert("content".to_string(), msg.content());
----        api_req
----            .query_params
----            .insert("receive_id_type".to_string(), receive_id_type.to_string());
---+            .insert("receive_id_type", receive_id_type.to_string());
--- 
---         Self { api_req }
---     }
---diff --git a/src/service/im/v1/message/list.rs b/src/service/im/v1/message/list.rs
---index b4177f2..166358e 100644
------ a/src/service/im/v1/message/list.rs
---+++ b/src/service/im/v1/message/list.rs
---@@ -39,10 +39,10 @@ impl ListMessageRequestBuilder {
---     ///
---     /// 示例值：chat
---     pub fn container_id_type(mut self, container_id_type: impl ToString) -> Self {
----        self.request.api_req.query_params.insert(
----            "container_id_type".to_string(),
----            container_id_type.to_string(),
----        );
---+        self.request
---+            .api_req
---+            .query_params
---+            .insert("container_id_type", container_id_type.to_string());
---         self
---     }
--- 
---@@ -53,7 +53,7 @@ impl ListMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("container_id".to_string(), container_id.to_string());
---+            .insert("container_id", container_id.to_string());
---         self
---     }
--- 
---@@ -64,7 +64,7 @@ impl ListMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("start_time".to_string(), start_time.to_string());
---+            .insert("start_time", start_time.to_string());
---         self
---     }
--- 
---@@ -75,7 +75,7 @@ impl ListMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("end_time".to_string(), end_time.to_string());
---+            .insert("end_time", end_time.to_string());
---         self
---     }
--- 
---@@ -86,7 +86,7 @@ impl ListMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("sort_type".to_string(), sort_type.to_string());
---+            .insert("sort_type", sort_type.to_string());
---         self
---     }
--- 
---@@ -96,7 +96,7 @@ impl ListMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("page_token".to_string(), page_token.to_string());
---+            .insert("page_token", page_token.to_string());
---         self
---     }
--- 
---@@ -122,7 +122,7 @@ impl ListMessageRequestBuilder {
---         self.request
---             .api_req
---             .query_params
----            .insert("page_size".to_string(), page_size.to_string());
---+            .insert("page_size", page_size.to_string());
---         self
---     }
--- 
---diff --git a/src/service/im/v1/message/types.rs b/src/service/im/v1/message/types.rs
---index f3bd8e5..db20f3d 100644
------ a/src/service/im/v1/message/types.rs
---+++ b/src/service/im/v1/message/types.rs
---@@ -189,7 +189,7 @@ impl<'a> ListMessageIterator<'a> {
---     // FUTURE: 实现异步迭代器或流式处理分页结果
---     // 标准 Iterator trait 不支持异步，可考虑：
---     // 1. 使用 futures::Stream trait
----    // 2. 使用 async-stream crate 
---+    // 2. 使用 async-stream crate
---     // 3. 实现自定义的 AsyncIterator trait
--- }
--- 
---diff --git a/src/service/im/v1/message_reaction/mod.rs b/src/service/im/v1/message_reaction/mod.rs
---index 4b413c2..bcc81ac 100644
------ a/src/service/im/v1/message_reaction/mod.rs
---+++ b/src/service/im/v1/message_reaction/mod.rs
---@@ -59,10 +59,7 @@ impl MessageReactionService {
---     ) -> SDKResult<EmptyResponse> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -92,16 +89,13 @@ impl MessageReactionService {
---     ) -> SDKResult<ListReactionResponse> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---@@ -127,10 +121,7 @@ impl MessageReactionService {
---     ) -> SDKResult<EmptyResponse> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/im/v1/message_service.rs b/src/service/im/v1/message_service.rs
---index d43a12b..a2ebdb5 100644
------ a/src/service/im/v1/message_service.rs
---+++ b/src/service/im/v1/message_service.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- /// Message service
---@@ -10,12 +8,12 @@ use crate::core::config::Config;
--- #[derive(Debug, Clone)]
--- pub struct MessageService {
---     /// Service configuration
----    pub config: Arc<Config>,
---+    pub config: Config,
--- }
--- 
--- impl MessageService {
---     /// Create a new message service instance
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self { config }
---     }
--- }
---diff --git a/src/service/im/v1/pin/mod.rs b/src/service/im/v1/pin/mod.rs
---index 38e9167..af13a79 100644
------ a/src/service/im/v1/pin/mod.rs
---+++ b/src/service/im/v1/pin/mod.rs
---@@ -79,12 +79,9 @@ impl PinService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<CreatePinResponse> {
---         let mut query_params = HashMap::new();
----        query_params.insert("message_id".to_string(), message_id.to_string());
---+        query_params.insert("message_id", message_id.to_string());
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -108,10 +105,7 @@ impl PinService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<EmptyResponse> {
---         let query_params = if let Some(user_id_type) = user_id_type {
----            HashMap::from([(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            )])
---+            HashMap::from([("user_id_type", user_id_type.as_str().to_string())])
---         } else {
---             HashMap::new()
---         };
---@@ -139,18 +133,15 @@ impl PinService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<ListPinResponse> {
---         let mut query_params = HashMap::new();
----        query_params.insert("chat_id".to_string(), chat_id.to_string());
---+        query_params.insert("chat_id", chat_id.to_string());
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/im/v2/groups_bots/mod.rs b/src/service/im/v2/groups_bots/mod.rs
---index 80f6844..d1bd891 100644
------ a/src/service/im/v2/groups_bots/mod.rs
---+++ b/src/service/im/v2/groups_bots/mod.rs
---@@ -122,7 +122,7 @@ impl GroupsBotsService {
---             api_path: "/open-apis/im/v2/groups-bots/bot_time_sentive".to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params: HashMap::from([(
----                "receive_id_type".to_string(),
---+                "receive_id_type",
---                 receive_id_type.as_str().to_string(),
---             )]),
---             body: serde_json::to_vec(&request)?,
---@@ -162,7 +162,7 @@ impl GroupsBotsService {
---             api_path: "/open-apis/im/v2/groups-bots/patch".to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params: HashMap::from([(
----                "receive_id_type".to_string(),
---+                "receive_id_type",
---                 receive_id_type.as_str().to_string(),
---             )]),
---             body: serde_json::to_vec(&request)?,
---diff --git a/src/service/im/v2/mod.rs b/src/service/im/v2/mod.rs
---index 19ddf10..f2a6323 100644
------ a/src/service/im/v2/mod.rs
---+++ b/src/service/im/v2/mod.rs
---@@ -1,5 +1,3 @@
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- pub mod app_feed_card;
---@@ -18,9 +16,9 @@ pub struct V2 {
--- }
--- 
--- impl V2 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            app_feed_card: AppFeedCardService::new(Arc::clone(&config)),
---+            app_feed_card: AppFeedCardService::new(config.clone()),
---             groups_bots: GroupsBotsService::new(config),
---         }
---     }
---diff --git a/src/service/lingo/classification/mod.rs b/src/service/lingo/classification/mod.rs
---index aeea958..b42327d 100644
------ a/src/service/lingo/classification/mod.rs
---+++ b/src/service/lingo/classification/mod.rs
---@@ -52,19 +52,17 @@ impl ClassificationService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(repo_id) = request.repo_id {
----            api_req.query_params.insert("repo_id".to_string(), repo_id);
---+            api_req.query_params.insert("repo_id", repo_id);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/lingo/entity/mod.rs b/src/service/lingo/entity/mod.rs
---index ad61cf5..5aab4ae 100644
------ a/src/service/lingo/entity/mod.rs
---+++ b/src/service/lingo/entity/mod.rs
---@@ -169,29 +169,27 @@ impl EntityService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(repo_id) = request.repo_id {
----            api_req.query_params.insert("repo_id".to_string(), repo_id);
---+            api_req.query_params.insert("repo_id", repo_id);
---         }
--- 
---         if let Some(classification_id) = request.classification_id {
---             api_req
---                 .query_params
----                .insert("classification_id".to_string(), classification_id);
---+                .insert("classification_id", classification_id);
---         }
--- 
---         if let Some(creator) = request.creator {
----            api_req.query_params.insert("creator".to_string(), creator);
---+            api_req.query_params.insert("creator", creator);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/lingo/repo/mod.rs b/src/service/lingo/repo/mod.rs
---index e602ebd..b9817cf 100644
------ a/src/service/lingo/repo/mod.rs
---+++ b/src/service/lingo/repo/mod.rs
---@@ -52,15 +52,13 @@ impl RepoService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/mail/v1/attachment/mod.rs b/src/service/mail/v1/attachment/mod.rs
---index c6ff332..80938e0 100644
------ a/src/service/mail/v1/attachment/mod.rs
---+++ b/src/service/mail/v1/attachment/mod.rs
---@@ -68,10 +68,7 @@ impl AttachmentService {
---     ) -> SDKResult<BaseResponse<GetAttachmentDownloadUrlResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/contact/mod.rs b/src/service/mail/v1/contact/mod.rs
---index 14a5899..110cc63 100644
------ a/src/service/mail/v1/contact/mod.rs
---+++ b/src/service/mail/v1/contact/mod.rs
---@@ -106,10 +106,7 @@ impl ContactService {
---     ) -> SDKResult<BaseResponse<CreateContactResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -134,10 +131,7 @@ impl ContactService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -164,10 +158,7 @@ impl ContactService {
---     ) -> SDKResult<BaseResponse<UpdateContactResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -195,16 +186,13 @@ impl ContactService {
---     ) -> SDKResult<BaseResponse<ListContactsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/event/mod.rs b/src/service/mail/v1/event/mod.rs
---index 1b779d0..f7e2ae0 100644
------ a/src/service/mail/v1/event/mod.rs
---+++ b/src/service/mail/v1/event/mod.rs
---@@ -70,10 +70,7 @@ impl EventService {
---     ) -> SDKResult<BaseResponse<SubscribeEventResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -99,10 +96,7 @@ impl EventService {
---     ) -> SDKResult<BaseResponse<GetSubscriptionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -127,10 +121,7 @@ impl EventService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/folder/mod.rs b/src/service/mail/v1/folder/mod.rs
---index 11e520f..3b352e8 100644
------ a/src/service/mail/v1/folder/mod.rs
---+++ b/src/service/mail/v1/folder/mod.rs
---@@ -116,10 +116,7 @@ impl FolderService {
---     ) -> SDKResult<BaseResponse<CreateFolderResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -159,10 +156,7 @@ impl FolderService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -205,10 +199,7 @@ impl FolderService {
---     ) -> SDKResult<BaseResponse<UpdateFolderResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -252,16 +243,13 @@ impl FolderService {
---     ) -> SDKResult<BaseResponse<ListFoldersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/mail_group/mod.rs b/src/service/mail/v1/mail_group/mod.rs
---index fe306d3..321e2dd 100644
------ a/src/service/mail/v1/mail_group/mod.rs
---+++ b/src/service/mail/v1/mail_group/mod.rs
---@@ -121,10 +121,7 @@ impl MailGroupService {
---     ) -> SDKResult<BaseResponse<CreateMailGroupResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -148,10 +145,7 @@ impl MailGroupService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -175,10 +169,7 @@ impl MailGroupService {
---     ) -> SDKResult<BaseResponse<UpdateMailGroupResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -203,10 +194,7 @@ impl MailGroupService {
---     ) -> SDKResult<BaseResponse<UpdateMailGroupResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -230,10 +218,7 @@ impl MailGroupService {
---     ) -> SDKResult<BaseResponse<GetMailGroupResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -257,16 +242,13 @@ impl MailGroupService {
---     ) -> SDKResult<BaseResponse<ListMailGroupsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/mail_group_manager/mod.rs b/src/service/mail/v1/mail_group_manager/mod.rs
---index 5d5616a..851a207 100644
------ a/src/service/mail/v1/mail_group_manager/mod.rs
---+++ b/src/service/mail/v1/mail_group_manager/mod.rs
---@@ -81,10 +81,7 @@ impl MailGroupManagerService {
---     ) -> SDKResult<BaseResponse<BatchCreateManagersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -109,10 +106,7 @@ impl MailGroupManagerService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -138,16 +132,13 @@ impl MailGroupManagerService {
---     ) -> SDKResult<BaseResponse<ListManagersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/message/mod.rs b/src/service/mail/v1/message/mod.rs
---index 56ce44d..e81da14 100644
------ a/src/service/mail/v1/message/mod.rs
---+++ b/src/service/mail/v1/message/mod.rs
---@@ -134,10 +134,7 @@ impl MessageService {
---     ) -> SDKResult<BaseResponse<SendMessageResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -177,10 +174,7 @@ impl MessageService {
---     ) -> SDKResult<BaseResponse<GetMessageResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -225,19 +219,16 @@ impl MessageService {
---     ) -> SDKResult<BaseResponse<ListMessagesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(folder_id) = folder_id {
----            query_params.insert("folder_id".to_string(), folder_id);
---+            query_params.insert("folder_id", folder_id);
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -279,18 +270,15 @@ impl MessageService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<GetMessagesByCardResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("card_id".to_string(), card_id.to_string());
---+        query_params.insert("card_id", card_id.to_string());
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mail/v1/rule/mod.rs b/src/service/mail/v1/rule/mod.rs
---index a66f431..47e2322 100644
------ a/src/service/mail/v1/rule/mod.rs
---+++ b/src/service/mail/v1/rule/mod.rs
---@@ -118,10 +118,7 @@ impl RuleService {
---     ) -> SDKResult<BaseResponse<CreateRuleResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -146,10 +143,7 @@ impl RuleService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -176,10 +170,7 @@ impl RuleService {
---     ) -> SDKResult<BaseResponse<UpdateRuleResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -207,16 +198,13 @@ impl RuleService {
---     ) -> SDKResult<BaseResponse<ListRulesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -240,10 +228,7 @@ impl RuleService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/mdm/country_region/mod.rs b/src/service/mdm/country_region/mod.rs
---index 584b8ec..0ed5b5e 100644
------ a/src/service/mdm/country_region/mod.rs
---+++ b/src/service/mdm/country_region/mod.rs
---@@ -80,29 +80,27 @@ impl CountryRegionService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(region_type) = request.region_type {
---             api_req
---                 .query_params
----                .insert("region_type".to_string(), region_type);
---+                .insert("region_type", region_type);
---         }
--- 
---         if let Some(name) = request.name {
----            api_req.query_params.insert("name".to_string(), name);
---+            api_req.query_params.insert("name", name);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/minutes/v1/media/mod.rs b/src/service/minutes/v1/media/mod.rs
---index 2b7de34..7e276ca 100644
------ a/src/service/minutes/v1/media/mod.rs
---+++ b/src/service/minutes/v1/media/mod.rs
---@@ -47,10 +47,7 @@ impl MediaService {
---     ) -> SDKResult<BaseResponse<GetMediaResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/minutes/v1/minute/mod.rs b/src/service/minutes/v1/minute/mod.rs
---index 0365c89..9b9768c 100644
------ a/src/service/minutes/v1/minute/mod.rs
---+++ b/src/service/minutes/v1/minute/mod.rs
---@@ -47,10 +47,7 @@ impl MinuteService {
---     ) -> SDKResult<BaseResponse<GetMinuteResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/minutes/v1/statistics/mod.rs b/src/service/minutes/v1/statistics/mod.rs
---index ccd3723..de9cf91 100644
------ a/src/service/minutes/v1/statistics/mod.rs
---+++ b/src/service/minutes/v1/statistics/mod.rs
---@@ -47,10 +47,7 @@ impl StatisticsService {
---     ) -> SDKResult<BaseResponse<GetStatisticsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/minutes/v1/transcript/mod.rs b/src/service/minutes/v1/transcript/mod.rs
---index 501d714..8d1fa69 100644
------ a/src/service/minutes/v1/transcript/mod.rs
---+++ b/src/service/minutes/v1/transcript/mod.rs
---@@ -47,10 +47,7 @@ impl TranscriptService {
---     ) -> SDKResult<BaseResponse<GetTranscriptResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/moments/post/mod.rs b/src/service/moments/post/mod.rs
---index 58ece6b..c009a2a 100644
------ a/src/service/moments/post/mod.rs
---+++ b/src/service/moments/post/mod.rs
---@@ -70,9 +70,7 @@ impl PostService {
--- 
---         // 添加查询参数
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/okr/mod.rs b/src/service/okr/mod.rs
---index 2a8ffd2..97be14e 100644
------ a/src/service/okr/mod.rs
---+++ b/src/service/okr/mod.rs
---@@ -105,8 +105,6 @@ pub mod progress_record;
--- /// 复盘管理功能
--- pub mod review;
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- use okr::OkrContentService;
---@@ -215,12 +213,12 @@ pub struct OkrService {
--- }
--- 
--- impl OkrService {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            period: PeriodService::new(Arc::clone(&config)),
----            period_rule: PeriodRuleService::new(Arc::clone(&config)),
----            okr: OkrContentService::new(Arc::clone(&config)),
----            progress_record: ProgressRecordService::new(Arc::clone(&config)),
---+            period: PeriodService::new(config.clone()),
---+            period_rule: PeriodRuleService::new(config.clone()),
---+            okr: OkrContentService::new(config.clone()),
---+            progress_record: ProgressRecordService::new(config.clone()),
---             review: ReviewService::new(config),
---         }
---     }
---diff --git a/src/service/okr/okr/mod.rs b/src/service/okr/okr/mod.rs
---index 04d3f74..127f99a 100644
------ a/src/service/okr/okr/mod.rs
---+++ b/src/service/okr/okr/mod.rs
---@@ -114,31 +114,27 @@ impl OkrContentService {
--- 
---         // 添加查询参数
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert("user_id", user_id);
---         }
--- 
---         if let Some(period_id) = request.period_id {
---             api_req
---                 .query_params
----                .insert("period_id".to_string(), period_id);
---+                .insert("period_id", period_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req
----                .query_params
----                .insert("status".to_string(), format!("{status:?}"));
---+            api_req.query_params.insert("status", format!("{status:?}"));
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/okr/period/mod.rs b/src/service/okr/period/mod.rs
---index 0dafb3a..8b96b2b 100644
------ a/src/service/okr/period/mod.rs
---+++ b/src/service/okr/period/mod.rs
---@@ -180,21 +180,17 @@ impl PeriodService {
--- 
---         // 添加查询参数
---         if let Some(status) = request.status {
----            api_req
----                .query_params
----                .insert("status".to_string(), format!("{status:?}"));
---+            api_req.query_params.insert("status", format!("{status:?}"));
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/okr/period_rule/mod.rs b/src/service/okr/period_rule/mod.rs
---index 866cc35..d6ccbab 100644
------ a/src/service/okr/period_rule/mod.rs
---+++ b/src/service/okr/period_rule/mod.rs
---@@ -96,25 +96,21 @@ impl PeriodRuleService {
---         if let Some(period_id) = request.period_id {
---             api_req
---                 .query_params
----                .insert("period_id".to_string(), period_id);
---+                .insert("period_id", period_id);
---         }
--- 
---         if let Some(rule_type) = request.rule_type {
----            api_req
----                .query_params
----                .insert("rule_type".to_string(), rule_type);
---+            api_req.query_params.insert("rule_type", rule_type);
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/okr/review/mod.rs b/src/service/okr/review/mod.rs
---index f000b4b..a02b313 100644
------ a/src/service/okr/review/mod.rs
---+++ b/src/service/okr/review/mod.rs
---@@ -99,39 +99,37 @@ impl ReviewService {
---         if let Some(period_id) = request.period_id {
---             api_req
---                 .query_params
----                .insert("period_id".to_string(), period_id);
---+                .insert("period_id", period_id);
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert("user_id", user_id);
---         }
--- 
---         if let Some(okr_id) = request.okr_id {
----            api_req.query_params.insert("okr_id".to_string(), okr_id);
---+            api_req.query_params.insert("okr_id", okr_id);
---         }
--- 
---         if let Some(min_score) = request.min_score {
---             api_req
---                 .query_params
----                .insert("min_score".to_string(), min_score.to_string());
---+                .insert("min_score", min_score.to_string());
---         }
--- 
---         if let Some(max_score) = request.max_score {
---             api_req
---                 .query_params
----                .insert("max_score".to_string(), max_score.to_string());
---+                .insert("max_score", max_score.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/acct_item/mod.rs b/src/service/payroll/acct_item/mod.rs
---index 612ced9..8c75679 100644
------ a/src/service/payroll/acct_item/mod.rs
---+++ b/src/service/payroll/acct_item/mod.rs
---@@ -96,29 +96,27 @@ impl AcctItemService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(item_type) = request.item_type {
---             api_req
---                 .query_params
----                .insert("item_type".to_string(), item_type);
---+                .insert("item_type", item_type);
---         }
--- 
---         if let Some(paygroup_id) = request.paygroup_id {
---             api_req
---                 .query_params
----                .insert("paygroup_id".to_string(), paygroup_id);
---+                .insert("paygroup_id", paygroup_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/cost_allocation_plan/mod.rs b/src/service/payroll/cost_allocation_plan/mod.rs
---index 3ee02c7..985df44 100644
------ a/src/service/payroll/cost_allocation_plan/mod.rs
---+++ b/src/service/payroll/cost_allocation_plan/mod.rs
---@@ -95,23 +95,21 @@ impl CostAllocationPlanService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(plan_type) = request.plan_type {
---             api_req
---                 .query_params
----                .insert("plan_type".to_string(), plan_type);
---+                .insert("plan_type", plan_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/cost_allocation_report/mod.rs b/src/service/payroll/cost_allocation_report/mod.rs
---index dab96b8..51b3747 100644
------ a/src/service/payroll/cost_allocation_report/mod.rs
---+++ b/src/service/payroll/cost_allocation_report/mod.rs
---@@ -100,40 +100,34 @@ impl CostAllocationReportService {
---         // 添加查询参数
---         api_req
---             .query_params
----            .insert("start_date".to_string(), request.start_date);
---+            .insert("start_date", request.start_date);
--- 
----        api_req
----            .query_params
----            .insert("end_date".to_string(), request.end_date);
---+        api_req.query_params.insert("end_date", request.end_date);
--- 
---         if let Some(cost_center_id) = request.cost_center_id {
---             api_req
---                 .query_params
----                .insert("cost_center_id".to_string(), cost_center_id);
---+                .insert("cost_center_id", cost_center_id);
---         }
--- 
---         if let Some(department_id) = request.department_id {
----            api_req
----                .query_params
----                .insert("department_id".to_string(), department_id);
---+            api_req.query_params.insert("department_id", department_id);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(report_type) = request.report_type {
---             api_req
---                 .query_params
----                .insert("report_type".to_string(), report_type);
---+                .insert("report_type", report_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/datasource/mod.rs b/src/service/payroll/datasource/mod.rs
---index 64e2f89..d726446 100644
------ a/src/service/payroll/datasource/mod.rs
---+++ b/src/service/payroll/datasource/mod.rs
---@@ -91,17 +91,15 @@ impl DatasourceService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/datasource_record/mod.rs b/src/service/payroll/datasource_record/mod.rs
---index 7fec10b..07fa35a 100644
------ a/src/service/payroll/datasource_record/mod.rs
---+++ b/src/service/payroll/datasource_record/mod.rs
---@@ -101,8 +101,8 @@ impl DatasourceRecordService {
---     /// use std::collections::HashMap;
---     ///
---     /// let mut field_values = HashMap::new();
----    /// field_values.insert("base_salary".to_string(), serde_json::Value::Number(serde_json::Number::from(10000)));
----    /// field_values.insert("overtime_hours".to_string(), serde_json::Value::Number(serde_json::Number::from(20)));
---+    /// field_values.insert("base_salary", serde_json::Value::Number(serde_json::Number::from(10000)));
---+    /// field_values.insert("overtime_hours", serde_json::Value::Number(serde_json::Number::from(20)));
---     ///
---     /// let record = DatasourceRecord {
---     ///     record_id: None,
---@@ -141,9 +141,7 @@ impl DatasourceRecordService {
--- 
---         // 添加查询参数
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -212,21 +210,17 @@ impl DatasourceRecordService {
--- 
---         // 添加查询参数
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/paygroup/mod.rs b/src/service/payroll/paygroup/mod.rs
---index 825d40e..4d8c08e 100644
------ a/src/service/payroll/paygroup/mod.rs
---+++ b/src/service/payroll/paygroup/mod.rs
---@@ -93,17 +93,15 @@ impl PaygroupService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/payment_activity/mod.rs b/src/service/payroll/payment_activity/mod.rs
---index 071983f..e6b8441 100644
------ a/src/service/payroll/payment_activity/mod.rs
---+++ b/src/service/payroll/payment_activity/mod.rs
---@@ -116,35 +116,33 @@ impl PaymentActivityService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(paygroup_id) = request.paygroup_id {
---             api_req
---                 .query_params
----                .insert("paygroup_id".to_string(), paygroup_id);
---+                .insert("paygroup_id", paygroup_id);
---         }
--- 
---         if let Some(period_start) = request.period_start {
---             api_req
---                 .query_params
----                .insert("period_start".to_string(), period_start);
---+                .insert("period_start", period_start);
---         }
--- 
---         if let Some(period_end) = request.period_end {
---             api_req
---                 .query_params
----                .insert("period_end".to_string(), period_end);
---+                .insert("period_end", period_end);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/payroll/payment_detail/mod.rs b/src/service/payroll/payment_detail/mod.rs
---index 9dc03b7..ea143b2 100644
------ a/src/service/payroll/payment_detail/mod.rs
---+++ b/src/service/payroll/payment_detail/mod.rs
---@@ -115,31 +115,25 @@ impl PaymentDetailService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(employee_id) = request.employee_id {
----            api_req
----                .query_params
----                .insert("employee_id".to_string(), employee_id);
---+            api_req.query_params.insert("employee_id", employee_id);
---         }
--- 
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         if let Some(department_id_type) = request.department_id_type {
---             api_req
---                 .query_params
----                .insert("department_id_type".to_string(), department_id_type);
---+                .insert("department_id_type", department_id_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -208,9 +202,7 @@ impl PaymentDetailService {
--- 
---         // 添加查询参数
---         if let Some(user_id_type) = request.user_id_type {
----            api_req
----                .query_params
----                .insert("user_id_type".to_string(), user_id_type);
---+            api_req.query_params.insert("user_id_type", user_id_type);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/performance/review_config/mod.rs b/src/service/performance/review_config/mod.rs
---index ff95dfd..3feed21 100644
------ a/src/service/performance/review_config/mod.rs
---+++ b/src/service/performance/review_config/mod.rs
---@@ -7,6 +7,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -47,8 +48,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<SemesterListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/semesters"
----                .to_string(),
---+            api_path: Endpoints::PERFORMANCE_SEMESTER_LIST.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -56,15 +56,13 @@ impl ReviewConfigService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -89,8 +87,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<ActivityQueryResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/activities"
----                .to_string(),
---+            api_path: Endpoints::PERFORMANCE_ACTIVITIES_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -98,21 +95,17 @@ impl ReviewConfigService {
--- 
---         // 添加查询参数
---         if let Some(semester_id) = request.semester_id {
----            api_req
----                .query_params
----                .insert("semester_id".to_string(), semester_id);
---+            api_req.query_params.insert("semester_id", semester_id);
---         }
--- 
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -137,7 +130,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<AdditionalInfoQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/additional_information/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_ADDITIONAL_INFO_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -165,7 +158,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<AdditionalInfoImportResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/additional_information/import".to_string(),
---+            api_path: Endpoints::PERFORMANCE_ADDITIONAL_INFO_IMPORT.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -193,7 +186,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<AdditionalInfoDeleteResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/additional_information/delete".to_string(),
---+            api_path: Endpoints::PERFORMANCE_ADDITIONAL_INFO_DELETE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -221,7 +214,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<UserGroupWriteResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/user_group_user_rel/write".to_string(),
---+            api_path: Endpoints::PERFORMANCE_USER_GROUP_WRITE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -249,8 +242,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<RevieweeQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/semester_activity/reviewees/query"
----                .to_string(),
---+            api_path: Endpoints::PERFORMANCE_REVIEWEES_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -278,7 +270,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<ReviewTemplateQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/review_templates/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_REVIEW_TEMPLATES_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -306,7 +298,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<ReviewItemQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/review_items/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_REVIEW_ITEMS_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -334,7 +326,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<TagQuestionConfigQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/tag_questions/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_TAG_QUESTIONS_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -362,7 +354,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<MetricQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/metrics/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_METRICS_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -390,7 +382,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<MetricTemplateQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/metric_templates/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_METRIC_TEMPLATES_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -418,7 +410,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<MetricFieldQueryResponse>> {
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/performance/v1/review_config/metric_fields/query".to_string(),
---+            api_path: Endpoints::PERFORMANCE_METRIC_FIELDS_QUERY.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: serde_json::to_vec(&request)?,
---             ..Default::default()
---@@ -446,7 +438,7 @@ impl ReviewConfigService {
---     ) -> SDKResult<BaseResponse<MetricTagListResponse>> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/performance/v1/review_config/metric_tags".to_string(),
---+            api_path: Endpoints::PERFORMANCE_METRIC_TAGS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -454,15 +446,13 @@ impl ReviewConfigService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/report/rule/mod.rs b/src/service/report/rule/mod.rs
---index 88f5b65..d43b63a 100644
------ a/src/service/report/rule/mod.rs
---+++ b/src/service/report/rule/mod.rs
---@@ -52,45 +52,41 @@ impl RuleService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(rule_type) = request.rule_type {
----            api_req
----                .query_params
----                .insert("rule_type".to_string(), rule_type);
---+            api_req.query_params.insert("rule_type", rule_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(creator) = request.creator {
----            api_req.query_params.insert("creator".to_string(), creator);
---+            api_req.query_params.insert("creator", creator);
---         }
--- 
---         if let Some(name) = request.name {
----            api_req.query_params.insert("name".to_string(), name);
---+            api_req.query_params.insert("name", name);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert("start_time", start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert("end_time", end_time.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/report/task/mod.rs b/src/service/report/task/mod.rs
---index f721ae1..d07aaa8 100644
------ a/src/service/report/task/mod.rs
---+++ b/src/service/report/task/mod.rs
---@@ -52,47 +52,45 @@ impl TaskService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(rule_id) = request.rule_id {
----            api_req.query_params.insert("rule_id".to_string(), rule_id);
---+            api_req.query_params.insert("rule_id", rule_id);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         if let Some(task_type) = request.task_type {
---             api_req
---                 .query_params
----                .insert("task_type".to_string(), task_type);
---+                .insert("task_type", task_type);
---         }
--- 
---         if let Some(reporter_id) = request.reporter_id {
---             api_req
---                 .query_params
----                .insert("reporter_id".to_string(), reporter_id);
---+                .insert("reporter_id", reporter_id);
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert("start_time", start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert("end_time", end_time.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/search/mod.rs b/src/service/search/mod.rs
---index 417eedc..2139468 100644
------ a/src/service/search/mod.rs
---+++ b/src/service/search/mod.rs
---@@ -76,8 +76,6 @@
--- //! - 🔐 细粒度权限控制
--- //! - 📊 丰富的搜索分析
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- /// 搜索服务 v1 版本
---@@ -133,10 +131,10 @@ impl SearchService {
---     ///
---     /// # 返回值
---     /// 配置完成的搜索服务实例，包含v1和v2版本API
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            v1: v1::V1::new((*config).clone()),
----            v2: v2::V2::new((*config).clone()),
---+            v1: v1::V1::new(config.clone()),
---+            v2: v2::V2::new(config.clone()),
---         }
---     }
--- }
---diff --git a/src/service/search/v1/user.rs b/src/service/search/v1/user.rs
---index d525d41..b3fd349 100644
------ a/src/service/search/v1/user.rs
---+++ b/src/service/search/v1/user.rs
---@@ -110,7 +110,7 @@ impl SearchUserRequestBuilder {
---         self.search_user_request
---             .api_request
---             .query_params
----            .insert("query".to_string(), query.to_string());
---+            .insert("query", query.to_string());
---         self
---     }
--- 
---@@ -131,7 +131,7 @@ impl SearchUserRequestBuilder {
---         self.search_user_request
---             .api_request
---             .query_params
----            .insert("page_size".to_string(), page_size.to_string());
---+            .insert("page_size", page_size.to_string());
---         self
---     }
--- 
---@@ -154,7 +154,7 @@ impl SearchUserRequestBuilder {
---         self.search_user_request
---             .api_request
---             .query_params
----            .insert("page_token".to_string(), token);
---+            .insert("page_token", token);
---         self
---     }
--- 
---@@ -284,7 +284,7 @@ impl SearchUserIterator<'_> {
---                             self.request
---                                 .api_request
---                                 .query_params
----                                .insert("page_token".to_string(), token);
---+                                .insert("page_token", token);
---                             Some(data.users)
---                         } else {
---                             // has_more is true but no page_token. Stop iterating to avoid panic.
---diff --git a/src/service/search/v2/data_source/mod.rs b/src/service/search/v2/data_source/mod.rs
---index 1a790eb..7216560 100644
------ a/src/service/search/v2/data_source/mod.rs
---+++ b/src/service/search/v2/data_source/mod.rs
---@@ -207,12 +207,10 @@ impl DataSourceService {
---             if let Some(page_size) = req.page_size {
---                 api_req
---                     .query_params
----                    .insert("page_size".to_string(), page_size.to_string());
---+                    .insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = req.page_token {
----                api_req
----                    .query_params
----                    .insert("page_token".to_string(), page_token);
---+                api_req.query_params.insert("page_token", page_token);
---             }
---         }
--- 
---diff --git a/src/service/search/v2/mod.rs b/src/service/search/v2/mod.rs
---index 36f1c0e..23e7f3b 100644
------ a/src/service/search/v2/mod.rs
---+++ b/src/service/search/v2/mod.rs
---@@ -4,8 +4,6 @@ pub mod models;
--- pub mod schema;
--- pub mod suite_search;
--- 
----use std::sync::Arc;
----
--- use crate::core::config::Config;
--- 
--- /// Search API v2版本服务
---@@ -21,11 +19,11 @@ pub struct V2 {
--- }
--- 
--- impl V2 {
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            suite_search: suite_search::SuiteSearchService::new(Arc::clone(&config)),
----            data_source: data_source::DataSourceService::new(Arc::clone(&config)),
----            data_item: data_item::DataItemService::new(Arc::clone(&config)),
---+            suite_search: suite_search::SuiteSearchService::new(config.clone()),
---+            data_source: data_source::DataSourceService::new(config.clone()),
---+            data_item: data_item::DataItemService::new(config.clone()),
---             schema: schema::SchemaService::new(config),
---         }
---     }
---diff --git a/src/service/search/v2/suite_search/mod.rs b/src/service/search/v2/suite_search/mod.rs
---index 605a2ff..2084510 100644
------ a/src/service/search/v2/suite_search/mod.rs
---+++ b/src/service/search/v2/suite_search/mod.rs
---@@ -82,12 +82,12 @@ impl SuiteSearchService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -123,12 +123,12 @@ impl SuiteSearchService {
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = &request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token.clone());
---+                .insert("page_token", page_token.clone());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/security_and_compliance/openapi_log/mod.rs b/src/service/security_and_compliance/openapi_log/mod.rs
---index 8da5d69..4d2405b 100644
------ a/src/service/security_and_compliance/openapi_log/mod.rs
---+++ b/src/service/security_and_compliance/openapi_log/mod.rs
---@@ -44,41 +44,39 @@ impl OpenapiLogService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert("start_time", start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert("end_time", end_time.to_string());
---         }
--- 
---         if let Some(app_ids) = request.app_ids {
----            api_req.query_params.insert("app_ids".to_string(), app_ids);
---+            api_req.query_params.insert("app_ids", app_ids);
---         }
--- 
---         if let Some(apis) = request.apis {
----            api_req.query_params.insert("apis".to_string(), apis);
---+            api_req.query_params.insert("apis", apis);
---         }
--- 
---         if let Some(response_codes) = request.response_codes {
---             api_req
---                 .query_params
----                .insert("response_codes".to_string(), response_codes);
---+                .insert("response_codes", response_codes);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/task/v2/attachment/mod.rs b/src/service/task/v2/attachment/mod.rs
---index c8d7ce3..cb2ab36 100644
------ a/src/service/task/v2/attachment/mod.rs
---+++ b/src/service/task/v2/attachment/mod.rs
---@@ -8,6 +8,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -92,15 +93,12 @@ impl AttachmentService {
---     ) -> SDKResult<BaseResponse<UploadAttachmentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/task/v2/attachments/upload".to_string(),
---+            api_path: Endpoints::TASK_V2_ATTACHMENTS_UPLOAD.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             body: serde_json::to_vec(&request)?,
---@@ -122,23 +120,20 @@ impl AttachmentService {
---     ) -> SDKResult<BaseResponse<ListAttachmentsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
----        query_params.insert("parent_type".to_string(), parent_type.to_string());
----        query_params.insert("parent_id".to_string(), parent_id.to_string());
---+        query_params.insert("parent_type", parent_type.to_string());
---+        query_params.insert("parent_id", parent_id.to_string());
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/task/v2/attachments".to_string(),
---+            api_path: Endpoints::TASK_V2_ATTACHMENTS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             ..Default::default()
---@@ -156,10 +151,7 @@ impl AttachmentService {
---     ) -> SDKResult<BaseResponse<GetAttachmentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -182,10 +174,7 @@ impl AttachmentService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/comment/mod.rs b/src/service/task/v2/comment/mod.rs
---index 54dd691..fd840ae 100644
------ a/src/service/task/v2/comment/mod.rs
---+++ b/src/service/task/v2/comment/mod.rs
---@@ -110,10 +110,7 @@ impl CommentService {
---     ) -> SDKResult<BaseResponse<CreateCommentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -138,10 +135,7 @@ impl CommentService {
---     ) -> SDKResult<BaseResponse<GetCommentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -166,10 +160,7 @@ impl CommentService {
---     ) -> SDKResult<BaseResponse<UpdateCommentResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -194,10 +185,7 @@ impl CommentService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -222,16 +210,13 @@ impl CommentService {
---     ) -> SDKResult<BaseResponse<ListCommentsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/custom_field/mod.rs b/src/service/task/v2/custom_field/mod.rs
---index e325ec1..ee0532f 100644
------ a/src/service/task/v2/custom_field/mod.rs
---+++ b/src/service/task/v2/custom_field/mod.rs
---@@ -8,6 +8,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -131,15 +132,12 @@ impl CustomFieldService {
---     ) -> SDKResult<BaseResponse<CreateCustomFieldResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/task/v2/custom_fields".to_string(),
---+            api_path: Endpoints::TASK_V2_CUSTOM_FIELDS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             body: serde_json::to_vec(&request)?,
---@@ -158,10 +156,7 @@ impl CustomFieldService {
---     ) -> SDKResult<BaseResponse<GetCustomFieldResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -185,10 +180,7 @@ impl CustomFieldService {
---     ) -> SDKResult<BaseResponse<UpdateCustomFieldResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -215,27 +207,24 @@ impl CustomFieldService {
---     ) -> SDKResult<BaseResponse<ListCustomFieldsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(resource_type) = resource_type {
----            query_params.insert("resource_type".to_string(), resource_type.to_string());
---+            query_params.insert("resource_type", resource_type.to_string());
---         }
---         if let Some(resource_id) = resource_id {
----            query_params.insert("resource_id".to_string(), resource_id.to_string());
---+            query_params.insert("resource_id", resource_id.to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/task/v2/custom_fields".to_string(),
---+            api_path: Endpoints::TASK_V2_CUSTOM_FIELDS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             ..Default::default()
---@@ -254,10 +243,7 @@ impl CustomFieldService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -282,10 +268,7 @@ impl CustomFieldService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/custom_field_option/mod.rs b/src/service/task/v2/custom_field_option/mod.rs
---index 66b065a..32aee14 100644
------ a/src/service/task/v2/custom_field_option/mod.rs
---+++ b/src/service/task/v2/custom_field_option/mod.rs
---@@ -82,10 +82,7 @@ impl CustomFieldOptionService {
---     ) -> SDKResult<BaseResponse<CreateCustomFieldOptionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -111,10 +108,7 @@ impl CustomFieldOptionService {
---     ) -> SDKResult<BaseResponse<UpdateCustomFieldOptionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/section/mod.rs b/src/service/task/v2/section/mod.rs
---index dac0a2d..891a814 100644
------ a/src/service/task/v2/section/mod.rs
---+++ b/src/service/task/v2/section/mod.rs
---@@ -8,6 +8,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -127,15 +128,12 @@ impl SectionService {
---     ) -> SDKResult<BaseResponse<CreateSectionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/task/v2/sections".to_string(),
---+            api_path: Endpoints::TASK_V2_SECTIONS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             body: serde_json::to_vec(&request)?,
---@@ -154,10 +152,7 @@ impl SectionService {
---     ) -> SDKResult<BaseResponse<GetSectionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -181,10 +176,7 @@ impl SectionService {
---     ) -> SDKResult<BaseResponse<UpdateSectionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -208,10 +200,7 @@ impl SectionService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -236,22 +225,19 @@ impl SectionService {
---     ) -> SDKResult<BaseResponse<ListSectionsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
----        query_params.insert("tasklist_guid".to_string(), tasklist_guid.to_string());
---+        query_params.insert("tasklist_guid", tasklist_guid.to_string());
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/task/v2/sections".to_string(),
---+            api_path: Endpoints::TASK_V2_SECTIONS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             ..Default::default()
---@@ -279,37 +265,34 @@ impl SectionService {
---     ) -> SDKResult<BaseResponse<SectionTasksResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(completed) = completed {
----            query_params.insert("completed".to_string(), completed.to_string());
---+            query_params.insert("completed", completed.to_string());
---         }
---         if let Some(created_from) = created_from {
----            query_params.insert("created_from".to_string(), created_from.to_string());
---+            query_params.insert("created_from", created_from.to_string());
---         }
---         if let Some(created_to) = created_to {
----            query_params.insert("created_to".to_string(), created_to.to_string());
---+            query_params.insert("created_to", created_to.to_string());
---         }
---         if let Some(updated_from) = updated_from {
----            query_params.insert("updated_from".to_string(), updated_from.to_string());
---+            query_params.insert("updated_from", updated_from.to_string());
---         }
---         if let Some(updated_to) = updated_to {
----            query_params.insert("updated_to".to_string(), updated_to.to_string());
---+            query_params.insert("updated_to", updated_to.to_string());
---         }
---         if let Some(due_from) = due_from {
----            query_params.insert("due_from".to_string(), due_from.to_string());
---+            query_params.insert("due_from", due_from.to_string());
---         }
---         if let Some(due_to) = due_to {
----            query_params.insert("due_to".to_string(), due_to.to_string());
---+            query_params.insert("due_to", due_to.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/task/mod.rs b/src/service/task/v2/task/mod.rs
---index c5ec6ea..9c8c399 100644
------ a/src/service/task/v2/task/mod.rs
---+++ b/src/service/task/v2/task/mod.rs
---@@ -8,6 +8,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -311,15 +312,12 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<CreateTaskResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/task/v2/tasks".to_string(),
---+            api_path: Endpoints::TASK_V2_TASKS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             body: serde_json::to_vec(&request)?,
---@@ -339,10 +337,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<UpdateTaskResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -366,10 +361,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<GetTaskResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -392,10 +384,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -427,42 +416,39 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<ListTasksResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(completed) = completed {
----            query_params.insert("completed".to_string(), completed.to_string());
---+            query_params.insert("completed", completed.to_string());
---         }
---         if let Some(created_from) = created_from {
----            query_params.insert("created_from".to_string(), created_from.to_string());
---+            query_params.insert("created_from", created_from.to_string());
---         }
---         if let Some(created_to) = created_to {
----            query_params.insert("created_to".to_string(), created_to.to_string());
---+            query_params.insert("created_to", created_to.to_string());
---         }
---         if let Some(updated_from) = updated_from {
----            query_params.insert("updated_from".to_string(), updated_from.to_string());
---+            query_params.insert("updated_from", updated_from.to_string());
---         }
---         if let Some(updated_to) = updated_to {
----            query_params.insert("updated_to".to_string(), updated_to.to_string());
---+            query_params.insert("updated_to", updated_to.to_string());
---         }
---         if let Some(due_from) = due_from {
----            query_params.insert("due_from".to_string(), due_from.to_string());
---+            query_params.insert("due_from", due_from.to_string());
---         }
---         if let Some(due_to) = due_to {
----            query_params.insert("due_to".to_string(), due_to.to_string());
---+            query_params.insert("due_to", due_to.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/task/v2/tasks".to_string(),
---+            api_path: Endpoints::TASK_V2_TASKS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             ..Default::default()
---@@ -481,10 +467,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<AddTaskMembersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -509,10 +492,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<RemoveTaskMembersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -537,10 +517,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<AddTaskRemindersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -565,10 +542,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<RemoveTaskRemindersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -593,10 +567,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<AddTaskDependenciesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -621,10 +592,7 @@ impl TaskService {
---     ) -> SDKResult<BaseResponse<RemoveTaskDependenciesResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/task_subtask/mod.rs b/src/service/task/v2/task_subtask/mod.rs
---index bc23da1..3d984ad 100644
------ a/src/service/task/v2/task_subtask/mod.rs
---+++ b/src/service/task/v2/task_subtask/mod.rs
---@@ -77,10 +77,7 @@ impl TaskSubtaskService {
---     ) -> SDKResult<BaseResponse<CreateSubtaskResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -106,16 +103,13 @@ impl TaskSubtaskService {
---     ) -> SDKResult<BaseResponse<ListSubtasksResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/task/v2/tasklist/mod.rs b/src/service/task/v2/tasklist/mod.rs
---index 91419df..0b932fe 100644
------ a/src/service/task/v2/tasklist/mod.rs
---+++ b/src/service/task/v2/tasklist/mod.rs
---@@ -8,6 +8,7 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, EmptyResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---         req_option::RequestOption,
---         SDKResult,
---@@ -169,15 +170,12 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<CreateTasklistResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::POST,
----            api_path: "/open-apis/task/v2/tasklists".to_string(),
---+            api_path: Endpoints::TASK_V2_TASKLISTS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             body: serde_json::to_vec(&request)?,
---@@ -196,10 +194,7 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<GetTasklistResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -223,10 +218,7 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<UpdateTasklistResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -250,10 +242,7 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -277,10 +266,7 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<AddTasklistMembersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -305,10 +291,7 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<RemoveTasklistMembersResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -342,37 +325,34 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<TasklistTasksResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
---         if let Some(completed) = completed {
----            query_params.insert("completed".to_string(), completed.to_string());
---+            query_params.insert("completed", completed.to_string());
---         }
---         if let Some(created_from) = created_from {
----            query_params.insert("created_from".to_string(), created_from.to_string());
---+            query_params.insert("created_from", created_from.to_string());
---         }
---         if let Some(created_to) = created_to {
----            query_params.insert("created_to".to_string(), created_to.to_string());
---+            query_params.insert("created_to", created_to.to_string());
---         }
---         if let Some(updated_from) = updated_from {
----            query_params.insert("updated_from".to_string(), updated_from.to_string());
---+            query_params.insert("updated_from", updated_from.to_string());
---         }
---         if let Some(updated_to) = updated_to {
----            query_params.insert("updated_to".to_string(), updated_to.to_string());
---+            query_params.insert("updated_to", updated_to.to_string());
---         }
---         if let Some(due_from) = due_from {
----            query_params.insert("due_from".to_string(), due_from.to_string());
---+            query_params.insert("due_from", due_from.to_string());
---         }
---         if let Some(due_to) = due_to {
----            query_params.insert("due_to".to_string(), due_to.to_string());
---+            query_params.insert("due_to", due_to.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -396,21 +376,18 @@ impl TasklistService {
---     ) -> SDKResult<BaseResponse<ListTasklistsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/task/v2/tasklists".to_string(),
---+            api_path: Endpoints::TASK_V2_TASKLISTS.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             query_params,
---             ..Default::default()
---diff --git a/src/service/task/v2/tasklist_activity_subscription/mod.rs b/src/service/task/v2/tasklist_activity_subscription/mod.rs
---index d6ab22e..d0968ad 100644
------ a/src/service/task/v2/tasklist_activity_subscription/mod.rs
---+++ b/src/service/task/v2/tasklist_activity_subscription/mod.rs
---@@ -120,10 +120,7 @@ impl TasklistActivitySubscriptionService {
---     ) -> SDKResult<BaseResponse<CreateActivitySubscriptionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -150,10 +147,7 @@ impl TasklistActivitySubscriptionService {
---     ) -> SDKResult<BaseResponse<GetActivitySubscriptionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -180,16 +174,13 @@ impl TasklistActivitySubscriptionService {
---     ) -> SDKResult<BaseResponse<ListActivitySubscriptionsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token.to_string());
---+            query_params.insert("page_token", page_token.to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -216,10 +207,7 @@ impl TasklistActivitySubscriptionService {
---     ) -> SDKResult<BaseResponse<UpdateActivitySubscriptionResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -246,10 +234,7 @@ impl TasklistActivitySubscriptionService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/tenant_tag/tag/mod.rs b/src/service/tenant_tag/tag/mod.rs
---index 8dfb5e6..95461c3 100644
------ a/src/service/tenant_tag/tag/mod.rs
---+++ b/src/service/tenant_tag/tag/mod.rs
---@@ -103,10 +103,7 @@ impl TagService {
---     ) -> SDKResult<BaseResponse<CreateTagResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -131,10 +128,7 @@ impl TagService {
---     ) -> SDKResult<BaseResponse<PatchTagResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -160,19 +154,16 @@ impl TagService {
---     ) -> SDKResult<BaseResponse<ListTagResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(tag_type) = tag_type {
----            query_params.insert("tag_type".to_string(), tag_type.as_str().to_string());
---+            query_params.insert("tag_type", tag_type.as_str().to_string());
---         }
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/tenant_tag/tag_binding/mod.rs b/src/service/tenant_tag/tag_binding/mod.rs
---index b449ff5..e92f1b4 100644
------ a/src/service/tenant_tag/tag_binding/mod.rs
---+++ b/src/service/tenant_tag/tag_binding/mod.rs
---@@ -114,23 +114,20 @@ impl TagBindingService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<GetTagBindingResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("entity_id".to_string(), request.entity_id);
----        query_params.insert("entity_type".to_string(), request.entity_type);
---+        query_params.insert("entity_id", request.entity_id);
---+        query_params.insert("entity_type", request.entity_type);
--- 
---         if let Some(tag_id) = request.tag_id {
----            query_params.insert("tag_id".to_string(), tag_id);
---+            query_params.insert("tag_id", tag_id);
---         }
---         if let Some(page_size) = request.page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = request.page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(user_id_type) = request.user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -153,10 +150,7 @@ impl TagBindingService {
---     ) -> SDKResult<BaseResponse<CreateTagBindingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -180,10 +174,7 @@ impl TagBindingService {
---     ) -> SDKResult<BaseResponse<UpdateTagBindingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/trust_party/collaboration_organization/mod.rs b/src/service/trust_party/collaboration_organization/mod.rs
---index 58fd846..f34d869 100644
------ a/src/service/trust_party/collaboration_organization/mod.rs
---+++ b/src/service/trust_party/collaboration_organization/mod.rs
---@@ -55,15 +55,13 @@ impl CollaborationOrganizationService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -222,15 +220,13 @@ impl CollaborationOrganizationService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---@@ -263,19 +259,17 @@ impl CollaborationOrganizationService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/trust_party/searchable_visible_rules/mod.rs b/src/service/trust_party/searchable_visible_rules/mod.rs
---index 2ac1ed2..28fbf30 100644
------ a/src/service/trust_party/searchable_visible_rules/mod.rs
---+++ b/src/service/trust_party/searchable_visible_rules/mod.rs
---@@ -110,29 +110,25 @@ impl SearchableVisibleRulesService {
--- 
---         // 添加查询参数
---         if let Some(page_token) = request.page_token {
----            api_req
----                .query_params
----                .insert("page_token".to_string(), page_token);
---+            api_req.query_params.insert("page_token", page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert("page_size", page_size.to_string());
---         }
--- 
---         if let Some(org_id) = request.org_id {
----            api_req.query_params.insert("org_id".to_string(), org_id);
---+            api_req.query_params.insert("org_id", org_id);
---         }
--- 
---         if let Some(rule_type) = request.rule_type {
----            api_req
----                .query_params
----                .insert("rule_type".to_string(), rule_type);
---+            api_req.query_params.insert("rule_type", rule_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert("status", status);
---         }
--- 
---         Transport::request(api_req, &self.config, option).await
---diff --git a/src/service/vc/v1/meeting/mod.rs b/src/service/vc/v1/meeting/mod.rs
---index e5d9cde..a69c82a 100644
------ a/src/service/vc/v1/meeting/mod.rs
---+++ b/src/service/vc/v1/meeting/mod.rs
---@@ -142,10 +142,7 @@ impl MeetingService {
---     ) -> SDKResult<BaseResponse<InviteMeetingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -170,10 +167,7 @@ impl MeetingService {
---     ) -> SDKResult<BaseResponse<KickoutMeetingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -198,10 +192,7 @@ impl MeetingService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -225,10 +216,7 @@ impl MeetingService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -251,10 +239,7 @@ impl MeetingService {
---     ) -> SDKResult<BaseResponse<GetMeetingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -278,22 +263,19 @@ impl MeetingService {
---         option: Option<RequestOption>,
---     ) -> SDKResult<BaseResponse<ListMeetingsByNoResponse>> {
---         let mut query_params = HashMap::new();
----        query_params.insert("meeting_no".to_string(), meeting_no.to_string());
----        query_params.insert("start_time".to_string(), start_time.to_string());
----        query_params.insert("end_time".to_string(), end_time.to_string());
---+        query_params.insert("meeting_no", meeting_no.to_string());
---+        query_params.insert("start_time", start_time.to_string());
---+        query_params.insert("end_time", end_time.to_string());
--- 
---         if let Some(params) = params {
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---diff --git a/src/service/vc/v1/recording/mod.rs b/src/service/vc/v1/recording/mod.rs
---index e0a491a..bfc66a7 100644
------ a/src/service/vc/v1/recording/mod.rs
---+++ b/src/service/vc/v1/recording/mod.rs
---@@ -91,10 +91,7 @@ impl RecordingService {
---     ) -> SDKResult<BaseResponse<StartRecordingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -118,10 +115,7 @@ impl RecordingService {
---     ) -> SDKResult<BaseResponse<StopRecordingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -144,10 +138,7 @@ impl RecordingService {
---     ) -> SDKResult<BaseResponse<GetRecordingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -171,10 +162,7 @@ impl RecordingService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/vc/v1/reserve/mod.rs b/src/service/vc/v1/reserve/mod.rs
---index 143b5f1..612e37e 100644
------ a/src/service/vc/v1/reserve/mod.rs
---+++ b/src/service/vc/v1/reserve/mod.rs
---@@ -128,10 +128,7 @@ impl ReserveService {
---     ) -> SDKResult<BaseResponse<ApplyReserveResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -155,10 +152,7 @@ impl ReserveService {
---     ) -> SDKResult<BaseResponse<EmptyResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -182,10 +176,7 @@ impl ReserveService {
---     ) -> SDKResult<BaseResponse<UpdateReserveResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -209,10 +200,7 @@ impl ReserveService {
---     ) -> SDKResult<BaseResponse<GetReserveResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -235,10 +223,7 @@ impl ReserveService {
---     ) -> SDKResult<BaseResponse<GetActiveMeetingResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---diff --git a/src/service/vc/v1/room/mod.rs b/src/service/vc/v1/room/mod.rs
---index 94e5a8d..2399432 100644
------ a/src/service/vc/v1/room/mod.rs
---+++ b/src/service/vc/v1/room/mod.rs
---@@ -151,10 +151,7 @@ impl RoomService {
---     ) -> SDKResult<BaseResponse<CreateRoomResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -181,15 +178,12 @@ impl RoomService {
---         let mut query_params = HashMap::new();
---         if let Some(room_id_type) = room_id_type {
---             query_params.insert(
----                "room_id_type".to_string(),
---+                "room_id_type",
---                 room_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -215,15 +209,12 @@ impl RoomService {
---         let mut query_params = HashMap::new();
---         if let Some(room_id_type) = room_id_type {
---             query_params.insert(
----                "room_id_type".to_string(),
---+                "room_id_type",
---                 room_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -248,15 +239,12 @@ impl RoomService {
---         let mut query_params = HashMap::new();
---         if let Some(room_id_type) = room_id_type {
---             query_params.insert(
----                "room_id_type".to_string(),
---+                "room_id_type",
---                 room_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -281,22 +269,19 @@ impl RoomService {
---     ) -> SDKResult<BaseResponse<ListRoomsResponse>> {
---         let mut query_params = HashMap::new();
---         if let Some(page_size) = page_size {
----            query_params.insert("page_size".to_string(), page_size.to_string());
---+            query_params.insert("page_size", page_size.to_string());
---         }
---         if let Some(page_token) = page_token {
----            query_params.insert("page_token".to_string(), page_token);
---+            query_params.insert("page_token", page_token);
---         }
---         if let Some(room_id_type) = room_id_type {
---             query_params.insert(
----                "room_id_type".to_string(),
---+                "room_id_type",
---                 room_id_type.as_str().to_string(),
---             );
---         }
---         if let Some(user_id_type) = user_id_type {
----            query_params.insert(
----                "user_id_type".to_string(),
----                user_id_type.as_str().to_string(),
----            );
---+            query_params.insert("user_id_type", user_id_type.as_str().to_string());
---         }
--- 
---         let api_req = ApiRequest {
---@@ -319,28 +304,25 @@ impl RoomService {
---         let mut query_params = HashMap::new();
---         if let Some(params) = params {
---             if let Some(keyword) = params.keyword {
----                query_params.insert("keyword".to_string(), keyword);
---+                query_params.insert("keyword", keyword);
---             }
---             if let Some(room_ids) = params.room_ids {
----                query_params.insert("room_ids".to_string(), room_ids.join(","));
---+                query_params.insert("room_ids", room_ids.join(","));
---             }
---             if let Some(page_size) = params.page_size {
----                query_params.insert("page_size".to_string(), page_size.to_string());
---+                query_params.insert("page_size", page_size.to_string());
---             }
---             if let Some(page_token) = params.page_token {
----                query_params.insert("page_token".to_string(), page_token);
---+                query_params.insert("page_token", page_token);
---             }
---             if let Some(room_id_type) = params.room_id_type {
---                 query_params.insert(
----                    "room_id_type".to_string(),
---+                    "room_id_type",
---                     room_id_type.as_str().to_string(),
---                 );
---             }
---             if let Some(user_id_type) = params.user_id_type {
----                query_params.insert(
----                    "user_id_type".to_string(),
----                    user_id_type.as_str().to_string(),
----                );
---+                query_params.insert("user_id_type", user_id_type.as_str().to_string());
---             }
---         }
--- 
---diff --git a/src/service/workplace/app_recommend/mod.rs b/src/service/workplace/app_recommend/mod.rs
---index 22055b9..ad74738 100644
------ a/src/service/workplace/app_recommend/mod.rs
---+++ b/src/service/workplace/app_recommend/mod.rs
---@@ -7,7 +7,9 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---+        query_params::QueryParams,
---         req_option::RequestOption,
---         standard_response::StandardResponse,
---         SDKResult,
---@@ -45,7 +47,7 @@ impl AppRecommendService {
---     ) -> SDKResult<FavouriteAppsResponse> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/workplace/v1/app_recommend_rule/favourite".to_string(),
---+            api_path: Endpoints::WORKPLACE_APP_RECOMMEND_FAVOURITE.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -55,17 +57,17 @@ impl AppRecommendService {
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         let api_resp: BaseResponse<FavouriteAppsResponse> =
---@@ -92,7 +94,7 @@ impl AppRecommendService {
---     ) -> SDKResult<RecommendedAppsResponse> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/workplace/v1/app_recommend_rule/recommend".to_string(),
---+            api_path: Endpoints::WORKPLACE_APP_RECOMMEND_RECOMMEND.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -102,23 +104,23 @@ impl AppRecommendService {
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         if let Some(department_id) = request.department_id {
---             api_req
---                 .query_params
----                .insert("department_id".to_string(), department_id);
---+                .insert(QueryParams::DEPARTMENT_ID, department_id);
---         }
--- 
---         let api_resp: BaseResponse<RecommendedAppsResponse> =
---@@ -145,7 +147,7 @@ impl AppRecommendService {
---     ) -> SDKResult<RecommendRulesListResponse> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/workplace/v1/app_recommend_rule/list".to_string(),
---+            api_path: Endpoints::WORKPLACE_APP_RECOMMEND_LIST.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -155,23 +157,23 @@ impl AppRecommendService {
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(rule_type) = request.rule_type {
---             api_req
---                 .query_params
----                .insert("rule_type".to_string(), rule_type);
---+                .insert(QueryParams::RULE_TYPE, rule_type);
---         }
--- 
---         if let Some(status) = request.status {
----            api_req.query_params.insert("status".to_string(), status);
---+            api_req.query_params.insert(QueryParams::STATUS, status);
---         }
--- 
---         let api_resp: BaseResponse<RecommendRulesListResponse> =
---diff --git a/src/service/workplace/mod.rs b/src/service/workplace/mod.rs
---index c35702e..838fc66 100644
------ a/src/service/workplace/mod.rs
---+++ b/src/service/workplace/mod.rs
---@@ -44,8 +44,6 @@ pub mod app_recommend;
--- pub mod models;
--- pub mod workplace_access_data;
--- 
----use std::sync::Arc;
----
--- use crate::{
---     core::config::Config,
---     service::workplace::{
---@@ -65,9 +63,9 @@ pub struct WorkplaceService {
--- 
--- impl WorkplaceService {
---     /// 创建工作台服务实例
----    pub fn new(config: Arc<Config>) -> Self {
---+    pub fn new(config: Config) -> Self {
---         Self {
----            workplace_access_data: WorkplaceAccessDataService::new(Arc::clone(&config)),
---+            workplace_access_data: WorkplaceAccessDataService::new(config.clone()),
---             app_recommend: AppRecommendService::new(config),
---         }
---     }
---diff --git a/src/service/workplace/workplace_access_data/mod.rs b/src/service/workplace/workplace_access_data/mod.rs
---index 0ce84ec..3241512 100644
------ a/src/service/workplace/workplace_access_data/mod.rs
---+++ b/src/service/workplace/workplace_access_data/mod.rs
---@@ -7,7 +7,9 @@ use crate::{
---         api_resp::{ApiResponseTrait, BaseResponse, ResponseFormat},
---         config::Config,
---         constants::AccessTokenType,
---+        endpoints::Endpoints,
---         http::Transport,
---+        query_params::QueryParams,
---         req_option::RequestOption,
---         standard_response::StandardResponse,
---         SDKResult,
---@@ -48,7 +50,7 @@ impl WorkplaceAccessDataService {
---     ) -> SDKResult<AccessDataSearchResponse> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/workplace/v1/workplace_access_data/search".to_string(),
---+            api_path: Endpoints::WORKPLACE_ACCESS_DATA_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -58,41 +60,41 @@ impl WorkplaceAccessDataService {
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert(QueryParams::START_TIME, start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert(QueryParams::END_TIME, end_time.to_string());
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         if let Some(department_id) = request.department_id {
---             api_req
---                 .query_params
----                .insert("department_id".to_string(), department_id);
---+                .insert(QueryParams::DEPARTMENT_ID, department_id);
---         }
--- 
---         if let Some(access_type) = request.access_type {
---             api_req
---                 .query_params
----                .insert("access_type".to_string(), access_type);
---+                .insert(QueryParams::ACCESS_TYPE, access_type);
---         }
--- 
---         let api_resp: BaseResponse<AccessDataSearchResponse> =
---@@ -119,7 +121,7 @@ impl WorkplaceAccessDataService {
---     ) -> SDKResult<CustomAccessDataSearchResponse> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/workplace/v1/custom_workplace_access_data/search".to_string(),
---+            api_path: Endpoints::WORKPLACE_CUSTOM_ACCESS_DATA_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -129,35 +131,36 @@ impl WorkplaceAccessDataService {
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert(QueryParams::START_TIME, start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert(QueryParams::END_TIME, end_time.to_string());
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         if let Some(custom_workplace_id) = request.custom_workplace_id {
----            api_req
----                .query_params
----                .insert("custom_workplace_id".to_string(), custom_workplace_id);
---+            api_req.query_params.insert(
---+                QueryParams::CUSTOM_WORKPLACE_ID,
---+                custom_workplace_id,
---+            );
---         }
--- 
---         let api_resp: BaseResponse<CustomAccessDataSearchResponse> =
---@@ -184,8 +187,7 @@ impl WorkplaceAccessDataService {
---     ) -> SDKResult<CustomWidgetAccessDataSearchResponse> {
---         let mut api_req = ApiRequest {
---             http_method: Method::GET,
----            api_path: "/open-apis/workplace/v1/custom_workplace_widget_access_data/search"
----                .to_string(),
---+            api_path: Endpoints::WORKPLACE_WIDGET_ACCESS_DATA_SEARCH.to_string(),
---             supported_access_token_types: vec![AccessTokenType::Tenant, AccessTokenType::User],
---             body: vec![],
---             ..Default::default()
---@@ -195,41 +197,42 @@ impl WorkplaceAccessDataService {
---         if let Some(page_token) = request.page_token {
---             api_req
---                 .query_params
----                .insert("page_token".to_string(), page_token);
---+                .insert(QueryParams::PAGE_TOKEN, page_token);
---         }
--- 
---         if let Some(page_size) = request.page_size {
---             api_req
---                 .query_params
----                .insert("page_size".to_string(), page_size.to_string());
---+                .insert(QueryParams::PAGE_SIZE, page_size.to_string());
---         }
--- 
---         if let Some(start_time) = request.start_time {
---             api_req
---                 .query_params
----                .insert("start_time".to_string(), start_time.to_string());
---+                .insert(QueryParams::START_TIME, start_time.to_string());
---         }
--- 
---         if let Some(end_time) = request.end_time {
---             api_req
---                 .query_params
----                .insert("end_time".to_string(), end_time.to_string());
---+                .insert(QueryParams::END_TIME, end_time.to_string());
---         }
--- 
---         if let Some(user_id) = request.user_id {
----            api_req.query_params.insert("user_id".to_string(), user_id);
---+            api_req.query_params.insert(QueryParams::USER_ID, user_id);
---         }
--- 
---         if let Some(custom_workplace_id) = request.custom_workplace_id {
----            api_req
----                .query_params
----                .insert("custom_workplace_id".to_string(), custom_workplace_id);
---+            api_req.query_params.insert(
---+                QueryParams::CUSTOM_WORKPLACE_ID,
---+                custom_workplace_id,
---+            );
---         }
--- 
---         if let Some(widget_id) = request.widget_id {
---             api_req
---                 .query_params
----                .insert("widget_id".to_string(), widget_id);
---+                .insert(QueryParams::WIDGET_ID, widget_id);
---         }
--- 
---         let api_resp: BaseResponse<CustomWidgetAccessDataSearchResponse> =
